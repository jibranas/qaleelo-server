{
    "version": 3,
    "sources": ["components/Buttons.module.css", "components/SidebarData.js", "Contexts/AmazonContext.js", "components/Footer.js", "components/sidebar/HHLogo.png", "components/sidebar/HamburgerButton.js", "components/ChapterProgressBarMini.js", "components/sidebar/SideNavRow.js", "components/sidebar/CourseProgressBar.js", "components/sidebar/SideNavRowLesson.js", "components/sidebar/SideNavRowQuiz.js", "components/sidebar/SideNavContent.js", "components/userAuth/Logout.js", "components/ChapterProgressBar.js", "components/sidebar/SubContainer.js", "components/sidebar/Sidenav.js", "components/sidebar/BackgroundPage.js", "components/sidebar/MainSideNav.js", "components/Button.js", "components/Buttons.js", "components/Example.js", "components/Topic.js", "Contexts/ScoreContext.js", "components/QuizExample.js", "components/ScoreCard.js", "components/quiz sidebar/HHLogo.png", "components/quiz sidebar/QuizSideNavContent.js", "components/quiz sidebar/QuizBackgroundPage.js", "components/quiz sidebar/QuizMainSideNav.js", "components/sidebar/LessonMainSideNav.js", "components/Quiz.js", "components/landingPage/CourseIcon.js", "components/landingPage/CourseStats.js", "components/landingPage/CourseCard.js", "components/landingPage/CourseMenuPage.js", "components/landingPage/CourseContent.js", "components/sidebar/SidenavLandingPage.js", "components/landingPage/CourseLandingPage.js", "components/userAuth/LoginPage.js", "components/userAuth/LogoutMessage.js", "components/LessonExample.js", "components/LottieAnimation.js", "components/Lesson.js", "components/userAuth/GetStarted.js", "components/userAuth/WelcomeMessageOne.js", "components/userAuth/WelcomeMessageTwo.js", "components/userAuth/WelcomeMessageThree.js", "components/userAuth/WelcomeMessageFour.js", "components/LessonExampleDemo.js", "components/LessonDemo.js", "components/userAuth/WelcomeMessageFive.js", "components/userAuth/WelcomeMessageNotifications.js", "components/userAuth/WelcomeCourseCard.js", "components/userAuth/WelcomeCourseMenuPage.js", "components/userAuth/WelcomeMessageCourses.js", "components/userAuth/WelcomeMessageSeven.js", "App.js", "serviceWorkerRegistration.js", "index.js"],
    "names": ["module", "exports", "SidebarData", "AmazonContext", "React", "createContext", "useAmazonContext", "useContext", "AmazonContextProvider", "props", "subContainer", "setSubContainer", "useState", "subContainerEntries", "setSubContainerEntries", "entryStore", "setEntryStore", "topicDatafromBackEnd", "setTopicDatafromBackEnd", "exampleDatafromBackEnd", "setExampleDatafromBackEnd", "topicNumbersListfromBackEnd", "setTopicNumbersListfromBackEnd", "courseTitleUserIsOn", "setCourseTitleUserIsOn", "console", "log", "courseDetails", "setCourseDetails", "selectedLesson", "setSelectedLesson", "progressData", "setProgressData", "navOpen", "setNavOpen", "chapterProgressData", "setChapterProgressData", "unlockedLessons", "setUnlockedLessons", "storedMode", "localStorage", "getItem", "isDarkMode", "setIsDarkMode", "value", "_jsx", "Provider", "children", "styled", "footer", "_templateObject", "_taggedTemplateLiteral", "p", "_templateObject2", "div", "_templateObject3", "a", "_templateObject4", "HamburgerButton", "className", "onClick", "click", "ChapterProgressBarMini", "useEffect", "userEmail", "error", "async", "response", "axios", "get", "params", "data", "fetchProgress", "fetchChapterProgress", "simplifiedChaptersLessonsData", "map", "topicHeader", "entries", "chapter", "chapterNumber", "topicNumber", "chapterTitle", "title", "lessons", "lesson", "lessonNumber", "sectionNumber", "lessonTitle", "flat", "userProgress", "find", "progress", "courseProgress", "lessonProgress", "lastCompletedLesson", "length", "chapterContainingLastCompletedLesson", "some", "lastCompletedLessonIndex", "findIndex", "push", "nextChapterIndex", "nextChapter", "_chapterProgressData$", "chapterProgress", "includes", "nextLesson", "generateunlockedLessons", "unlockedQuizzes", "forEach", "lastLessonNumber", "generateUnlockedQuizzes", "unlockedChapters", "generateUnlockedChapters", "courseProgressData", "chapterProgressDataAgain", "completedLessons", "Set", "completedChapters", "substring", "lastIndexOf", "chapterData", "totalLessonsInChapter", "totalQuizzesCompletedInChapter", "has", "completedCount", "percentage", "Math", "ceil", "style", "display", "justifyContent", "alignItems", "maxWidth", "marginLeft", "flex", "backgroundColor", "borderRadius", "motion", "width", "concat", "height", "textAlign", "lineHeight", "color", "initial", "animate", "transition", "duration", "ease", "SideNavRow", "dominantColor", "setDominantColor", "textColor", "setTextColor", "isLoading", "setIsLoading", "setBackgroundColor", "imageUrl", "courseTitle", "replace", "number", "fetchAndExtractColorWithCache", "cachedColor", "handleColorExtraction", "fetch", "method", "headers", "ok", "blob", "reader", "FileReader", "readAsDataURL", "onloadend", "base64data", "result", "image", "Image", "src", "onload", "dominantColorRGB", "ColorThief", "getColor", "dominantColorCSS", "setItem", "status", "luminance", "calculateLuminance", "rgb", "match", "matchingCourse", "course", "_jsxs", "styleVariable", "opacity", "lockState", "position", "backgroundImage", "backgroundPosition", "backgroundSize", "float", "alt", "left", "top", "right", "bottom", "margin", "flexDirection", "marginTop", "CourseProgressBar", "totalLessons", "totalQuizzes", "size", "marginRight", "fontSize", "SideNavRowLesson", "fetchAndExtractColor", "SideNavRowQuiz", "fontWeight", "SearchBarContainer", "SearchBar", "input", "SideNavContent", "searchTerm", "setSearchTerm", "filteredEntries", "setFilteredEntries", "filtered", "entry", "filteredSubEntries", "filter", "subEntry", "subEntryMatches", "toLowerCase", "nestedEntryMatches", "nestedEntry", "section", "dropDownEntries", "setDropDownEntries", "currentUrl", "window", "location", "href", "currentUrlArray", "split", "topicAndSection", "topicAndSectionArray", "currentTopicNumber", "isLastLessonOfChapter", "isFirstLessonOfChapter", "chapterOfLastCompletedLesson", "lastUnlockedLessonNumber", "lastUnlockedLessonTitle", "state", "animation", "background", "zIndex", "isLessonProgressEmpty", "Link", "to", "closeNav", "whileTap", "scale", "type", "stiffness", "damping", "y", "repeat", "Infinity", "placeholder", "onChange", "e", "target", "index", "topicHeaderNumber", "_Fragment", "minHeight", "Logout", "_ref", "setIsLoggedIn", "history", "useHistory", "id", "clientId", "GoogleLogout", "buttonText", "onLogoutSuccess", "credentialResponse", "text", "ChapterProgressBar", "SubContainer", "currentSectionNumberState", "setCurrentSectionNumberState", "currentSectionNumber", "transform", "class", "superEntry", "Sidenav", "getLessonTitle", "currentCourseProgress", "slice", "lastUnlockedLesson", "chapterOfLastUnlockedLesson", "borderBottom", "Transition", "in", "timeout", "unmountOnExit", "mountOnEnter", "BackgroundPage", "nav", "navTop", "button", "img", "_templateObject5", "_templateObject6", "mouse", "Button", "ButtonH2", "answerWrongAnime", "keyframes", "answerCorrectAnime", "ExampleBox", "ExampleQuestion", "ExampleAnswer", "answerClicked", "answer", "answerColor", "css", "_templateObject7", "_templateObject8", "AnswerExplanation", "_templateObject9", "_templateObject10", "_templateObject11", "Example", "setAnswerColor", "setAnswerClicked", "answerClickedToPractice", "setAnswerClickedToPractice", "shuffledAnswersState", "setShuffledAnswersState", "sectionExample", "answers", "shuffledAnswers", "array", "randomIndex", "currentIndex", "floor", "random", "shuffle", "selectedSectionExamples", "allSectionExamples", "example", "chooseRandom", "arr", "num", "res", "i", "question", "answerItem", "checkAnswer", "isCorrect", "explanation", "navigator", "vibrate", "webkitVibrate", "mozVibrate", "msVibrate", "glowAnime", "TopicTitle", "TopicDescription", "SectionTitle", "SectionDescription", "currentUrlSectionID", "SectionImageAndText", "NoteTitle", "NoteDescription", "Topic", "then", "courseChosen", "o", "selectedTopic", "setSelectedTopic", "topicNumberFromSideBar", "topicNumberFromSideBarArray", "courseTopicsCollectionName", "courseTopicsModelName", "courseExamplesCollectionName", "courseExamplesModelName", "undefined", "scrollTo", "behavior", "element", "document", "getElementById", "scrollIntoView", "sectionList", "sections", "chooseRandomExample", "needtoSelect", "selectedSectionExamplesPool", "newselectedSectionExamplesPool", "finalSetOfExamplesToDisplay", "completedSections", "setCompletedSections", "topicTitle", "topicYoutubeLink", "rel", "topicDescription", "share", "url", "clipboard", "writeText", "marginBottom", "border", "sectionTitle", "sectonYoutubeLink", "decodeURIComponent", "sectionDescription", "sectionNotes", "join", "sectionNote", "isQuizInStudyMode", "ScoreContext", "SubmitButtonContext", "submitted", "QuizExample", "sumCorrect", "setSumCorrect", "setSubmitted", "selectedAnswer", "setSelectedAnswer", "newAnswerList", "pushCorrectAnswer", "exampleIndex", "pushWrongAnswer", "sectionNumberToFind", "topic", "getSectionTitleByNumber", "whileHover", "delay", "ScoreCardBorder", "scorePercentage", "ScoreCardText", "ScoreMessage", "ScoreCardButtons", "ScoreCard", "scoreCardColour", "setScoreCardColour", "useLocation", "sum", "reduce", "b", "round", "chapterProgressPosted", "setChapterProgressPosted", "post", "goBackTo", "comingFrom", "constructor", "Array", "morePracticeHashLinkPath", "finalExamplesOutput", "apply", "nextChapterFirstLessonNumber", "nextChapterNumber", "nextChapterTitle", "nextChapterFirstLessonTitle", "alignContent", "pathname", "scoreCardSelectedQuizQuestons", "restartQuiz", "QuizBackgroundPage", "Navbar", "LessonMainSideNav", "rowClicked", "setRowClicked", "currentUrlState", "setCurrentUrlState", "currentTopicNumberState", "setCurrentTopicNumberState", "nextTopicNumberState", "setNextTopicNumberState", "previousTopicNumberState", "setPreviousTopicNumberState", "setNavTop", "lastScrollY", "scrollY", "addEventListener", "openNav", "checked", "toggleMode", "for", "QuizTitle", "SubmitButton", "Quiz", "whereDidIComeFrom", "setWhereDidIComeFrom", "foundCurrentSection", "currentChapterNumber", "nextTopic", "foundCurrentTopic", "currentTopicHeaderIndex", "String", "parseFloat", "findNextTopic", "ConfettiExplosion", "particleSize", "autoStart", "particleCount", "spread", "origin", "x", "force", "checkSubmission", "CourseIcon", "CourseStats", "numberOfQuizQuestions", "setNumberOfQuizQuestions", "numberOfLessons", "setNumberOfLessons", "numberOfVideos", "setNumberOfVideos", "approxCourseDuration", "setApproxCourseDuration", "numberOfTopicsWithSections", "StartButton", "CourseCard", "showGoals", "setShowGoals", "description", "courseDescription", "toggleGoals", "Object", "courseGoals", "goal", "courseReferenceDescription", "CourseMenuPage", "coursesDisplayed", "setCoursesDisplayed", "sessionStorage", "courseIsActive", "CourseContent", "SidenavLandingPage", "CourseLandingPage", "navBarHeight", "LoginPage", "setTokenExpiration", "CustomButton", "Login", "useGoogleLogin", "onSuccess", "tokenResponse", "userObject", "Authorization", "access_token", "handleLogin", "expirationTime", "Date", "getTime", "formattedDate", "moment", "format", "requestData", "email", "userFamilyName", "family_name", "userGivenName", "given_name", "userPicture", "picture", "loginDateTime", "body", "JSON", "stringify", "json", "Error", "catch", "SyntaxError", "message", "padding", "cursor", "GoogleOAuthProvider", "LogoutMessage", "timeoutId", "setTimeout", "clear", "clearTimeout", "LessonExample", "progressPosted", "setProgressPosted", "nextLessonBoxRef", "useRef", "answeredCorrectly", "setAnsweredCorrectly", "selectedExample", "setSelectedExample", "setShuffledAnswers", "innerWidth", "selectedExampleOne", "shuffledArray", "j", "shuffleArray", "scrollDistance", "scrollBy", "nextLessonNumber", "ref", "nextLessonTitle", "LottieAnimation", "animationData", "setAnimationData", "animationUrl", "lottieFile", "exit", "Lottie", "speed", "loop", "Lesson", "currentSectionIndex", "setCurrentSectionIndex", "isButtonVisible", "setIsButtonVisible", "isShowQuiz", "setIsShowQuiz", "setCompletedLessons", "nextSectionNumber", "nextSectionTitle", "item", "nextSection", "findNextSection", "chapterInfo", "findChapterInfo", "lessonNumberFromSideBar", "handleNextSection", "prevIndex", "lessonExampleElement", "timer", "lessonAnimation", "subSections", "subSection", "subSectionIndex", "miniSections", "miniSection", "miniSectionIndex", "lottieFilePath", "contentStyle", "ReactHtmlParser", "content", "videoLink", "allowFullScreen", "allow", "handleShowLessonExample", "repeatType", "images", "GetStarted", "row", "rowIndex", "paddingTop", "WelcomeMessageOne", "WelcomeMessageTwo", "WelcomeMessageThree", "WelcomeMessageFour", "LessonExampleDemo", "isMobile", "chapterTitles", "parse", "LessonDemo", "WelcomeMessageFive", "WelcomeMessageSix", "WelcomeCourseCard", "WelcomeCourseMenuPage", "WelcomeMessageCourses", "WelcomeMessageSeven", "fontStyle", "PrivateRoute", "component", "Component", "isLoggedIn", "isTokenExpired", "renewSession", "rest", "Route", "render", "Redirect", "App", "tokenExpiration", "storedIsLoggedIn", "storedTokenExpiration", "parseInt", "now", "removeItem", "Router", "Switch", "path", "exact", "WelcomeMessageNotifications", "isLocalhost", "Boolean", "hostname", "registerValidSW", "swUrl", "config", "serviceWorker", "register", "registration", "onupdatefound", "installingWorker", "installing", "onstatechange", "controller", "onUpdate", "ReactDOM", "URL", "process", "contentType", "indexOf", "ready", "unregister", "reload", "checkValidServiceWorker", "serviceWorkerRegistration"],
    "mappings": "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",
    "file": "static/js/main.e89da437.chunk.js",
    "sourcesContent": ["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SampleButton\":\"Buttons_SampleButton__anTAC\"};", "import React from \"react\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\n\r\n// export const SidebarData = [\r\n//     {\r\n//         title: 'Overview',\r\n//         path: '/overview',\r\n//         icon: <AiIcons.AiFillHome/>,\r\n//         iconClosed: <RiIcons.RiArrowDownSFill/>,\r\n//         iconOpened: <RiIcons.RiArrowUpSFill/>,\r\n//         subNav: [\r\n//             {\r\n//                 title: 'Overview',\r\n//                 path: '/overview',\r\n//                 icon: <IoIcons.IoIosPaper/>\r\n//             },\r\n//             {\r\n//                 title: 'Revenue',\r\n//                 path: '/revenue',\r\n//                 icon: <IoIcons.IoIosPaper/>\r\n//             }\r\n//         ]\r\n//     },\r\n//     {\r\n//         title: 'Reports',\r\n//         path: '/reports',\r\n//         icon: <AiIcons.AiFillHome/>,\r\n//         iconClosed: <RiIcons.RiArrowDownSFill/>,\r\n//         iconOpened: <RiIcons.RiArrowUpSFill/>,\r\n//         subNav: [\r\n//             {\r\n//                 title: 'Report4s',\r\n//                 path: '/reports/reports1',\r\n//                 icon: <IoIcons.IoIosPaper/>\r\n//             },\r\n//             {\r\n//                 title: 'Reports 2',\r\n//                 path: '/reports/reports2',\r\n//                 icon: <IoIcons.IoIosPaper/>\r\n//             }\r\n//         ]\r\n//     },\r\n//     {\r\n//         title: 'Nothing',\r\n//         path: '/nothing',\r\n//         icon: <AiIcons.AiFillHome/>,\r\n//         iconClosed: <RiIcons.RiArrowDownSFill/>,\r\n//         iconOpened: <RiIcons.RiArrowUpSFill/>\r\n//     }\r\n// ]\r\n\r\nexport const SidebarData = [\r\n  {\r\n    entries: [\r\n      {\r\n        title: \"The purpose of this course\",\r\n      },\r\n      {\r\n        title: \"Qalimah\",\r\n      },\r\n    ],\r\n    _id: \"60ab69680a5705404d68d9f9\",\r\n    title: \"Why Arabic?\",\r\n    type: {\r\n      _id: \"61a049aaad966900153a0659\",\r\n      rows: true,\r\n      dropDown: false,\r\n    },\r\n  },\r\n  {\r\n    entries: [\r\n      {\r\n        title: \"Ism Muntharif\",\r\n      },\r\n      {\r\n        title: \"Gair Muntharif Asma\",\r\n      },\r\n      {\r\n        title: \"Mabni Asma\",\r\n      },\r\n    ],\r\n    _id: \"60ab69ee0a5705404d68d9fc\",\r\n    title: \"I'araab\",\r\n    type: {\r\n      _id: \"61a049aaad966900153a065a\",\r\n      rows: true,\r\n      dropDown: false,\r\n    },\r\n  },\r\n  {\r\n    entries: [\r\n      {\r\n        title: \"Mu’annath\",\r\n      },\r\n      {\r\n        title: \"Mu’anath Haqeeqi\",\r\n      },\r\n      {\r\n        title: \"Mu’anath Gair Haqeeqi\",\r\n      },\r\n      {\r\n        title: \"Mua’nath Alamati\",\r\n        entries: [\r\n          {\r\n            title: \"Mua’nath Alamati\",\r\n            entries: [\r\n              {\r\n                title: \"Gol Ta ة\",\r\n              },\r\n              {\r\n                title: \"Alif Mamdoodah اء\",\r\n              },\r\n              {\r\n                title: \"Alif Maqthoorah اى\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: \"Mua’nath Samai\",\r\n      },\r\n      {\r\n        title: \"How to convert Muthakkar to Mu’anath\",\r\n      },\r\n    ],\r\n    _id: \"60ab6a260a5705404d68d9fd\",\r\n    title: \"Jins\",\r\n    type: {\r\n      _id: \"61a049aaad966900153a065b\",\r\n      rows: true,\r\n      dropDown: false,\r\n    },\r\n  },\r\n  {\r\n    entries: [\r\n      {\r\n        title: \"Wahid\",\r\n      },\r\n      {\r\n        title: \"Muthanna\",\r\n      },\r\n      {\r\n        title: \"Jam’a\",\r\n      },\r\n      {\r\n        title: \"Jam’a Saalim\",\r\n        entries: [\r\n          {\r\n            title: \"Jam’a Saalim\",\r\n            entries: [\r\n              {\r\n                title: \"Jam’a Saalim Muthakkar\",\r\n              },\r\n              {\r\n                title: \"Jama’a Saalim Mu’annath\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: \"Jam’a Saalim Chart\",\r\n      },\r\n      {\r\n        title: \"Jam’a Mukassar\",\r\n      },\r\n      {\r\n        title: \"Jam’a Mukassar Chart\",\r\n      },\r\n    ],\r\n    _id: \"60ab6a260a5705404d68d9fd\",\r\n    title: \"Adad\",\r\n    type: {\r\n      _id: \"61a049aaad966900153a065b\",\r\n      rows: true,\r\n      dropDown: false,\r\n    },\r\n  },\r\n  {\r\n    entries: [\r\n      {\r\n        title: \"Test Chart\",\r\n      },\r\n      {\r\n        title: \"Mu’arifah\",\r\n        entries: [\r\n          {\r\n            title: \"Mu’arifah\",\r\n            entries: [\r\n              {\r\n                title: \"Ism Alam\",\r\n              },\r\n              {\r\n                title: \"Ism Zamaa’ir\",\r\n              },\r\n              {\r\n                title: \"Ism Ishaari\",\r\n              },\r\n              {\r\n                title: \"Ism Mawthoola\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: \"Nakirah\",\r\n      },\r\n      {\r\n        title: \"Mua’rifah billam (How to make nakirah to Mua’rifah)\",\r\n      },\r\n      {\r\n        title: \"How would Al react with different forms of Ism\",\r\n        entries: [\r\n          {\r\n            title: \"How would Al react with different forms of Ism\",\r\n            entries: [\r\n              {\r\n                title: \"Gair Muntharif Asma reacting to Al\",\r\n              },\r\n              {\r\n                title: \"Ism Muthanna reacting to Al\",\r\n              },\r\n              {\r\n                title: \"Jam’a reacting to Al\",\r\n              },\r\n              {\r\n                title: \"Jama’a Saalim reacting to Al\",\r\n              },\r\n              {\r\n                title: \"Jama’a Mukassar reacting to Al\",\r\n              },\r\n              {\r\n                title: \"Mabni Asma Reacting to Al\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: \"Some things about Al\",\r\n        entries: [\r\n          {\r\n            title: \"Some things about Al\",\r\n            entries: [\r\n              {\r\n                title: \"Components of Al\",\r\n              },\r\n              {\r\n                title: \"When to pronounce L (Kamri vs Shamsi Huruf)\",\r\n              },\r\n              {\r\n                title: \"Arabs sometimes make an exception\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    _id: \"60ab6a260a5705404d68d9fd\",\r\n    title: \"Wus’at\",\r\n    type: {\r\n      _id: \"61a049aaad966900153a065b\",\r\n      rows: true,\r\n      dropDown: false,\r\n    },\r\n  },\r\n];\r\n\r\nexport default SidebarData;\r\n", "import React, { useContext, useState, useEffect } from \"react\";\r\nimport SidebarData from \"../components/SidebarData\";\r\nimport axios from \"axios\";\r\n\r\nexport const AmazonContext = React.createContext();\r\n\r\nexport function useAmazonContext() {\r\n  return useContext(AmazonContext);\r\n}\r\n\r\nexport function AmazonContextProvider(props) {\r\n  //Responsible for opening and closing the sub container\r\n  const [subContainer, setSubContainer] = useState(false);\r\n  //Responsible for storing the subContainers entries\r\n  const [subContainerEntries, setSubContainerEntries] = useState(null);\r\n  //Responsible for holding all of the data that goes into the navbar\r\n  const [entryStore, setEntryStore] = useState(null);\r\n  //Topic Data from BackEnd\r\n  const [topicDatafromBackEnd, setTopicDatafromBackEnd] = useState([]);\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n  //TopicNumbers List from BackEnd\r\n  const [topicNumbersListfromBackEnd, setTopicNumbersListfromBackEnd] =\r\n    useState([]);\r\n  //Responsible for holding course Title\r\n  const [courseTitleUserIsOn, setCourseTitleUserIsOn] = useState(\"\");\r\n  console.log(courseTitleUserIsOn);\r\n  //Responsible for holding course Title\r\n  const [courseDetails, setCourseDetails] = useState({});\r\n  console.log(courseDetails);\r\n  //Responsible for holding lesson number\r\n  const [selectedLesson, setSelectedLesson] = useState({});\r\n  console.log(courseDetails);\r\n  //Responsible for holding user lesson Progress Data\r\n  const [progressData, setProgressData] = useState(null);\r\n  console.log(progressData);\r\n  //Responsible for opening closing the side nav:\r\n  const [navOpen, setNavOpen] = useState(false);\r\n\r\n  //Responsible for holding user lesson Progress Data\r\n  const [chapterProgressData, setChapterProgressData] = useState(null);\r\n  console.log(progressData);\r\n\r\n  //Responsible for holding user unlocked lessons Data\r\n  const [unlockedLessons, setUnlockedLessons] = useState(null);\r\n  console.log(progressData);\r\n  //Dark vs Light mode: start\r\n\r\n  // Check if the user has a preferred mode stored in local storage\r\n  const storedMode = localStorage.getItem(\"preferredMode\");\r\n\r\n  // Initialize the mode based on stored preference or set a default\r\n  const [isDarkMode, setIsDarkMode] = useState(storedMode === \"dark\");\r\n\r\n  // Update the stored preference whenever the mode changes\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"preferredMode\", isDarkMode ? \"dark\" : \"light\");\r\n  // }, [isDarkMode]);\r\n  // //Dark vs Light mode: end\r\n  // //To call TopicsData from the backend which will return all topics to the front end\r\n  // useEffect(() => {\r\n  //   api.get(`/${courseTitleUserIsOn}/topicsData`).then((response) => {\r\n  //     setTopicDatafromBackEnd(response.data);\r\n  //     console.log(response.data);\r\n  //   });\r\n  // }, []);\r\n\r\n  // //To call ExamplesData from the backend which will return all topics to the front end\r\n  // useEffect(() => {\r\n  //   api.get(`/examplesData`).then((response) => {\r\n  //     setExampleDatafromBackEnd(response.data);\r\n  //   });\r\n  // }, []);\r\n\r\n  // //To call ExamplesData from the backend which will return all examples to the front end\r\n  // useEffect(() => {\r\n  //   api.get(`/${courseTitleUserIsOn}/sideBarData`).then((response) => {\r\n  //     setEntryStore(response.data);\r\n  //   });\r\n  // }, []);\r\n\r\n  // //To call TopicNumbers from the backend which will return all topics numbers to the front end\r\n  // useEffect(() => {\r\n  //   api.get(`/${courseTitleUserIsOn}/topicNumbersList`).then((response) => {\r\n  //     setTopicNumbersListfromBackEnd(response.data);\r\n  //   });\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"https://amazon-navbar.herokuapp.com/fetch\")\r\n  //     .then((response) => response.json())\r\n  //     .then((response) => {\r\n  //       setEntryStore(response);\r\n  //       // console.log(response);\r\n  //     });\r\n  // }, []);\r\n\r\n  // New Code\r\n\r\n  // const SidebarData = [\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"1.1\",\r\n  //         title: \"The purpose of this course\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"1.2\",\r\n  //         title: \"Qalimah\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab69680a5705404d68d9f9\",\r\n  //     title: \"Why Arabic?\",\r\n  //     topicHeaderNumber: \"1\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a0659\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.1.1\",\r\n  //         title: \"Ism Muntharif\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.1.2\",\r\n  //         title: \"Gair Muntharif Asma\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.1.3\",\r\n  //         title: \"Mabni Asma\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab69ee0a5705404d68d9fc\",\r\n  //     title: \"I'araab\",\r\n  //     topicHeaderNumber: \"2.1\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065a\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.2.1\",\r\n  //         title: \"Mu’annath\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.2\",\r\n  //         title: \"Mu’anath Haqeeqi\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.3\",\r\n  //         title: \"Mu’anath Gair Haqeeqi\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"1.2.1.1\",\r\n  //         title: \"Mua’nath Alamati\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"1.2.1.1\",\r\n  //             title: \"Mua’nath Alamati\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.1\",\r\n  //                 title: \"Gol Ta ة\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.2\",\r\n  //                 title: \"Alif Mamdoodah اء\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.3\",\r\n  //                 title: \"Alif Maqthoorah اى\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.4\",\r\n  //         title: \"Mua’nath Samai\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.5\",\r\n  //         title: \"How to convert Muthakkar to Mu’anath\",\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Jins\",\r\n  //     topicHeaderNumber: \"2.2\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: false,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.3.1\",\r\n  //         title: \"Wahid\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.2\",\r\n  //         title: \"Muthanna\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.3\",\r\n  //         title: \"Jam’a\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.4\",\r\n  //         title: \"Jam’a Saalim\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.3.5\",\r\n  //             title: \"Jam’a Saalim\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.3.5.1\",\r\n  //                 title: \"Jam’a Saalim Muthakkar\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.3.5.2\",\r\n  //                 title: \"Jama’a Saalim Mu’annath\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.6\",\r\n  //         title: \"Jam’a Saalim Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.7\",\r\n  //         title: \"Jam’a Mukassar\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.8\",\r\n  //         title: \"Jam’a Mukassar Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Adad\",\r\n  //     topicHeaderNumber: \"2.3\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.4.1\",\r\n  //         title: \"Test Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"3.1.1.1\",\r\n  //         title: \"Mu’arifah\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"3.1.1.1\",\r\n  //             title: \"Mu’arifah\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.1\",\r\n  //                 title: \"Ism Alam\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.2\",\r\n  //                 title: \"Ism Zamaa’ir\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.3\",\r\n  //                 title: \"Ism Ishaari\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.4\",\r\n  //                 title: \"Ism Mawthoola\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.2\",\r\n  //         title: \"Nakirah\",\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.3\",\r\n  //         title: \"Mua’rifah billam (How to make nakirah to Mua’rifah)\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.4\",\r\n  //         title: \"How would Al react with different forms of Ism\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.4.4\",\r\n  //             title: \"How would Al react with different forms of Ism\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.1\",\r\n  //                 title: \"Gair Muntharif Asma reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.2\",\r\n  //                 title: \"Ism Muthanna reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.3\",\r\n  //                 title: \"Jam’a reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.4\",\r\n  //                 title: \"Jama’a Saalim reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.5\",\r\n  //                 title: \"Jama’a Mukassar reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.6\",\r\n  //                 title: \"Mabni Asma Reacting to Al\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.5\",\r\n  //         title: \"Some things about Al\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.4.5\",\r\n  //             title: \"Some things about Al\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.1\",\r\n  //                 title: \"Components of Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.2\",\r\n  //                 title: \"When to pronounce L (Kamri vs Shamsi Huruf)\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.3\",\r\n  //                 title: \"Arabs sometimes make an exception\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Wus’at\",\r\n  //     topicHeaderNumber: \"2.4\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: false,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  // ];\r\n\r\n  //Decide here which SidebarData to send to application:\r\n\r\n  // useEffect(() => {\r\n  //   setEntryStore(SidebarData);\r\n  // }, []);\r\n\r\n  // Sending all the important data above as values in other parts of the application:\r\n\r\n  const value = {\r\n    subContainer,\r\n    setSubContainer,\r\n    subContainerEntries,\r\n    setSubContainerEntries,\r\n    entryStore,\r\n    setEntryStore,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    topicNumbersListfromBackEnd,\r\n    setTopicNumbersListfromBackEnd,\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    selectedLesson,\r\n    setSelectedLesson,\r\n    isDarkMode,\r\n    setIsDarkMode,\r\n    progressData,\r\n    setProgressData,\r\n    chapterProgressData,\r\n    setChapterProgressData,\r\n    navOpen,\r\n    setNavOpen,\r\n  };\r\n\r\n  return (\r\n    <AmazonContext.Provider value={value}>\r\n      {props.children}\r\n    </AmazonContext.Provider>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFacebook,\r\n  faYoutube,\r\n  faInstagram,\r\n  faTwitter,\r\n  faEnvelope,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faEnvelope as solidEnvelope,\r\n  faGlobe,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst FooterContainer = styled.footer`\r\n  background: #f2f2f2;\r\n  padding: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst FooterText = styled.p`\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #888;\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst IconLink = styled.a`\r\n  color: #888;\r\n  margin-right: 10px;\r\n  &:hover {\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  // Your app's content and components\r\n\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <div>\r\n      {/* Your app's content */}\r\n      <FooterContainer>\r\n        <FooterText>\r\n          Copyright © {currentYear} Here for the Hereafter.\r\n          <br />A 501(c)(3) nonprofit organization dedicated to spreading\r\n          Islamic education.\r\n        </FooterText>\r\n        <IconContainer>\r\n          <IconLink href=\"https://www.hereforthehereafter.com\">\r\n            <FontAwesomeIcon icon={faGlobe} size=\"3x\" />\r\n          </IconLink>\r\n\r\n          <IconLink href=\"https://www.facebook.com/hereforthehereafter\">\r\n            <FontAwesomeIcon icon={faFacebook} size=\"3x\" />\r\n          </IconLink>\r\n          <IconLink href=\"https://www.youtube.com/hereforthehereafter\">\r\n            <FontAwesomeIcon icon={faYoutube} size=\"3x\" />\r\n          </IconLink>\r\n          <IconLink href=\"https://www.instagram.com/hereforthehereafter\">\r\n            <FontAwesomeIcon icon={faInstagram} size=\"3x\" />\r\n          </IconLink>\r\n          <IconLink href=\"https://www.twitter.com/herehereafter\">\r\n            <FontAwesomeIcon icon={faTwitter} size=\"3x\" />\r\n          </IconLink>\r\n          <IconLink href=\"mailto:hereforthehereafter@gmail.com\">\r\n            <FontAwesomeIcon icon={solidEnvelope} size=\"3x\" />\r\n          </IconLink>\r\n        </IconContainer>\r\n      </FooterContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n", "export default __webpack_public_path__ + \"static/media/HHLogo.a975645f.png\";", "import React from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nexport default function HamburgerButton(props) {\r\n  return (\r\n    <div className=\"hamburger-btn\" onClick={props.click}>\r\n      &#9776;\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ChapterProgressBarMini = (props) => {\r\n  const {\r\n    courseTitleUserIsOn,\r\n    entryStore,\r\n    isDarkMode,\r\n    subContainer,\r\n\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n\r\n    setEntryStore,\r\n\r\n    setIsDarkMode,\r\n    progressData,\r\n    setProgressData,\r\n    chapterProgressData,\r\n    setChapterProgressData,\r\n  } = useAmazonContext();\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching progress data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProgress();\r\n  }, []);\r\n\r\n  console.log(progressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchChapterProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchChapterProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setChapterProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chapter progress data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchChapterProgress();\r\n  }, []);\r\n\r\n  console.log(chapterProgressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  //Simplfied entryStore\r\n\r\n  function simplifyData(data) {\r\n    return (\r\n      data &&\r\n      data\r\n        .map((topicHeader) => {\r\n          return topicHeader.entries.map((chapter) => {\r\n            return {\r\n              chapterNumber: chapter.topicNumber,\r\n              chapterTitle: chapter.title,\r\n              lessons: chapter.entries[0].entries.map((lesson) => {\r\n                return {\r\n                  lessonNumber: lesson.sectionNumber,\r\n                  lessonTitle: lesson.title,\r\n                };\r\n              }),\r\n            };\r\n          });\r\n        })\r\n        .flat()\r\n    );\r\n  }\r\n\r\n  // Usage\r\n  const simplifiedChaptersLessonsData = simplifyData(entryStore);\r\n  console.log(simplifiedChaptersLessonsData);\r\n\r\n  function generateunlockedLessons(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    chapterProgressData,\r\n    courseTitleUserIsOn\r\n  ) {\r\n    const unlockedLessons = [];\r\n\r\n    const userProgress =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n    if (userProgress) {\r\n      const { lessonProgress } = userProgress;\r\n      const lastCompletedLesson = lessonProgress[lessonProgress.length - 1];\r\n      const chapterContainingLastCompletedLesson =\r\n        simplifiedChaptersLessonsData &&\r\n        simplifiedChaptersLessonsData.find((chapter) => {\r\n          return chapter.lessons.some(\r\n            (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n          );\r\n        });\r\n\r\n      if (chapterContainingLastCompletedLesson) {\r\n        const { lessons } = chapterContainingLastCompletedLesson;\r\n        const lastCompletedLessonIndex = lessons.findIndex(\r\n          (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n        );\r\n        if (lastCompletedLessonIndex === lessons.length - 1) {\r\n          // Add all completed lessons and check chapter completion\r\n          unlockedLessons.push(...lessonProgress);\r\n          const nextChapterIndex =\r\n            simplifiedChaptersLessonsData.findIndex(\r\n              (chapter) =>\r\n                chapter.chapterNumber ===\r\n                chapterContainingLastCompletedLesson.chapterNumber\r\n            ) + 1;\r\n          const nextChapter = simplifiedChaptersLessonsData[nextChapterIndex];\r\n          if (nextChapter) {\r\n            const chapterProgress =\r\n              chapterProgressData &&\r\n              chapterProgressData.find(\r\n                (progress) => progress.courseProgress === courseTitleUserIsOn\r\n              )?.chapterProgress;\r\n            if (\r\n              chapterProgress &&\r\n              chapterProgress.includes(\r\n                chapterContainingLastCompletedLesson.chapterNumber\r\n              )\r\n            ) {\r\n              const nextLesson = nextChapter.lessons[0];\r\n              unlockedLessons.push(nextLesson.lessonNumber);\r\n            }\r\n          }\r\n        } else {\r\n          // Add completed lessons and next lesson in the same chapter\r\n          const nextLesson = lessons[lastCompletedLessonIndex + 1];\r\n          unlockedLessons.push(...lessonProgress, nextLesson.lessonNumber);\r\n        }\r\n      }\r\n    }\r\n\r\n    return unlockedLessons;\r\n  }\r\n\r\n  // Generate the third dataset\r\n  const unlockedLessons = generateunlockedLessons(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    chapterProgressData,\r\n    courseTitleUserIsOn\r\n  );\r\n\r\n  // Log the result\r\n  console.log(unlockedLessons);\r\n\r\n  function generateUnlockedQuizzes(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    courseTitleUserIsOn\r\n  ) {\r\n    const unlockedQuizzes = [];\r\n\r\n    const userProgress =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n    if (userProgress) {\r\n      simplifiedChaptersLessonsData &&\r\n        simplifiedChaptersLessonsData.forEach((chapter) => {\r\n          const lastLessonNumber =\r\n            chapter.lessons[chapter.lessons.length - 1].lessonNumber;\r\n          const isLastLessonCompleted =\r\n            userProgress.lessonProgress.includes(lastLessonNumber);\r\n          if (isLastLessonCompleted) {\r\n            unlockedQuizzes.push(chapter.chapterNumber);\r\n          }\r\n        });\r\n    }\r\n\r\n    return unlockedQuizzes;\r\n  }\r\n\r\n  function generateUnlockedChapters(\r\n    simplifiedChaptersLessonsData,\r\n    unlockedLessons\r\n  ) {\r\n    const unlockedChapters = [];\r\n\r\n    simplifiedChaptersLessonsData &&\r\n      simplifiedChaptersLessonsData.forEach((chapter) => {\r\n        const hasUnlockedLesson = chapter.lessons.some((lesson) =>\r\n          unlockedLessons.includes(lesson.lessonNumber)\r\n        );\r\n        if (hasUnlockedLesson) {\r\n          unlockedChapters.push(chapter.chapterNumber);\r\n        }\r\n      });\r\n\r\n    return unlockedChapters;\r\n  }\r\n\r\n  // Generate the arrays\r\n  const unlockedQuizzes = generateUnlockedQuizzes(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    courseTitleUserIsOn\r\n  );\r\n  const unlockedChapters = generateUnlockedChapters(\r\n    simplifiedChaptersLessonsData,\r\n    unlockedLessons\r\n  );\r\n\r\n  // Log the results\r\n  console.log(unlockedQuizzes);\r\n  console.log(unlockedChapters);\r\n\r\n  // Find the progress data for the current chapter\r\n\r\n  const courseProgressData =\r\n    progressData &&\r\n    progressData.find(\r\n      (progress) => progress.courseProgress === props.courseTitleUserIsOn\r\n    );\r\n\r\n  console.log(courseProgressData);\r\n\r\n  // Find the chapter progress data for the current course\r\n  const chapterProgressDataAgain =\r\n    chapterProgressData &&\r\n    chapterProgressData.find(\r\n      (progress) => progress.courseProgress === props.courseTitleUserIsOn\r\n    );\r\n\r\n  console.log(chapterProgressDataAgain);\r\n\r\n  // Get the lessons the user has completed\r\n  const completedLessons = new Set(courseProgressData?.lessonProgress || []);\r\n  console.log(completedLessons);\r\n\r\n  // Get the chapters the user has completed\r\n  const completedChapters = new Set(\r\n    chapterProgressDataAgain?.chapterProgress || []\r\n  );\r\n  console.log(completedChapters);\r\n  // Calculate total number of lessons in the chapter\r\n  const chapterNumber = props.lessonNumber\r\n    ? props.lessonNumber.substring(0, props.lessonNumber.lastIndexOf(\".\"))\r\n    : props.chapterNumber;\r\n  console.log(chapterNumber);\r\n\r\n  const chapterData =\r\n    simplifiedChaptersLessonsData &&\r\n    simplifiedChaptersLessonsData.find(\r\n      (chapter) => chapter.chapterNumber === chapterNumber\r\n    );\r\n  console.log(chapterData);\r\n\r\n  const totalLessonsInChapter = chapterData?.lessons.length || 0;\r\n  console.log(totalLessonsInChapter);\r\n\r\n  // Calculate total number of quizzes for the chapter\r\n  const totalQuizzesCompletedInChapter = completedChapters.has(chapterNumber)\r\n    ? 1\r\n    : 0;\r\n  console.log(totalQuizzesCompletedInChapter);\r\n\r\n  // Calculate total number of completed lessons and quizzes\r\n  // Calculate total number of completed lessons in the chapter\r\n  let completedCount = 0;\r\n  chapterData?.lessons.forEach((lesson) => {\r\n    if (completedLessons.has(lesson.lessonNumber)) {\r\n      completedCount++;\r\n    }\r\n  });\r\n\r\n  console.log(completedCount);\r\n\r\n  // Calculate percentage of chapter completed and round up\r\n  const percentage = Math.ceil(\r\n    ((completedCount + totalQuizzesCompletedInChapter) /\r\n      (totalLessonsInChapter + 1)) *\r\n      100\r\n  );\r\n\r\n  //Note the 1 in the dinominator takes into account that each chapter has one quiz (Total Lessons and Quzzies completed over total lessons and quizzes in the chapter)\r\n\r\n  console.log(percentage);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          maxWidth: \"85%\",\r\n          marginLeft: \"7%\",\r\n        }}\r\n      >\r\n        <div style={{ flex: 1, backgroundColor: \"#f0f0f0\", borderRadius: 20 }}>\r\n          <motion.div\r\n            style={{\r\n              width: `${percentage}%`,\r\n              backgroundColor: \"rgb(80, 200, 120)\",\r\n              height: 15,\r\n              borderRadius: \"inherit\",\r\n              textAlign: \"center\",\r\n              lineHeight: \"20px\",\r\n              color: \"white\",\r\n            }}\r\n            initial={{ width: 0 }}\r\n            animate={{ width: `${percentage}%` }}\r\n            transition={{ duration: 0.5, ease: \"easeInOut\" }}\r\n          ></motion.div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChapterProgressBarMini;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport ColorThief from \"colorthief\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport ChapterProgressBarMini from \"../ChapterProgressBarMini\";\r\n\r\nexport default function SideNavRow(props) {\r\n  const {\r\n    setSubContainer,\r\n    setSubContainerEntries,\r\n    courseDetails,\r\n    courseTitleUserIsOn,\r\n    chapterProgressData,\r\n  } = useAmazonContext();\r\n  const [dominantColor, setDominantColor] = useState(\"\");\r\n  const [textColor, setTextColor] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [backgroundColor, setBackgroundColor] = useState(\"#dd6260\");\r\n\r\n  useEffect(() => {\r\n    const imageUrl =\r\n      \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n      courseDetails.courseTitle.replace(/\\s/g, \"\") +\r\n      \"/sectionImages/\" +\r\n      props.number +\r\n      \".1.png\";\r\n\r\n    fetchAndExtractColorWithCache(imageUrl);\r\n  }, []);\r\n\r\n  const fetchAndExtractColorWithCache = async (imageUrl) => {\r\n    const cachedColor = localStorage.getItem(imageUrl);\r\n\r\n    if (cachedColor) {\r\n      handleColorExtraction(cachedColor);\r\n    } else {\r\n      try {\r\n        const response = await fetch(imageUrl, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Cache-Control\": \"no-cache\",\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const blob = await response.blob();\r\n          const reader = new FileReader();\r\n\r\n          reader.readAsDataURL(blob);\r\n          reader.onloadend = () => {\r\n            const base64data = reader.result;\r\n\r\n            const image = new Image();\r\n            image.src = base64data;\r\n\r\n            image.onload = () => {\r\n              const colorThief = new ColorThief();\r\n              const dominantColorRGB = colorThief.getColor(image);\r\n              const dominantColorCSS = `rgb(${dominantColorRGB[0]}, ${dominantColorRGB[1]}, ${dominantColorRGB[2]})`;\r\n\r\n              handleColorExtraction(dominantColorCSS);\r\n\r\n              // Store the color in local storage for caching\r\n              localStorage.setItem(imageUrl, dominantColorCSS);\r\n            };\r\n          };\r\n        } else {\r\n          console.error(\"Image fetch failed:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleColorExtraction = (color) => {\r\n    setDominantColor(color);\r\n    const luminance = calculateLuminance(color);\r\n    const textColor = luminance > 0.5 ? \"#000\" : \"#fff\";\r\n    setTextColor(textColor);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const calculateLuminance = (color) => {\r\n    const rgb = color.match(/\\d+/g);\r\n    const luminance = (0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2]) / 255;\r\n    return luminance;\r\n  };\r\n\r\n  const openRow = () => {\r\n    setSubContainer(true);\r\n    setSubContainerEntries(props.entries);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      courseTitleUserIsOn &&\r\n      chapterProgressData &&\r\n      chapterProgressData.length > 0\r\n    ) {\r\n      const matchingCourse = chapterProgressData.find(\r\n        (course) => course.courseProgress === courseTitleUserIsOn\r\n      );\r\n\r\n      if (\r\n        matchingCourse &&\r\n        matchingCourse.chapterProgress.includes(props.number)\r\n      ) {\r\n        setBackgroundColor(\"rgb(80, 200, 120)\");\r\n      } else {\r\n        setBackgroundColor(\"#dd6260\");\r\n      }\r\n    }\r\n  }, [courseTitleUserIsOn, chapterProgressData]);\r\n\r\n  const imageUrl = `https://qaleelo-assets.s3.us-east-2.amazonaws.com/${courseDetails.courseTitle.replace(\r\n    /\\s/g,\r\n    \"\"\r\n  )}/sectionImages/${props.number}.1.png`;\r\n\r\n  return (\r\n    <div\r\n      className=\"sidenavRow\"\r\n      style={{\r\n        ...props.styleVariable,\r\n        backgroundColor: dominantColor,\r\n        opacity:\r\n          props.lockState === \"locked\" && props.number !== \"1.1\" ? 0.6 : 1,\r\n      }}\r\n      onClick={() => props.entries && openRow()}\r\n    >\r\n      <div\r\n        className=\"circle\"\r\n        style={{\r\n          backgroundColor: backgroundColor,\r\n          opacity:\r\n            props.lockState === \"locked\" && props.number !== \"1.1\" ? 0.8 : 1,\r\n        }}\r\n      >\r\n        <span className=\"circle-number\">{props.number}</span>\r\n      </div>\r\n\r\n      {props.lockState === \"locked\" && props.number !== \"1.1\" ? (\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"250px\",\r\n            height: \"250px\",\r\n            backgroundImage: `url(${imageUrl})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            borderRadius: \"10%\",\r\n            float: \"left\",\r\n            opacity: 0.8,\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/CanvaGeneratedImages/lockwhite.png\"\r\n            alt=\"\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: 0,\r\n              top: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              display: \"block\",\r\n              margin: \"auto\",\r\n              width: \"100px\",\r\n            }}\r\n          ></img>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"250px\",\r\n            height: \"250px\",\r\n            backgroundImage: `url(${imageUrl})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            borderRadius: \"10%\",\r\n            float: \"left\",\r\n          }}\r\n        ></div>\r\n      )}\r\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        {\" \"}\r\n        <div style={{ marginTop: \"20px\", maxWidth: \"92%\" }}>\r\n          <ChapterProgressBarMini\r\n            chapterNumber={props.number}\r\n            courseTitleUserIsOn={courseTitleUserIsOn}\r\n          ></ChapterProgressBarMini>\r\n        </div>\r\n        {/* {courseDetails.courseTitle && (\r\n        <img\r\n          className=\"sideNavRowImage\"\r\n          src={\r\n            \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n            courseDetails.courseTitle.replace(/\\s/g, \"\") +\r\n            \"/sectionImages/\" +\r\n            props.number +\r\n            \".1.png\"\r\n          }\r\n          alt=\"\"\r\n          crossOrigin=\"anonymous\"\r\n          style={{ opacity: props.lockState === \"locked\" ? 0.3 : 1 }}\r\n        />\r\n      )} */}\r\n        <p className=\"sidenavRowText\" style={{ color: textColor }}>\r\n          {isLoading ? \"Loading...\" : `${props.title}`}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst CourseProgressBar = (props) => {\r\n  // Find the progress data for the current course\r\n  const courseProgressData =\r\n    props.progressData &&\r\n    props.progressData.find(\r\n      (progress) => progress.courseProgress === props.courseTitleUserIsOn\r\n    );\r\n\r\n  // Find the chapter progress data for the current course\r\n  const chapterProgressData =\r\n    props.chapterProgressData &&\r\n    props.chapterProgressData.find(\r\n      (progress) => progress.courseProgress === props.courseTitleUserIsOn\r\n    );\r\n\r\n  // Get the lessons the user has completed\r\n  const completedLessons = new Set(courseProgressData?.lessonProgress || []);\r\n\r\n  // Get the chapters the user has completed\r\n  const completedChapters = new Set(chapterProgressData?.chapterProgress || []);\r\n\r\n  // Calculate total number of lessons and quizzes\r\n  let totalLessons = 0;\r\n  let totalQuizzes = 0;\r\n  props.simplifiedChaptersLessonsData &&\r\n    props.simplifiedChaptersLessonsData.forEach((chapter) => {\r\n      totalLessons += chapter.lessons.length;\r\n      totalQuizzes++; // Assuming each chapter has one quiz\r\n    });\r\n\r\n  // Calculate total number of completed lessons and quizzes\r\n  let completedCount = completedLessons.size + completedChapters.size;\r\n\r\n  // Calculate percentage of lessons and quizzes completed and round up\r\n  const percentage = Math.ceil(\r\n    (completedCount / (totalLessons + totalQuizzes)) * 100\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div style={{}} className=\"LessonTitleContainer\">\r\n        <span className=\"LessonNumber\" style={{ color: \"#80e8a2\" }}>\r\n          Course Progress\r\n        </span>{\" \"}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          maxWidth: \"85%\",\r\n          marginLeft: \"7%\",\r\n        }}\r\n      >\r\n        <span\r\n          style={{ marginRight: \"25px\", color: \"#80e8a2\", fontSize: \"3vh\" }}\r\n        >{`${percentage}%`}</span>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: \"#f0f0f0\",\r\n            borderRadius: 20,\r\n            maxWidth: \"82%\",\r\n          }}\r\n        >\r\n          <motion.div\r\n            style={{\r\n              width: `${percentage}%`,\r\n              backgroundColor: \"rgb(80, 200, 120)\",\r\n              height: 30,\r\n              borderRadius: \"inherit\",\r\n              textAlign: \"center\",\r\n              lineHeight: \"20px\",\r\n              color: \"white\",\r\n            }}\r\n            initial={{ width: 0 }}\r\n            animate={{ width: `${percentage}%` }}\r\n            transition={{ duration: 0.5, ease: \"easeInOut\" }}\r\n          ></motion.div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseProgressBar;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport ColorThief from \"colorthief\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function SideNavRowLesson(props) {\r\n  const {\r\n    setSubContainer,\r\n    setSubContainerEntries,\r\n    courseDetails,\r\n    progressData,\r\n    courseTitleUserIsOn,\r\n  } = useAmazonContext();\r\n  const [dominantColor, setDominantColor] = useState(\"\");\r\n  const [textColor, setTextColor] = useState(\"\");\r\n  const [backgroundColor, setBackgroundColor] = useState(\"#dd6260\");\r\n  console.log(progressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  useEffect(() => {\r\n    const imageUrl =\r\n      \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n      courseTitleUserIsOn +\r\n      \"/sectionImages/\" +\r\n      props.number +\r\n      \".png\";\r\n\r\n    console.log(props.number);\r\n    console.log(props.chapter); // string\r\n\r\n    fetchAndExtractColor(imageUrl);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (courseTitleUserIsOn && progressData && progressData.length > 0) {\r\n      const matchingCourse = progressData.find(\r\n        (course) => course.courseProgress === courseTitleUserIsOn\r\n      );\r\n\r\n      if (\r\n        matchingCourse &&\r\n        matchingCourse.lessonProgress.includes(props.number)\r\n      ) {\r\n        setBackgroundColor(\"rgb(80, 200, 120)\");\r\n      } else {\r\n        setBackgroundColor(\"#dd6260\");\r\n      }\r\n    }\r\n  }, [courseTitleUserIsOn, progressData]);\r\n\r\n  // console.log(props.number, props.lockState);\r\n\r\n  const fetchAndExtractColor = async (imageUrl) => {\r\n    try {\r\n      const response = await fetch(imageUrl, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Cache-Control\": \"no-cache\",\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(blob);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n\r\n          const image = new Image();\r\n          image.src = base64data;\r\n\r\n          image.onload = () => {\r\n            const colorThief = new ColorThief();\r\n            const dominantColorRGB = colorThief.getColor(image);\r\n            const dominantColorCSS = `rgb(${dominantColorRGB[0]}, ${dominantColorRGB[1]}, ${dominantColorRGB[2]})`;\r\n\r\n            handleColorExtraction(dominantColorCSS);\r\n          };\r\n        };\r\n      } else {\r\n        console.error(\"Image fetch failed:\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching image:\", error);\r\n    }\r\n  };\r\n\r\n  const handleColorExtraction = (color) => {\r\n    setDominantColor(color);\r\n\r\n    const luminance = calculateLuminance(color);\r\n\r\n    const textColor = luminance > 0.5 ? \"#000\" : \"#fff\";\r\n    setTextColor(textColor);\r\n  };\r\n\r\n  const calculateLuminance = (color) => {\r\n    const rgb = color.match(/\\d+/g);\r\n    const luminance = (0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2]) / 255;\r\n    return luminance;\r\n  };\r\n\r\n  const openRow = () => {\r\n    setSubContainer(true);\r\n    setSubContainerEntries(props.entries);\r\n  };\r\n\r\n  const imageUrl = `https://qaleelo-assets.s3.us-east-2.amazonaws.com/${\r\n    courseDetails.courseTitle && courseDetails.courseTitle.replace(/\\s/g, \"\")\r\n  }/sectionImages/${props.number}.png`;\r\n\r\n  return (\r\n    <div\r\n      className=\"sidenavRowLesson\"\r\n      style={{\r\n        // backroundColor: fetchedLessonProgress.includes(props.number) && fetchedCourseProgress.includes(props.chapter) ? \"lightgreen\" : \"white\",\r\n        backgroundColor: \"white\",\r\n        width: props.width,\r\n        marginLeft: props.marginLeft,\r\n        borderRadius: props.borderRadius,\r\n        // backgroundColor: dominantColor,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"circleLesson\"\r\n        style={{\r\n          backgroundColor: backgroundColor,\r\n          opacity: props.lockState === \"locked\" ? 0.5 : 1,\r\n        }}\r\n      >\r\n        <span className=\"circle-numberLesson\">{props.number}</span>\r\n      </div>\r\n      {props.lockState === \"locked\" ? (\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"250px\",\r\n            height: \"250px\",\r\n            backgroundImage: `url(${imageUrl})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            borderRadius: \"50%\",\r\n            float: \"left\",\r\n            opacity: 0.5,\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/CanvaGeneratedImages/lockwhite.png\"\r\n            alt=\"\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: 0,\r\n              top: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              display: \"block\",\r\n              margin: \"auto\",\r\n              width: \"100px\",\r\n            }}\r\n          ></img>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"250px\",\r\n            height: \"250px\",\r\n            backgroundImage: `url(${imageUrl})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            borderRadius: \"50%\",\r\n            float: \"left\",\r\n          }}\r\n        ></div>\r\n      )}\r\n      {/* {courseDetails.courseTitle && (\r\n        <img\r\n          className=\"sideNavRowLessonImage\"\r\n          src={\r\n            \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n            courseDetails.courseTitle.replace(/\\s/g, \"\") +\r\n            \"/sectionImages/\" +\r\n            props.number +\r\n            \".png\"\r\n          }\r\n          alt=\"\"\r\n          crossOrigin=\"anonymous\"\r\n          style={{ opacity: props.lockState === \"locked\" ? 0.3 : 1 }}\r\n        />\r\n      )} */}\r\n\r\n      <p className=\"sidenavRowLessonText\">{props.title}</p>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport { ColorExtractor } from \"react-color-extractor\";\r\nimport ColorThief from \"colorthief\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\n\r\nexport default function SideNavRowQuiz(props) {\r\n  const {\r\n    setSubContainer,\r\n    setSubContainerEntries,\r\n    courseDetails,\r\n    courseTitleUserIsOn,\r\n    chapterProgressData,\r\n  } = useAmazonContext();\r\n  const [dominantColor, setDominantColor] = useState(\"\");\r\n  const [textColor, setTextColor] = useState(\"\");\r\n  const [backgroundColor, setBackgroundColor] = useState(\"white\");\r\n\r\n  const openRow = () => {\r\n    setSubContainer(true);\r\n    setSubContainerEntries(props.entries);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chapterProgressData == null) {\r\n      setBackgroundColor(\"#a678de\");\r\n    }\r\n\r\n    if (courseTitleUserIsOn && chapterProgressData) {\r\n      const matchingCourse = chapterProgressData.find(\r\n        (course) => course.courseProgress === courseTitleUserIsOn\r\n      );\r\n\r\n      if (\r\n        matchingCourse &&\r\n        matchingCourse.chapterProgress.includes(props.number)\r\n      ) {\r\n        setBackgroundColor(\"rgb(80, 200, 120)\");\r\n      } else {\r\n        setBackgroundColor(\"#a678de\");\r\n      }\r\n    }\r\n  }, [courseTitleUserIsOn, chapterProgressData]);\r\n\r\n  const imageUrl =\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/QuizImage.png\";\r\n\r\n  return (\r\n    <div\r\n      className=\"sidenavRowLesson\"\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        width: props.width,\r\n        marginLeft: props.marginLeft,\r\n        borderRadius: props.borderRadius,\r\n        // backgroundColor: dominantColor,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"circleQuiz\"\r\n        style={{\r\n          backgroundColor: backgroundColor,\r\n          opacity: props.lockState === \"locked\" ? 0.5 : 1,\r\n        }}\r\n      >\r\n        <span className=\"circle-numberLesson\">{props.number}</span>\r\n      </div>\r\n\r\n      {props.lockState === \"locked\" ? (\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"250px\",\r\n            height: \"250px\",\r\n            backgroundImage: `url(${imageUrl})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            borderRadius: \"80%\",\r\n            float: \"left\",\r\n            opacity: 0.5,\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/CanvaGeneratedImages/lockblack.png\"\r\n            alt=\"\"\r\n            style={{\r\n              position: \"absolute\",\r\n              left: 0,\r\n              top: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              display: \"block\",\r\n              margin: \"auto\",\r\n              width: \"100px\",\r\n              opacity: \"1\",\r\n            }}\r\n          ></img>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"250px\",\r\n            height: \"250px\",\r\n            backgroundImage: `url(${imageUrl})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            borderRadius: \"80%\",\r\n            float: \"left\",\r\n          }}\r\n        ></div>\r\n      )}\r\n\r\n      <div>\r\n        <p\r\n          style={{\r\n            margin: 0,\r\n            marginTop: \"25px\",\r\n            color: \"#a678de\",\r\n            fontSize: \"2vh\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          Chapter Quiz\r\n        </p>\r\n        <p className=\"sidenavRowLessonText\" style={{ marginTop: 0 }}>\r\n          {props.title}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport SideNavRow from \"./SideNavRow\";\r\nimport styled from \"styled-components\";\r\nimport DropDown from \"./DropDown\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CourseProgressBar from \"./CourseProgressBar\";\r\nimport SideNavRowLesson from \"./SideNavRowLesson\";\r\nimport SideNavRowQuiz from \"./SideNavRowQuiz\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst CourseContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  height: 100%; /* Ensure the div takes full height */\r\n`;\r\n\r\nconst SearchBarContainer = styled.div`\r\n  position: relative;\r\n  width: 60%;\r\n  /* max-width: 700px; */\r\n  /* margin: 50px; */\r\n  margin-right: 50px;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 10px;\r\n  padding-left: 70px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-size: 3vh;\r\n  margin-left: 29%;\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst SearchIcon = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 10px;\r\n  font-size: 2vh;\r\n  margin-left: 20%;\r\n`;\r\n\r\nexport default function SideNavContent(props) {\r\n  const {\r\n    courseDetails,\r\n    courseTitleUserIsOn,\r\n    entryStore,\r\n    isDarkMode,\r\n    setIsDarkMode,\r\n    setNavOpen,\r\n  } = useAmazonContext();\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State for the search term\r\n  const [filteredEntries, setFilteredEntries] = useState([]); // State for filtered entries\r\n\r\n  // Filter the entries based on the search term\r\n  useEffect(() => {\r\n    if (entryStore && searchTerm) {\r\n      const filtered = entryStore\r\n        .map((entry) => {\r\n          const filteredSubEntries = entry.entries.filter((subEntry) => {\r\n            const subEntryMatches = subEntry.title\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase());\r\n            const nestedEntryMatches =\r\n              subEntry.entries &&\r\n              subEntry.entries.some((nestedEntry) =>\r\n                nestedEntry.entries.some(\r\n                  (section) =>\r\n                    section.title &&\r\n                    section.title\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase())\r\n                )\r\n              );\r\n            return subEntryMatches || nestedEntryMatches;\r\n          });\r\n          return { ...entry, entries: filteredSubEntries };\r\n        })\r\n        .filter((entry) => entry.entries.length > 0);\r\n      setFilteredEntries(filtered);\r\n    } else {\r\n      setFilteredEntries(entryStore);\r\n    }\r\n  }, [entryStore, searchTerm]);\r\n\r\n  console.log(entryStore);\r\n  console.log(entryStore, courseTitleUserIsOn);\r\n  const [dropDownEntries, setDropDownEntries] = useState(null);\r\n\r\n  let currentUrl = window.location.href;\r\n  console.log(currentUrl);\r\n  // setCurrentUrlState(currentUrl);\r\n  let currentUrlArray = currentUrl.split(\"/\");\r\n  console.log(currentUrlArray);\r\n  let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n  console.log(topicAndSection);\r\n  //Handling%23 in URL\r\n  var topicAndSectionArray = [];\r\n\r\n  if (topicAndSection.includes(\"%\")) {\r\n    topicAndSectionArray = topicAndSection.split(\"%23\");\r\n  } else {\r\n    topicAndSectionArray = topicAndSection.split(\"#\");\r\n  }\r\n  console.log(topicAndSectionArray);\r\n  let currentTopicNumber = topicAndSectionArray[0];\r\n  let currentSectionNumber = topicAndSectionArray[1];\r\n  console.log(currentTopicNumber);\r\n\r\n  console.log(\"progressData:\", props.progressData);\r\n  console.log(\"chapterProgressData:\", props.chapterProgressData);\r\n  console.log(\r\n    \"simplifiedChaptersLessonsData:\",\r\n    props.simplifiedChaptersLessonsData\r\n  );\r\n  console.log(\"unlockedLessons:\", props.unlockedLessons);\r\n  console.log(\"unlockedChapters:\", props.unlockedChapters);\r\n  console.log(\"unlockedQuizzes:\", props.unlockedQuizzes);\r\n  console.log(\"isLastLessonOfChapter:\", props.isLastLessonOfChapter);\r\n  console.log(\"isFirstLessonOfChapter:\", props.isFirstLessonOfChapter);\r\n  console.log(\r\n    \"chapterOfLastCompletedLesson:\",\r\n    props.chapterOfLastCompletedLesson\r\n  );\r\n  console.log(\"lastUnlockedLessonNumber:\", props.lastUnlockedLessonNumber);\r\n  console.log(\"lastUnlockedLessonTitle:\", props.lastUnlockedLessonTitle);\r\n\r\n  return (\r\n    <div\r\n      className={`sideNavContainer ${isDarkMode ? \"dark\" : \"light\"}`}\r\n      style={\r\n        props.state === \"exiting\"\r\n          ? { animation: \"moveMainContainer .3s forwards\" }\r\n          : props.state === \"entering\"\r\n          ? { animation: \"moveMainContainer .3s reverse backwards\" }\r\n          : null\r\n      }\r\n    >\r\n      <div\r\n        className=\"sidenavHeader\"\r\n        style={{\r\n          background: \"#8747d4\",\r\n          position: \"sticky\",\r\n          top: \"0\",\r\n          zIndex: \"2000\",\r\n        }}\r\n      >\r\n        {courseDetails.courseTitle && (\r\n          <img\r\n            className=\"courseSideNavImage\"\r\n            src={\r\n              \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n              courseDetails.courseTitle.replace(/\\s/g, \"\") +\r\n              \"/courseImage/\" +\r\n              courseDetails.courseTitle.replace(/\\s/g, \"\") +\r\n              \".png\"\r\n            }\r\n            alt=\"\"\r\n          ></img>\r\n        )}\r\n\r\n        <CourseProgressBar\r\n          progressData={props.progressData}\r\n          chapterProgressData={props.chapterProgressData}\r\n          simplifiedChaptersLessonsData={props.simplifiedChaptersLessonsData}\r\n          courseTitleUserIsOn={courseTitleUserIsOn}\r\n        ></CourseProgressBar>\r\n        {props.isLessonProgressEmpty == null ? (\r\n          <div></div>\r\n        ) : props.isLastLessonOfChapter && !props.isFirstLessonOfChapter ? (\r\n          <div>\r\n            <div style={{}} className=\"LessonTitleContainer\">\r\n              <span className=\"LessonNumber\" style={{ color: \"#80e8a2\" }}>\r\n                Continue\r\n              </span>{\" \"}\r\n            </div>{\" \"}\r\n            <Link\r\n              to={`/${courseTitleUserIsOn}/quiz/${props.chapterOfLastCompletedLesson.chapterNumber}`}\r\n            >\r\n              <motion.div\r\n                onClick={\r\n                  props.closeNav ? props.closeNav : () => setNavOpen(false)\r\n                }\r\n                whileTap={{ scale: 0.8 }}\r\n                transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n              >\r\n                <motion.div\r\n                  animate={{ y: [-5, 5, -5] }}\r\n                  transition={{ duration: 2, repeat: Infinity }}\r\n                >\r\n                  <SideNavRowQuiz\r\n                    number={props.chapterOfLastCompletedLesson.chapterNumber}\r\n                    title={props.chapterOfLastCompletedLesson.chapterTitle}\r\n                    width=\"90%\"\r\n                    marginLeft=\"5%\"\r\n                  ></SideNavRowQuiz>\r\n                </motion.div>\r\n              </motion.div>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div style={{}} className=\"LessonTitleContainer\">\r\n              <span className=\"LessonNumber\" style={{ color: \"#80e8a2\" }}>\r\n                Continue\r\n              </span>{\" \"}\r\n            </div>\r\n            <Link\r\n              to={`/${courseTitleUserIsOn}/lesson/${props.lastUnlockedLessonNumber}`}\r\n            >\r\n              <motion.div\r\n                onClick={\r\n                  props.closeNav ? props.closeNav : () => setNavOpen(false)\r\n                }\r\n                whileTap={{ scale: 0.8 }}\r\n                transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n              >\r\n                <motion.div\r\n                  animate={{ y: [-5, 5, -5] }}\r\n                  transition={{ duration: 2, repeat: Infinity }}\r\n                >\r\n                  <SideNavRowLesson\r\n                    backgroundColor=\"white\"\r\n                    number={props.lastUnlockedLessonNumber}\r\n                    title={props.lastUnlockedLessonTitle}\r\n                    width=\"90%\"\r\n                    marginLeft=\"5%\"\r\n                    borderRadius=\"14% 2% 2% 14% / 50% 10% 10% 50%\"\r\n                  ></SideNavRowLesson>\r\n                </motion.div>\r\n              </motion.div>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <SearchBarContainer style={{ marginTop: \"3vh\" }}>\r\n        {/* <SearchIcon>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n        </SearchIcon> */}\r\n        <SearchBar\r\n          style={{ borderRadius: \"2% 2% 2% 2% / 15% 15% 15% 15%\" }}\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        ></SearchBar>\r\n      </SearchBarContainer>\r\n      <div className=\"sideNavChapterHeader\">\r\n        <p>Chapters</p>\r\n      </div>\r\n      {filteredEntries &&\r\n        filteredEntries.map((entry, index) => {\r\n          return (\r\n            <div className=\"sidenavContentChapter\">\r\n              <div className=\"sidenavContentHeaderMainMenu\">\r\n                {entry.topicHeaderNumber && entry.topicHeaderNumber}: &nbsp;\r\n                {entry.title}\r\n              </div>\r\n              {entry.entries.map((subEntry, index) => {\r\n                return (\r\n                  <>\r\n                    <SideNavRow\r\n                      number={subEntry.topicNumber}\r\n                      title={subEntry.title}\r\n                      entries={subEntry.entries}\r\n                      styleVariable={\r\n                        subEntry.topicNumber == currentTopicNumber\r\n                          ? { background: \"#dfdfdf\" }\r\n                          : {}\r\n                      }\r\n                      lockState={\r\n                        props.unlockedChapters &&\r\n                        props.unlockedChapters.includes(subEntry.topicNumber)\r\n                          ? \"unlocked\"\r\n                          : \"locked\"\r\n                      }\r\n                    />\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      <div style={{ minHeight: \"400px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { gapi } from 'gapi-script';\r\n\r\n// This needs to be moved to env\r\nconst clientId = \"910323986833-fnj0aj92c8l42bl0gdv0ogaejuc2fdfs.apps.googleusercontent.com\"\r\n\r\nfunction LogoutN() {\r\n}\r\n\r\nconst Logout = ({ setIsLoggedIn }) => {\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        history.replace('/LogoutMessage');\r\n      };\r\n\r\n    const onSuccess = () => {\r\n        console.log(\"log out successful!\");\r\n    }\r\n\r\nreturn (\r\n  <div style={{ position: 'absolute', top: '120px', right: '40px' }}>\r\n      <div id clientId=\"signOutButton\">\r\n        <GoogleLogout\r\n            clientId={clientId}\r\n            buttonText={\"Logout\"}\r\n            onLogoutSuccess={credentialResponse => {\r\n                onSuccess();\r\n                handleLogout(); \r\n              }}\r\n          text=\"signin_with\"\r\n          width=\"300px\"\r\n          size=\"large\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;", "import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ChapterProgressBar = (props) => {\r\n  const {\r\n    courseTitleUserIsOn,\r\n    entryStore,\r\n    isDarkMode,\r\n    subContainer,\r\n\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n\r\n    setEntryStore,\r\n\r\n    setIsDarkMode,\r\n    progressData,\r\n    setProgressData,\r\n    chapterProgressData,\r\n    setChapterProgressData,\r\n  } = useAmazonContext();\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching progress data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProgress();\r\n  }, []);\r\n\r\n  console.log(progressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchChapterProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchChapterProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setChapterProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chapter progress data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchChapterProgress();\r\n  }, []);\r\n\r\n  console.log(chapterProgressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  //Simplfied entryStore\r\n\r\n  function simplifyData(data) {\r\n    return (\r\n      data &&\r\n      data\r\n        .map((topicHeader) => {\r\n          return topicHeader.entries.map((chapter) => {\r\n            return {\r\n              chapterNumber: chapter.topicNumber,\r\n              chapterTitle: chapter.title,\r\n              lessons: chapter.entries[0].entries.map((lesson) => {\r\n                return {\r\n                  lessonNumber: lesson.sectionNumber,\r\n                  lessonTitle: lesson.title,\r\n                };\r\n              }),\r\n            };\r\n          });\r\n        })\r\n        .flat()\r\n    );\r\n  }\r\n\r\n  // Usage\r\n  const simplifiedChaptersLessonsData = simplifyData(entryStore);\r\n  console.log(simplifiedChaptersLessonsData);\r\n\r\n  function generateunlockedLessons(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    chapterProgressData,\r\n    courseTitleUserIsOn\r\n  ) {\r\n    const unlockedLessons = [];\r\n\r\n    const userProgress =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n    if (userProgress) {\r\n      const { lessonProgress } = userProgress;\r\n      const lastCompletedLesson = lessonProgress[lessonProgress.length - 1];\r\n      const chapterContainingLastCompletedLesson =\r\n        simplifiedChaptersLessonsData &&\r\n        simplifiedChaptersLessonsData.find((chapter) => {\r\n          return chapter.lessons.some(\r\n            (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n          );\r\n        });\r\n\r\n      if (chapterContainingLastCompletedLesson) {\r\n        const { lessons } = chapterContainingLastCompletedLesson;\r\n        const lastCompletedLessonIndex = lessons.findIndex(\r\n          (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n        );\r\n        if (lastCompletedLessonIndex === lessons.length - 1) {\r\n          // Add all completed lessons and check chapter completion\r\n          unlockedLessons.push(...lessonProgress);\r\n          const nextChapterIndex =\r\n            simplifiedChaptersLessonsData.findIndex(\r\n              (chapter) =>\r\n                chapter.chapterNumber ===\r\n                chapterContainingLastCompletedLesson.chapterNumber\r\n            ) + 1;\r\n          const nextChapter = simplifiedChaptersLessonsData[nextChapterIndex];\r\n          if (nextChapter) {\r\n            const chapterProgress =\r\n              chapterProgressData &&\r\n              chapterProgressData.find(\r\n                (progress) => progress.courseProgress === courseTitleUserIsOn\r\n              )?.chapterProgress;\r\n            if (\r\n              chapterProgress &&\r\n              chapterProgress.includes(\r\n                chapterContainingLastCompletedLesson.chapterNumber\r\n              )\r\n            ) {\r\n              const nextLesson = nextChapter.lessons[0];\r\n              unlockedLessons.push(nextLesson.lessonNumber);\r\n            }\r\n          }\r\n        } else {\r\n          // Add completed lessons and next lesson in the same chapter\r\n          const nextLesson = lessons[lastCompletedLessonIndex + 1];\r\n          unlockedLessons.push(...lessonProgress, nextLesson.lessonNumber);\r\n        }\r\n      }\r\n    }\r\n\r\n    return unlockedLessons;\r\n  }\r\n\r\n  // Generate the third dataset\r\n  const unlockedLessons = generateunlockedLessons(\r\n    props.progressData ? props.progressData : progressData,\r\n    simplifiedChaptersLessonsData,\r\n    props.chapterProgressData ? props.ChapterProgressBar : chapterProgressData,\r\n    courseTitleUserIsOn\r\n  );\r\n\r\n  // Log the result\r\n  console.log(unlockedLessons);\r\n\r\n  function generateUnlockedQuizzes(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    courseTitleUserIsOn\r\n  ) {\r\n    const unlockedQuizzes = [];\r\n\r\n    const userProgress =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n    if (userProgress) {\r\n      simplifiedChaptersLessonsData &&\r\n        simplifiedChaptersLessonsData.forEach((chapter) => {\r\n          const lastLessonNumber =\r\n            chapter.lessons[chapter.lessons.length - 1].lessonNumber;\r\n          const isLastLessonCompleted =\r\n            userProgress.lessonProgress.includes(lastLessonNumber);\r\n          if (isLastLessonCompleted) {\r\n            unlockedQuizzes.push(chapter.chapterNumber);\r\n          }\r\n        });\r\n    }\r\n\r\n    return unlockedQuizzes;\r\n  }\r\n\r\n  function generateUnlockedChapters(\r\n    simplifiedChaptersLessonsData,\r\n    unlockedLessons\r\n  ) {\r\n    const unlockedChapters = [];\r\n\r\n    simplifiedChaptersLessonsData &&\r\n      simplifiedChaptersLessonsData.forEach((chapter) => {\r\n        const hasUnlockedLesson = chapter.lessons.some((lesson) =>\r\n          unlockedLessons.includes(lesson.lessonNumber)\r\n        );\r\n        if (hasUnlockedLesson) {\r\n          unlockedChapters.push(chapter.chapterNumber);\r\n        }\r\n      });\r\n\r\n    return unlockedChapters;\r\n  }\r\n\r\n  // Generate the arrays\r\n  const unlockedQuizzes = generateUnlockedQuizzes(\r\n    props.progressData ? props.progressData : progressData,\r\n    simplifiedChaptersLessonsData,\r\n    courseTitleUserIsOn\r\n  );\r\n  const unlockedChapters = generateUnlockedChapters(\r\n    simplifiedChaptersLessonsData,\r\n    unlockedLessons\r\n  );\r\n\r\n  // Log the results\r\n  console.log(unlockedQuizzes);\r\n  console.log(unlockedChapters);\r\n\r\n  // Find the progress data for the current chapter\r\n\r\n  const courseProgressData = props.progressData\r\n    ? props.progressData.find(\r\n        (progress) => progress.courseProgress === props.courseTitleUserIsOn\r\n      )\r\n    : progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === props.courseTitleUserIsOn\r\n      );\r\n\r\n  console.log(courseProgressData);\r\n\r\n  // Find the chapter progress data for the current course\r\n  const chapterProgressDataAgain = props.chapterProgressData\r\n    ? props.chapterProgressData.find(\r\n        (progress) => progress.courseProgress === props.courseTitleUserIsOn\r\n      )\r\n    : chapterProgressData &&\r\n      chapterProgressData.find(\r\n        (progress) => progress.courseProgress === props.courseTitleUserIsOn\r\n      );\r\n\r\n  console.log(chapterProgressDataAgain);\r\n\r\n  // Get the lessons the user has completed\r\n  const completedLessons = new Set(courseProgressData?.lessonProgress || []);\r\n  console.log(completedLessons);\r\n\r\n  // Get the chapters the user has completed\r\n  const completedChapters = new Set(\r\n    chapterProgressDataAgain?.chapterProgress || []\r\n  );\r\n  console.log(completedChapters);\r\n  // Calculate total number of lessons in the chapter\r\n  const chapterNumber = props.lessonNumber\r\n    ? props.lessonNumber.substring(0, props.lessonNumber.lastIndexOf(\".\"))\r\n    : props.chapterNumber;\r\n  console.log(chapterNumber);\r\n\r\n  const chapterData =\r\n    simplifiedChaptersLessonsData &&\r\n    simplifiedChaptersLessonsData.find(\r\n      (chapter) => chapter.chapterNumber === chapterNumber\r\n    );\r\n  console.log(chapterData);\r\n\r\n  const totalLessonsInChapter = chapterData?.lessons.length || 0;\r\n  console.log(totalLessonsInChapter);\r\n\r\n  // Calculate total number of quizzes for the chapter\r\n  const totalQuizzesCompletedInChapter = completedChapters.has(chapterNumber)\r\n    ? 1\r\n    : 0;\r\n  console.log(totalQuizzesCompletedInChapter);\r\n\r\n  // Calculate total number of completed lessons and quizzes\r\n  // Calculate total number of completed lessons in the chapter\r\n  let completedCount = 0;\r\n  chapterData?.lessons.forEach((lesson) => {\r\n    if (completedLessons.has(lesson.lessonNumber)) {\r\n      completedCount++;\r\n    }\r\n  });\r\n\r\n  console.log(completedCount);\r\n\r\n  // Calculate percentage of chapter completed and round up\r\n  const percentage = Math.ceil(\r\n    ((completedCount + totalQuizzesCompletedInChapter) /\r\n      (totalLessonsInChapter + 1)) *\r\n      100\r\n  );\r\n\r\n  //Note the 1 in the dinominator takes into account that each chapter has one quiz (Total Lessons and Quzzies completed over total lessons and quizzes in the chapter)\r\n\r\n  console.log(percentage);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{}} className=\"LessonTitleContainer\">\r\n        <span\r\n          className=\"LessonNumber\"\r\n          style={{ color: props.color ? props.color : \"rgb(80, 200, 120)\" }}\r\n        >\r\n          Chapter Progress\r\n        </span>{\" \"}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          maxWidth: \"85%\",\r\n          marginLeft: \"7%\",\r\n        }}\r\n      >\r\n        <span\r\n          style={{\r\n            marginRight: \"25px\",\r\n            color: props.color ? props.color : \"rgb(80, 200, 120)\",\r\n            fontSize: \"3vh\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >{`${percentage}%`}</span>\r\n        <div style={{ flex: 1, backgroundColor: \"#f0f0f0\", borderRadius: 20 }}>\r\n          <motion.div\r\n            style={{\r\n              width: `${percentage}%`,\r\n              backgroundColor: \"rgb(80, 200, 120)\",\r\n              height: 30,\r\n              borderRadius: \"inherit\",\r\n              textAlign: \"center\",\r\n              lineHeight: \"20px\",\r\n              color: \"white\",\r\n            }}\r\n            initial={{ width: 0 }}\r\n            animate={{ width: `${percentage}%` }}\r\n            transition={{ duration: 0.5, ease: \"easeInOut\" }}\r\n          ></motion.div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChapterProgressBar;\r\n", "import React, { useEffect, useState } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport SideNavRowLesson from \"./SideNavRowLesson\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport SideNavRowQuiz from \"./SideNavRowQuiz\";\r\nimport Logout from \"../userAuth/Logout\";\r\nimport axios from \"axios\";\r\nimport ChapterProgressBar from \"../ChapterProgressBar\";\r\n\r\nexport default function SubContainer(props) {\r\n  const {\r\n    subContainerEntries,\r\n    setSubContainer,\r\n    courseTitleUserIsOn,\r\n    isDarkMode,\r\n    progressData,\r\n    setProgressData,\r\n    chapterProgressData,\r\n    setChapterProgressData,\r\n    entryStore,\r\n    setNavOpen,\r\n  } = useAmazonContext();\r\n  const [currentSectionNumberState, setCurrentSectionNumberState] =\r\n    useState(\"\");\r\n\r\n  console.log(subContainerEntries);\r\n\r\n  //Code to set current section state so that it can be used to check which section was clicked to colour code it\r\n  useEffect(() => {\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n    console.log(topicAndSection);\r\n    //Handling%23 in URL\r\n    var topicAndSectionArray = [];\r\n\r\n    if (topicAndSection.includes(\"%\")) {\r\n      topicAndSectionArray = topicAndSection.split(\"%23\");\r\n    } else {\r\n      topicAndSectionArray = topicAndSection.split(\"#\");\r\n    }\r\n    console.log(topicAndSectionArray);\r\n    let currentSectionNumber = topicAndSectionArray[1];\r\n    console.log(currentSectionNumber);\r\n    setCurrentSectionNumberState(currentSectionNumber);\r\n  }, []);\r\n  //End\r\n\r\n  return (\r\n    <div\r\n      className={`sub-container ${isDarkMode ? \"dark\" : \"light\"}`}\r\n      style={\r\n        props.state === \"entering\"\r\n          ? { animation: \"moveSubContainer .3s forwards\" }\r\n          : props.state === \"entered\"\r\n          ? { transform: \"translateX(0px)\" }\r\n          : { animation: \"moveSubContainer .3s reverse backwards\" }\r\n      }\r\n    >\r\n      <div\r\n        className=\"sidenavHeader\"\r\n        style={{\r\n          background: \"#8747d4\",\r\n          position: \"sticky\",\r\n          top: \"0\",\r\n          zIndex: \"2000\",\r\n        }}\r\n      >\r\n        {subContainerEntries &&\r\n          subContainerEntries.map((subEntry, index) => (\r\n            <div>\r\n              {/* <Link to={`/${courseTitleUserIsOn}/topic/${subEntry.topicNumber}`}> */}\r\n              <div style={{ color: \"white\" }} className=\"LessonTitleContainer\">\r\n                <span className=\"LessonNumber\">\r\n                  Chapter {subEntry.topicNumber}\r\n                </span>{\" \"}\r\n                <br />\r\n                <span className=\"LessonTitle\">{subEntry.title}</span>\r\n              </div>\r\n              <ChapterProgressBar\r\n                chapterNumber={subEntry.topicNumber}\r\n                courseTitleUserIsOn={courseTitleUserIsOn}\r\n                color=\"#80e8a2\"\r\n              ></ChapterProgressBar>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"sub-header\" onClick={() => setSubContainer(false)}>\r\n        <i class=\"fas fa-arrow-left\"></i>\r\n      </div>\r\n\r\n      <div className=\"sideNavChapterHeader\">\r\n        <p>Lessons</p>\r\n      </div>\r\n      {subContainerEntries &&\r\n        subContainerEntries.map((subEntry, index) => (\r\n          <>\r\n            {/* </Link> */}\r\n            {subEntry.entries.map((superEntry) =>\r\n              (props.unlockedLessons &&\r\n                props.unlockedLessons.includes(superEntry.sectionNumber)) ||\r\n              superEntry.sectionNumber == \"1.1.1\" ? (\r\n                <Link\r\n                  key={superEntry.sectionNumber}\r\n                  to={`/${courseTitleUserIsOn}/lesson/${superEntry.sectionNumber}`}\r\n                >\r\n                  <div\r\n                    onClick={\r\n                      props.closeNav ? props.closeNav : () => setNavOpen(false)\r\n                    }\r\n                  >\r\n                    <SideNavRowLesson\r\n                      number={superEntry.sectionNumber}\r\n                      title={superEntry.title}\r\n                      lockState=\"unlocked\"\r\n                      styleVariable={\r\n                        superEntry.sectionNumber == currentSectionNumberState\r\n                          ? { background: \"#ebebeb\" }\r\n                          : {}\r\n                      }\r\n                    />\r\n                  </div>\r\n                </Link>\r\n              ) : (\r\n                <div key={superEntry.sectionNumber}>\r\n                  <div>\r\n                    <SideNavRowLesson\r\n                      number={superEntry.sectionNumber}\r\n                      title={superEntry.title}\r\n                      lockState=\"locked\"\r\n                      styleVariable={\r\n                        superEntry.sectionNumber == currentSectionNumberState\r\n                          ? { background: \"#ebebeb\" }\r\n                          : {}\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )\r\n            )}\r\n\r\n            {/* Display \"Quiz\" div for the last subEntry */}\r\n            {index === subContainerEntries.length - 1 &&\r\n            props.unlockedQuizzes &&\r\n            props.unlockedQuizzes.includes(subEntry.topicNumber) ? (\r\n              <Link to={`/${courseTitleUserIsOn}/quiz/${subEntry.topicNumber}`}>\r\n                <div\r\n                  onClick={\r\n                    props.closeNav ? props.closeNav : () => setNavOpen(false)\r\n                  }\r\n                  style={{ marginTop: \"100px\" }}\r\n                >\r\n                  <SideNavRowQuiz\r\n                    title={subEntry.title}\r\n                    number={subEntry.topicNumber}\r\n                    lockState=\"unlocked\"\r\n                  ></SideNavRowQuiz>\r\n                </div>\r\n              </Link>\r\n            ) : (\r\n              <div style={{ marginTop: \"100px\" }}>\r\n                <SideNavRowQuiz\r\n                  title={subEntry.title}\r\n                  number={subEntry.topicNumber}\r\n                  lockState=\"locked\"\r\n                ></SideNavRowQuiz>\r\n              </div>\r\n            )}\r\n          </>\r\n        ))}\r\n      <div style={{ minHeight: \"400px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SideNavContent from \"./SideNavContent\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport SubContainer from \"./SubContainer\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CourseProgressBar from \"./CourseProgressBar\";\r\n\r\nexport default function Sidenav(props) {\r\n  let {\r\n    subContainer,\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    entryStore,\r\n    setEntryStore,\r\n    isDarkMode,\r\n    setIsDarkMode,\r\n    progressData,\r\n    setProgressData,\r\n    chapterProgressData,\r\n    setChapterProgressData,\r\n    setSubContainer,\r\n  } = useAmazonContext();\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching progress data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProgress();\r\n  }, []);\r\n\r\n  console.log(progressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchChapterProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchChapterProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setChapterProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chapter progress data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchChapterProgress();\r\n  }, []);\r\n\r\n  console.log(chapterProgressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  //Simplfied entryStore\r\n\r\n  function simplifyData(data) {\r\n    return (\r\n      data &&\r\n      data\r\n        .map((topicHeader) => {\r\n          return topicHeader.entries.map((chapter) => {\r\n            return {\r\n              chapterNumber: chapter.topicNumber,\r\n              chapterTitle: chapter.title,\r\n              lessons: chapter.entries[0].entries.map((lesson) => {\r\n                return {\r\n                  lessonNumber: lesson.sectionNumber,\r\n                  lessonTitle: lesson.title,\r\n                };\r\n              }),\r\n            };\r\n          });\r\n        })\r\n        .flat()\r\n    );\r\n  }\r\n\r\n  // Usage\r\n  const simplifiedChaptersLessonsData = simplifyData(entryStore);\r\n  console.log(simplifiedChaptersLessonsData);\r\n\r\n  function generateunlockedLessons(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    chapterProgressData,\r\n    courseTitleUserIsOn\r\n  ) {\r\n    const unlockedLessons = [];\r\n\r\n    const userProgress =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n    if (userProgress) {\r\n      const { lessonProgress } = userProgress;\r\n      const lastCompletedLesson = lessonProgress[lessonProgress.length - 1];\r\n      const chapterContainingLastCompletedLesson =\r\n        simplifiedChaptersLessonsData &&\r\n        simplifiedChaptersLessonsData.find((chapter) => {\r\n          return chapter.lessons.some(\r\n            (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n          );\r\n        });\r\n\r\n      if (chapterContainingLastCompletedLesson) {\r\n        const { lessons } = chapterContainingLastCompletedLesson;\r\n        const lastCompletedLessonIndex = lessons.findIndex(\r\n          (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n        );\r\n        if (lastCompletedLessonIndex === lessons.length - 1) {\r\n          // Add all completed lessons and check chapter completion\r\n          unlockedLessons.push(...lessonProgress);\r\n          const nextChapterIndex =\r\n            simplifiedChaptersLessonsData.findIndex(\r\n              (chapter) =>\r\n                chapter.chapterNumber ===\r\n                chapterContainingLastCompletedLesson.chapterNumber\r\n            ) + 1;\r\n          const nextChapter = simplifiedChaptersLessonsData[nextChapterIndex];\r\n          if (nextChapter) {\r\n            const chapterProgress =\r\n              chapterProgressData &&\r\n              chapterProgressData.find(\r\n                (progress) => progress.courseProgress === courseTitleUserIsOn\r\n              )?.chapterProgress;\r\n            if (\r\n              chapterProgress &&\r\n              chapterProgress.includes(\r\n                chapterContainingLastCompletedLesson.chapterNumber\r\n              )\r\n            ) {\r\n              const nextLesson = nextChapter.lessons[0];\r\n              unlockedLessons.push(nextLesson.lessonNumber);\r\n            }\r\n          }\r\n        } else {\r\n          // Add completed lessons and next lesson in the same chapter\r\n          const nextLesson = lessons[lastCompletedLessonIndex + 1];\r\n          unlockedLessons.push(...lessonProgress, nextLesson.lessonNumber);\r\n        }\r\n      }\r\n    }\r\n\r\n    return unlockedLessons;\r\n  }\r\n\r\n  // Generate the third dataset\r\n  const unlockedLessons = generateunlockedLessons(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    chapterProgressData,\r\n    courseTitleUserIsOn\r\n  );\r\n\r\n  // Log the result\r\n  console.log(unlockedLessons);\r\n\r\n  function generateUnlockedQuizzes(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    courseTitleUserIsOn\r\n  ) {\r\n    const unlockedQuizzes = [];\r\n\r\n    const userProgress =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n    if (userProgress) {\r\n      simplifiedChaptersLessonsData &&\r\n        simplifiedChaptersLessonsData.forEach((chapter) => {\r\n          const lastLessonNumber =\r\n            chapter.lessons[chapter.lessons.length - 1].lessonNumber;\r\n          const isLastLessonCompleted =\r\n            userProgress.lessonProgress.includes(lastLessonNumber);\r\n          if (isLastLessonCompleted) {\r\n            unlockedQuizzes.push(chapter.chapterNumber);\r\n          }\r\n        });\r\n    }\r\n\r\n    return unlockedQuizzes;\r\n  }\r\n\r\n  function generateUnlockedChapters(\r\n    simplifiedChaptersLessonsData,\r\n    unlockedLessons\r\n  ) {\r\n    const unlockedChapters = [];\r\n\r\n    simplifiedChaptersLessonsData &&\r\n      simplifiedChaptersLessonsData.forEach((chapter) => {\r\n        const hasUnlockedLesson = chapter.lessons.some((lesson) =>\r\n          unlockedLessons.includes(lesson.lessonNumber)\r\n        );\r\n        if (hasUnlockedLesson) {\r\n          unlockedChapters.push(chapter.chapterNumber);\r\n        }\r\n      });\r\n\r\n    return unlockedChapters;\r\n  }\r\n\r\n  // Generate the arrays\r\n  const unlockedQuizzes = generateUnlockedQuizzes(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    courseTitleUserIsOn\r\n  );\r\n  const unlockedChapters = generateUnlockedChapters(\r\n    simplifiedChaptersLessonsData,\r\n    unlockedLessons\r\n  );\r\n\r\n  // Log the results\r\n  console.log(unlockedQuizzes);\r\n  console.log(unlockedChapters);\r\n\r\n  //Find lastunlockedlesson\r\n\r\n  const lastUnlockedLessonNumber = unlockedLessons[unlockedLessons.length - 1];\r\n\r\n  function getLessonTitle(lessonNumber) {\r\n    if (simplifiedChaptersLessonsData) {\r\n      for (let chapter of simplifiedChaptersLessonsData) {\r\n        for (let lesson of chapter.lessons) {\r\n          if (lesson.lessonNumber === lessonNumber) {\r\n            return lesson.lessonTitle;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return null; // Return null if lessonNumber is not found\r\n  }\r\n\r\n  const lastUnlockedLessonTitle = getLessonTitle(lastUnlockedLessonNumber);\r\n  // Example usage\r\n  console.log(lastUnlockedLessonNumber, lastUnlockedLessonTitle);\r\n\r\n  //How can I determine true or false that the last completed lesson in progressData, is the last lesson of chapter?\r\n\r\n  // Step 1: Find the lessonProgress array based on the course the user is on\r\n  const currentCourseProgress =\r\n    progressData &&\r\n    progressData.find(\r\n      (progress) => progress.courseProgress === courseTitleUserIsOn\r\n    );\r\n\r\n  // Step 2: Get the last completed lesson from the lessonProgress array\r\n  const lastCompletedLesson =\r\n    currentCourseProgress && currentCourseProgress.lessonProgress.slice(-1)[0];\r\n\r\n  // Step 3: Find the corresponding chapter in simplifiedChaptersLessonsData\r\n  const chapterOfLastCompletedLesson =\r\n    simplifiedChaptersLessonsData &&\r\n    simplifiedChaptersLessonsData.find((chapter) =>\r\n      chapter.lessons.some(\r\n        (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n      )\r\n    );\r\n\r\n  // Step 4: Check if the last completed lesson is the last lesson of the chapter\r\n  const isLastLessonOfChapter =\r\n    chapterOfLastCompletedLesson &&\r\n    chapterOfLastCompletedLesson.lessons.slice(-1)[0].lessonNumber ===\r\n      lastCompletedLesson;\r\n\r\n  console.log(isLastLessonOfChapter);\r\n\r\n  //Similary could you also determine true or false that the last unlocked lesson in unlockedLessons, is the first lesson of chapter?\r\n\r\n  // Step 1: Get the last unlocked lesson from the unlockedLessons array\r\n  const lastUnlockedLesson = unlockedLessons.slice(-1)[0];\r\n\r\n  // Step 2: Find the corresponding chapter in simplifiedChaptersLessonsData\r\n  const chapterOfLastUnlockedLesson =\r\n    simplifiedChaptersLessonsData &&\r\n    simplifiedChaptersLessonsData.find((chapter) =>\r\n      chapter.lessons.some(\r\n        (lesson) => lesson.lessonNumber === lastUnlockedLesson\r\n      )\r\n    );\r\n\r\n  // Step 3: Check if the last unlocked lesson is the first lesson of the chapter\r\n  const isFirstLessonOfChapter =\r\n    chapterOfLastUnlockedLesson &&\r\n    chapterOfLastUnlockedLesson.lessons[0].lessonNumber === lastUnlockedLesson;\r\n\r\n  console.log(isFirstLessonOfChapter);\r\n\r\n  // Check if no lesson progress\r\n\r\n  // Find the lessonProgress array based on the course the user is on\r\n\r\n  // Check if lessonProgress is empty\r\n  const isLessonProgressEmpty =\r\n    currentCourseProgress && currentCourseProgress.lessonProgress.length === 0;\r\n  console.log(isLessonProgressEmpty);\r\n\r\n  return (\r\n    <div\r\n      className=\"sidenav\"\r\n      style={\r\n        props.state === \"entering\"\r\n          ? { animation: \"moveSideBar .3s forwards\" }\r\n          : props.state === \"entered\"\r\n          ? { transform: \"translateX(-0px)\" }\r\n          : { animation: \"moveSideBar .3s reverse backwards\" }\r\n      }\r\n    >\r\n      <div\r\n        className=\"sidenavHeader\"\r\n        style={{\r\n          display: \"flex\",\r\n          background: \"#8747d4\",\r\n          borderBottom: \"1px solid white\",\r\n        }}\r\n      >\r\n        <Link to={\"/\"} onClick={() => setSubContainer(false)}>\r\n          {\" \"}\r\n          <div className=\"homeBtn\">\r\n            <i class=\"fa-solid fa-house\"></i>\r\n          </div>\r\n        </Link>\r\n\r\n        <div className=\"newCloseBtn\" onClick={props.click}>\r\n          <i class=\"fa-solid fa-xmark\"></i>\r\n        </div>\r\n      </div>\r\n\r\n      <Transition in={!subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => (\r\n          <SideNavContent\r\n            state={state}\r\n            closeNav={props.click}\r\n            progressData={progressData}\r\n            chapterProgressData={chapterProgressData}\r\n            simplifiedChaptersLessonsData={simplifiedChaptersLessonsData}\r\n            unlockedLessons={unlockedLessons}\r\n            unlockedChapters={unlockedChapters}\r\n            unlockedQuizzes={unlockedQuizzes}\r\n            isLastLessonOfChapter={isLastLessonOfChapter}\r\n            isFirstLessonOfChapter={isFirstLessonOfChapter}\r\n            chapterOfLastCompletedLesson={chapterOfLastCompletedLesson}\r\n            lastUnlockedLessonNumber={lastUnlockedLessonNumber}\r\n            lastUnlockedLessonTitle={lastUnlockedLessonTitle}\r\n            isLessonProgressEmpty={isLessonProgressEmpty}\r\n          />\r\n        )}\r\n      </Transition>\r\n      <Transition in={subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => (\r\n          <SubContainer\r\n            state={state}\r\n            closeNav={props.click}\r\n            unlockedLessons={unlockedLessons}\r\n            unlockedChapters={unlockedChapters}\r\n            unlockedQuizzes={unlockedQuizzes}\r\n          />\r\n        )}\r\n      </Transition>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction BackgroundPage(props) {\r\n  return (\r\n    <div>\r\n      <p></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackgroundPage;\r\n", "import React, { useEffect } from \"react\";\r\nimport HHLogo from \"./HHLogo.png\";\r\nimport HamburgerButton from \"./HamburgerButton\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport Sidenav from \"./Sidenav\";\r\nimport BackgroundPage from \"./BackgroundPage\";\r\nimport { useState } from \"react\";\r\nimport { Transition, TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  AmazonContextProvider,\r\n  useAmazonContext,\r\n} from \"../../Contexts/AmazonContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navbar = styled.nav`\r\n  background: #eb8381;\r\n  /* top: 80; */\r\n  height: 6vh;\r\n  transform: translateY(${(props) => props.navTop + \"vh\"});\r\n  transition: 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst QuizMeButton = styled.button`\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  /* margin: 20px; */\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2.5vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #8747d4;\r\n  color: white;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  height: 6vh;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 6vh; /* Adjust the width as needed */\r\n  height: 6vh; /* Adjust the height as needed */\r\n  margin-left: 70px; /* Adjust the margin as needed */\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  position: relative;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 4vh;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: #f8f6f0;\r\n  height: 6vh;\r\n\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ToggleButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-size: 1.5vh;\r\n  font-weight: bold;\r\n  color: #f8f6f0;\r\n  cursor: pointer;\r\n  outline: none;\r\n  position: relative;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 70px;\r\n  height: 35px;\r\n  background-color: #bbb;\r\n  border-radius: 35px;\r\n  transition: background-color 0.3s;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 2.5px;\r\n    left: 2.5px;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    background-color: white;\r\n    transition: left 0.3s;\r\n  }\r\n\r\n  &.study {\r\n    background-color: #eb8381;\r\n    &:after {\r\n      left: 37.5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function MainSideNav(props) {\r\n  const [topicNumbersListfromBackEnd, setTopicNumbersListfromBackEnd] =\r\n    useState([]);\r\n  // const [entryStore, setEntryStore] = useState([]);\r\n  const {\r\n    courseTitleUserIsOn,\r\n    entryStore,\r\n    setEntryStore,\r\n    courseDetails,\r\n    setSubContainerEntries,\r\n    subContainer,\r\n    setSubContainer,\r\n    rowClicked,\r\n    setRowClicked,\r\n    navOpen,\r\n    setNavOpen,\r\n  } = useAmazonContext();\r\n  console.log(courseTitleUserIsOn, courseDetails, entryStore);\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/topicNumbersList?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setTopicNumbersListfromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(topicNumbersListfromBackEnd);\r\n  //This use Effect is needed incase someone lands onto the topic page first, (we are loading sidebar data on the landing page, but need it for the topic page too)\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/sideBarData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setEntryStore(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(entryStore);\r\n\r\n  const [currentUrlState, setCurrentUrlState] = useState(\"0\");\r\n  const [currentTopicNumberState, setCurrentTopicNumberState] = useState(\"0\");\r\n  const [nextTopicNumberState, setNextTopicNumberState] = useState(\"0\");\r\n  const [previousTopicNumberState, setPreviousTopicNumberState] = useState(\"0\");\r\n\r\n  //Code for nav to hide scroll down and show on scroll up\r\n  const [navTop, setNavTop] = useState(0);\r\n  var lastScrollY = window.scrollY;\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (lastScrollY < window.scrollY) {\r\n      setNavTop(-6); //needs to be same as Nav Height defined above\r\n    } else {\r\n      setNavTop(0);\r\n    }\r\n    lastScrollY = window.scrollY;\r\n  });\r\n  //End\r\n\r\n  const openNav = () => {\r\n    setNavOpen(true);\r\n  };\r\n\r\n  const closeNav = () => {\r\n    setNavOpen(false);\r\n  };\r\n\r\n  //Logic for next and previous buttons\r\n  console.log(topicNumbersListfromBackEnd);\r\n  // Step 0.1 I needed this for this component to re-render any time the currentUrl changed, so that re-render would run the useEffect below:\r\n  const setCurrentUrl = () => {\r\n    var currentUrl = window.location.href;\r\n    setCurrentUrlState(currentUrl);\r\n    console.log(currentUrl);\r\n\r\n    if (entryStore) {\r\n      entryStore.forEach(function (entry) {\r\n        entry.entries.forEach(function (subEntry) {\r\n          if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == true\r\n          ) {\r\n            console.log(currentTopicNumberState);\r\n            console.log(subEntry.entries);\r\n            setSubContainer(true);\r\n            setSubContainerEntries(subEntry.entries);\r\n          } else if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == false &&\r\n            subContainer == true\r\n          ) {\r\n            console.log(subEntry.entries);\r\n            setSubContainer(false);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Step 1 obtain current topic:\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n    console.log(topicAndSection);\r\n    //Handling%23 in URL\r\n    var topicAndSectionArray = [];\r\n\r\n    if (topicAndSection.includes(\"%\")) {\r\n      topicAndSectionArray = topicAndSection.split(\"%23\");\r\n    } else {\r\n      topicAndSectionArray = topicAndSection.split(\"#\");\r\n    }\r\n    console.log(topicAndSectionArray);\r\n    let currentTopicNumber = topicAndSectionArray[0];\r\n    console.log(currentTopicNumber);\r\n    setCurrentTopicNumberState(currentTopicNumber);\r\n    //Step 2 Find the index of the currentTopicNumber in list of topic numbers from back end\r\n\r\n    let indexofCurrentTopicNumber = topicNumbersListfromBackEnd.findIndex(\r\n      (topicNumber) => topicNumber == currentTopicNumber\r\n    );\r\n    console.log(indexofCurrentTopicNumber);\r\n\r\n    //Step 3 Derive next topic number in list with catch error for out of bound index\r\n    let indexofNextTopicNumber = indexofCurrentTopicNumber + 1;\r\n    if (indexofNextTopicNumber > topicNumbersListfromBackEnd.length - 1) {\r\n      //if next index great then lenght of array set index number to 0 so you go back to beginning\r\n      indexofNextTopicNumber = 0;\r\n    }\r\n    console.log(indexofNextTopicNumber);\r\n    let nextTopicNumber = topicNumbersListfromBackEnd[indexofNextTopicNumber];\r\n    console.log(nextTopicNumber);\r\n    setNextTopicNumberState(nextTopicNumber);\r\n\r\n    //Step 4 Derive previous topic number in list with catch error for out of bound index\r\n    let indexofPreviousTopicNumber = indexofCurrentTopicNumber - 1;\r\n    if (indexofPreviousTopicNumber < 0) {\r\n      //if next index less then 0 set index number to last so you go back to ending\r\n      indexofPreviousTopicNumber = topicNumbersListfromBackEnd.length - 1;\r\n    }\r\n    console.log(indexofPreviousTopicNumber);\r\n    let previousTopicNumber =\r\n      topicNumbersListfromBackEnd[indexofPreviousTopicNumber];\r\n    console.log(previousTopicNumber);\r\n    setPreviousTopicNumberState(previousTopicNumber);\r\n\r\n    //Step 5 - Change sidebar to show menu based on current topic\r\n    console.log(entryStore); // when code below uncommetned it is saying entrystroe has no properties\r\n\r\n    // if (entryStore) {\r\n    //   entryStore.forEach(function (entry) {\r\n    //     entry.entries.forEach(function (subEntry) {\r\n    //       if (\r\n    //         subEntry.topicNumber == currentTopicNumberState &&\r\n    //         subEntry.rows == true\r\n    //       ) {\r\n    //         console.log(subEntry.entries);\r\n    //         setSubContainerEntries(subEntry.entries);\r\n    //         // setSubContainer(true);\r\n    //       }\r\n    //       // else if (\r\n    //       //   subEntry.topicNumber == currentTopicNumberState &&\r\n    //       //   subEntry.rows == false &&\r\n    //       //   subContainer == true\r\n    //       // ) {\r\n    //       //   console.log(subEntry.entries);\r\n    //       //   setSubContainer(false);\r\n    //       // }\r\n    //     });\r\n    //   });\r\n    // }\r\n\r\n    //End\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"unset\" }}>\r\n      <Navbar\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 1,\r\n        }}\r\n        navTop={navTop}\r\n      >\r\n        <div>\r\n          <HamburgerButton click={openNav}></HamburgerButton>{\" \"}\r\n          <Link to={\"/\"}>\r\n            <Logo src={HHLogo} alt=\"Logo\" />{\" \"}\r\n          </Link>\r\n        </div>\r\n        <Link\r\n          to={`/${courseTitleUserIsOn}/quiz/` + props.selectedTopic.topicNumber}\r\n        >\r\n          {props.selectedTopic.sections.length !== 0 && (\r\n            <QuizMeButton>\r\n              <p style={{ fontSize: \"1.5vh\", margin: \"0px\" }}>Switch to</p>\r\n              <b>Quiz Mode</b>\r\n            </QuizMeButton>\r\n          )}\r\n        </Link>\r\n        <div>\r\n          {topicNumbersListfromBackEnd.findIndex(\r\n            (topicNumber) => topicNumber == currentTopicNumberState\r\n          ) !== 0 && (\r\n            <Link\r\n              to={`/${courseTitleUserIsOn}/topic/${previousTopicNumberState}`}\r\n            >\r\n              <ButtonH2 onClick={setCurrentUrl}>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n              </ButtonH2>\r\n            </Link>\r\n          )}\r\n          {topicNumbersListfromBackEnd.findIndex(\r\n            (topicNumber) => topicNumber == currentTopicNumberState\r\n          ) >\r\n          topicNumbersListfromBackEnd.length - 2 ? (\r\n            <a href=\"https://subscribepage.io/hhcourses\">\r\n              <ButtonH2>\r\n                {\" \"}\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n              </ButtonH2>\r\n            </a>\r\n          ) : (\r\n            <Link to={`/${courseTitleUserIsOn}/topic/${nextTopicNumberState}`}>\r\n              <ButtonH2 onClick={setCurrentUrl}>\r\n                {\" \"}\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n              </ButtonH2>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </Navbar>\r\n\r\n      <Transition\r\n        in={navOpen && entryStore}\r\n        timeout={300}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        {(state) => {\r\n          {\r\n            /* if (state === \"exited\") setSubContainer(false); */\r\n          } //Code for NavBar to reset to main menu every time it closes\r\n          return (\r\n            <>\r\n              <Sidenav state={state} click={closeNav} />\r\n              <div\r\n                className=\"overlay\"\r\n                style={\r\n                  state === \"entering\"\r\n                    ? { animation: \"show .3s forwards\" }\r\n                    : state === \"entered\"\r\n                    ? { opacity: \"1\" }\r\n                    : { animation: \"show .3s backwards reverse\" }\r\n                }\r\n                onClick={closeNav}\r\n              ></div>\r\n              {\r\n                <div\r\n                  className=\"closeBtn\"\r\n                  style={\r\n                    state === \"entering\"\r\n                      ? { animation: \"show .3s forwards\" }\r\n                      : state === \"entered\"\r\n                      ? { opacity: \"1\" }\r\n                      : { animation: \"show .3s backwards reverse\" }\r\n                  }\r\n                  onClick={closeNav}\r\n                >\r\n                  &times;\r\n                </div> //This is code for a close button\r\n              }\r\n            </>\r\n          );\r\n        }}\r\n      </Transition>\r\n\r\n      <BackgroundPage></BackgroundPage>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport styles from \"./Buttons.module.css\";\r\n//Random comment\r\nconst Buttonn = styled.button`\r\n  font-family: \"Century Gothic\", serif;\r\n  padding: 10px 50px;\r\n  color: ${(props) => (props.mouse ? \"red\" : \"blue\")};\r\n  font-size: 50px;\r\n`;\r\n\r\nfunction Button() {\r\n  const [mouse, setMouse] = useState(false);\r\n\r\n  const mouseDown = () => setMouse(!mouse);\r\n  const Share = () => {\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        text: \"Sharing for first time\",\r\n        url: \"/#/topic/2.2#2.2.1\",\r\n        title: \"The Number of Pillars\",\r\n      });\r\n    } else {\r\n      navigator.clipboard.writeText(\"Copied to Clipboard\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Buttonn className={styles.SampleButton} onClick={Share}>\r\n      Share\r\n    </Buttonn>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonH2c = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ButtonH1c = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 25px;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nexport const ButtonH2 = (props) => {\r\n  return <ButtonH2c>{props.children}</ButtonH2c>;\r\n};\r\n\r\nexport const ButtonH1 = (props) => {\r\n  return <ButtonH1c>{props.children}</ButtonH1c>;\r\n};\r\n\r\nexport default ButtonH2;\r\n", "import React, { useState, useContext, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport ButtonH2 from \"./Buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { allExampleData } from \"./TopicData\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\n\r\nconst answerWrongAnime = keyframes`\r\n0%{transform: scale(1)}\r\n20%{transform: scale(1.2)}\r\n50%{transform: scale(1)}\r\n75%{transform: scale(1.2)}\r\n100%{transform: scale(1)}\r\n`;\r\n\r\nconst answerCorrectAnime = keyframes`\r\n0%{transform: scale(1)}\r\n50%{transform: scale(2)}\r\n100%{transform: scale(1)}\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n0%{opacity: 0}\r\n100%{opacity: 1}\r\n`;\r\n\r\nconst ExampleBox = styled.div`\r\n  /* box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2); */\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  /* background: #252525; */\r\n  margin-top: 40px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst ExampleQuestion = styled.div`\r\n  /* font-size: 17px; */\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #eb8381;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ExampleAnswer = styled.div`\r\n  font-size: 2.2vh;\r\n  text-align: center;\r\n  font-family: Quicksand;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  color: #252525;\r\n  display: flex;\r\n  background: ${(props) =>\r\n    props.answerClicked == props.answer ? props.answerColor : \"#fcebeb\"};\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  transition: transform 300ms;\r\n  justify-content: center;\r\n  animation: ${(props) =>\r\n    props.answerClicked == props.answer && props.answerColor == \"#DAF7A6\"\r\n      ? css`\r\n          ${answerCorrectAnime} 1s cubic-bezier(1,-0.74,.42,.57)\r\n        `\r\n      : props.answerClicked == props.answer && props.answerColor == \"#ff726f\"\r\n      ? css`\r\n          ${answerWrongAnime} 400ms\r\n        `\r\n      : \"none\"};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst AnswerExplanation = styled.div`\r\n  font-size: 2vh;\r\n  display: ${(props) =>\r\n    props.answerClicked == props.answer ? \"flex\" : \"none\"};\r\n  align-items: center;\r\n  justify-content: center;\r\n  animation: ${(props) =>\r\n    props.answerClicked == props.answer && props.answerColor == \"#DAF7A6\"\r\n      ? css`\r\n          shakeY 1s\r\n        `\r\n      : props.answerClicked == props.answer && props.answerColor == \"#ff726f\"\r\n      ? css`\r\n          fadeIn 1s\r\n        `\r\n      : \"none\"};\r\n`;\r\n\r\nconst Example = (props) => {\r\n  console.log(props);\r\n  //Obtain Example Data from back end\r\n  const { exampleDatafromBackEnd, courseTitleUserIsOn } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  const [answerColor, setAnswerColor] = useState(\"#fcebeb\");\r\n  const [answerClicked, setAnswerClicked] = useState(\"NoAnswer\");\r\n  const [answerClickedToPractice, setAnswerClickedToPractice] = useState(false);\r\n\r\n  //Shuffling the answers start - note this seems to be also changing shuffled answers in eg quiz\r\n\r\n  function shuffle(array) {\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex != 0) {\r\n      // Pick a remaining element.\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n\r\n    return array;\r\n  }\r\n  const [shuffledAnswersState, setShuffledAnswersState] = useState(\r\n    props.sectionExample && props.sectionExample.answers\r\n  );\r\n  useEffect(() => {\r\n    let shuffledAnswers =\r\n      props.sectionExample && shuffle(props.sectionExample.answers);\r\n    setShuffledAnswersState(shuffledAnswers);\r\n  }, [props.sectionExample]);\r\n\r\n  console.log(props.sectionExample && props.sectionExample.answers);\r\n\r\n  // Shuffle Answers end\r\n\r\n  const checkAnswer = (isCorrect, answer) => {\r\n    setAnswerClicked(answer);\r\n    setAnswerClickedToPractice(true);\r\n    console.log(answerClicked);\r\n\r\n    if (isCorrect == true) {\r\n      setAnswerColor(\"#DAF7A6\");\r\n\r\n      console.log(answerColor);\r\n    } else {\r\n      setAnswerColor(\"#ff726f\");\r\n    }\r\n  };\r\n\r\n  // Randomiser function to create quiz for section\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n\r\n  let needToDisplay = 3;\r\n  let selectedSectionExamples = []; //(Will be displayed on the Quiz page for this section)\r\n\r\n  // Algorithm for obtaining questions from this section (Will be displayed on the Quiz page for this section):\r\n  let allSectionExamples = exampleDatafromBackEnd.filter(\r\n    (example) => example.sectionNumber == props.section\r\n  );\r\n  if (allSectionExamples.length > needToDisplay) {\r\n    selectedSectionExamples = chooseRandom(allSectionExamples, needToDisplay);\r\n  } else {\r\n    selectedSectionExamples = allSectionExamples;\r\n  }\r\n\r\n  console.log(selectedSectionExamples);\r\n\r\n  return (\r\n    <ExampleBox>\r\n      <ExampleQuestion>\r\n        {props.sectionExample && props.sectionExample.question}\r\n      </ExampleQuestion>\r\n      {shuffledAnswersState &&\r\n        shuffledAnswersState.map((answerItem) => {\r\n          return (\r\n            <>\r\n              <ExampleAnswer\r\n                onClick={() =>\r\n                  checkAnswer(answerItem.isCorrect, answerItem.answer)\r\n                }\r\n                answerColor={answerColor}\r\n                answer={answerItem.answer}\r\n                answerClicked={answerClicked}\r\n              >\r\n                <p>{answerItem.answer}</p>\r\n              </ExampleAnswer>\r\n              {\r\n                <AnswerExplanation\r\n                  answerClicked={answerClicked}\r\n                  answer={answerItem.answer}\r\n                  answerColor={answerColor}\r\n                >\r\n                  {answerItem.isCorrect == false ? (\r\n                    <>\r\n                      <p\r\n                        style={{\r\n                          color: \"red\",\r\n                          display: \"inline\",\r\n                          fontSize: \"25px\",\r\n                          margin: \"0 10px\",\r\n                        }}\r\n                      >\r\n                        ✖\r\n                      </p>\r\n                      <p\r\n                        style={{\r\n                          display: \"inline\",\r\n                        }}\r\n                      >\r\n                        {answerItem.explanation}\r\n                      </p>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <p\r\n                        style={{\r\n                          color: \"green\",\r\n                          display: \"inline\",\r\n                          fontSize: \"25px\",\r\n                          margin: \"0 10px 0 0\",\r\n                        }}\r\n                      >\r\n                        ✓\r\n                      </p>{\" \"}\r\n                      <p>Correct!</p>\r\n                    </>\r\n                  )}\r\n                </AnswerExplanation>\r\n              }\r\n            </>\r\n          );\r\n        })}\r\n      {/* <div\r\n        style={\r\n          answerClickedToPractice\r\n            ? { display: \"block\", marginTop: \"30px\", textAlign: \"center\" }\r\n            : { display: \"none\" }\r\n        }\r\n      >\r\n        <Link\r\n          to={{\r\n            pathname:\r\n              `/${courseTitleUserIsOn}/quiz/` +\r\n              props.topicNumber +\r\n              \"/\" +\r\n              props.section,\r\n            state: {\r\n              comingFrom: \"Section\",\r\n              sectionSelectedQuizQuestions: selectedSectionExamples,\r\n              section: props.section, //Section number that came from Topic page, could have also used selectionExample's section number\r\n            },\r\n          }}\r\n        >\r\n          <ButtonH2>\r\n            <b style={{ fontSize: \"2vh\" }}>Practice</b> <br></br>\r\n            <p style={{ fontSize: \"1.5vh\", margin: \"0px\" }}>\r\n              {props.sectionTitle}\r\n            </p>\r\n          </ButtonH2>\r\n        </Link>\r\n      </div> */}\r\n    </ExampleBox>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport TopicData, { allExampleData } from \"./TopicData\";\r\nimport MainSideNav from \"./sidebar/MainSideNav\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport Confetti from \"react-dom-confetti\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\n// import ButtonH2 from \"./Buttons\";\r\nimport Example from \"./Example.js\";\r\n\r\nnavigator.vibrate =\r\n  navigator.vibrate ||\r\n  navigator.webkitVibrate ||\r\n  navigator.mozVibrate ||\r\n  navigator.msVibrate;\r\n\r\n//This is how you write a comment\r\n\r\nconst glowAnime = keyframes`\r\n0%{transform: scale(1); box-shadow: 0 0 0px rgba(0,0,0,0);}\r\n20%{transform: scale(1.01); background: #fcebeb; box-shadow: 0 0 20px #eb8381;}\r\n50%{transform: scale(1); box-shadow: 0 0 0px rgba(0,0,0,0);}\r\n`;\r\n\r\nconst confettiConfig = {\r\n  angle: 90,\r\n  spread: 200,\r\n  startVelocity: 40,\r\n  elementCount: 250,\r\n  dragFriction: 0.12,\r\n  duration: 500,\r\n  stagger: 3,\r\n  width: \"10px\",\r\n  height: \"10px\",\r\n  colors: [\"#eb8381\", \"#fcdab7\", \"#fcebeb\", \"#eb3535\", \"#967bb6\", \"#f2b1ae\"],\r\n  origin: {\r\n    x: 0.2, // Adjust this value to set the desired left margin\r\n    y: 0.5, // Center vertically (0 is top, 1 is bottom)\r\n  },\r\n};\r\n\r\nconsole.log(\"Rendered\");\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  margin-right: \"20px\";\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #fcebeb;\r\n  color: #252525;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #fcebeb;\r\n  }\r\n`;\r\n\r\nconst QuizMeButton = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  margin: 20px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 3vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: white;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst TopicTitle = styled.div`\r\n  color: #eb8381;\r\n  /* font-size: 1rem; */\r\n  /* font-size: clamp(4vh, 30px, 30px); */\r\n  /* font-size: min(2rem, 4vh); */\r\n  font-size: 4vh;\r\n  display: block;\r\n  margin: 30px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n\r\n  /* @media (max-width: 40em) {\r\n    font-size: 5vh;\r\n  } */\r\n\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst TopicDescription = styled.div`\r\n  background: #f8f6f0;\r\n  color: #252525;\r\n  /* height: 30vh; */\r\n  /* font-size: 1.2rem; */\r\n  font-size: 2.2vh;\r\n\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n  padding: 20px;\r\n  box-shadow: 0 0.1rem 0.1rem rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  position: relative;\r\n\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  /* padding: 20px; */\r\n`;\r\n\r\nconst SectionTitle = styled.p`\r\n  color: #eb8381;\r\n  /* font-size: 20px; */\r\n  /* font-size: clamp(3vh, 20px, 20px); */\r\n  font-size: 3vh;\r\n  display: block;\r\n  margin-bottom: 50px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst SectionDescription = styled.div`\r\n  /* height: 30vh; */\r\n  /* font-size: 20px; */\r\n  /* display: flex;\r\n  flex-direction: column; */\r\n  background: #252525;\r\n  color: #f8f6f0;\r\n  font-size: 2vh;\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n  padding: 20px;\r\n  box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.5);\r\n  display: block;\r\n  position: relative;\r\n  align-items: center;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  /* padding: 20px; */\r\n  animation: ${(props) =>\r\n    props.sectionNumber == props.currentUrlSectionID\r\n      ? css`\r\n          ${glowAnime} 2s\r\n        `\r\n      : \"none\"};\r\n\r\n  .sectionImage {\r\n    display: block;\r\n    margin: 0 auto; /* This will center the image horizontally */\r\n    border-radius: 4rem;\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n\r\n  @media (min-width: 1050px) {\r\n    /* Apply styles for desktop devices with a screen width of 768px and above */\r\n    .sectionImage {\r\n      max-width: 25%; /* Adjust the maximum width as needed for desktop view */\r\n      margin-right: 60px; /* Add some spacing between the image and text on desktop */\r\n      display: inline;\r\n      vertical-align: middle;\r\n    }\r\n\r\n    .sectionText {\r\n      display: inline-block;\r\n      max-width: 70%;\r\n      font-size: 3vh;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n\r\n  .complete-button {\r\n    background: #fcebeb;\r\n    color: black;\r\n    padding: 7px 12px;\r\n    border: none;\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    display: block;\r\n    margin: auto;\r\n    font-family: \"Quicksand\", sans-serif;\r\n    font-size: 2vh;\r\n    margin-top: 75px;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .completed-button {\r\n    background: #18a558;\r\n    color: white;\r\n    padding: 7px 12px;\r\n    border: none;\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    display: block;\r\n    margin: auto;\r\n    font-family: \"Quicksand\", sans-serif;\r\n    font-size: 2.5vh;\r\n    margin-top: 75px;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SectionImageAndText = styled.div`\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst NoteTitle = styled.p`\r\n  background: #eb8381;\r\n  align-items: center;\r\n  color: #252525;\r\n  /* font-size: 18px; */\r\n  font-size: 2.5vh;\r\n  display: inline-block;\r\n  margin-bottom: 10px;\r\n  padding-right: 10px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst NoteDescription = styled.p`\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  margin-left: 30px;\r\n`;\r\n\r\nexport const Topic = (props) => {\r\n  //set the courseTitle for whatever course the User is on here as well as course landing page in case a user is lands onto a topic page directly\r\n  let {\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n  } = useAmazonContext();\r\n\r\n  console.log(courseDetails);\r\n  useEffect(() => {\r\n    setCourseTitleUserIsOn(props.match.params.courseTitle);\r\n  }, []);\r\n  console.log(courseTitleUserIsOn);\r\n  console.log(props.match.params.courseTitle);\r\n  //set the course Details\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      console.log(response.data);\r\n      let allCourses = response.data;\r\n      let courseChosen = allCourses.find(\r\n        (o) =>\r\n          o.courseTitle.replace(/\\s/g, \"\") === props.match.params.courseTitle\r\n      );\r\n      setCourseDetails(courseChosen);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(courseDetails);\r\n\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n\r\n  //Obtain Topic Data from back end\r\n\r\n  //Topic Data from BackEnd\r\n  const [selectedTopic, setSelectedTopic] = useState([]);\r\n\r\n  // let { topicDatafromBackEnd } = useAmazonContext();\r\n  // console.log(topicDatafromBackEnd);\r\n\r\n  //Topic to be displayed\r\n  console.log(props.match);\r\n  console.log(props.match.params.topicNumber);\r\n\r\n  let topicNumberFromSideBar = props.match.params.topicNumber;\r\n  //Handling%23 in URL\r\n  if (topicNumberFromSideBar.includes(\"%\")) {\r\n    let topicNumberFromSideBarArray = topicNumberFromSideBar.split(\"%\");\r\n    topicNumberFromSideBar = topicNumberFromSideBarArray[0];\r\n  }\r\n  console.log(topicNumberFromSideBar);\r\n\r\n  //Set the selected topic\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/topicRESTCAll/${topicNumberFromSideBar}?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setSelectedTopic(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [topicNumberFromSideBar, courseDetails]);\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/lessonRESTCAll/2.1.2?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      console.log(response.data);\r\n    });\r\n  }, [topicNumberFromSideBar, courseDetails]);\r\n\r\n  // let selectedTopic = topicDatafromBackEnd.find(\r\n  //   (o) => o.topicNumber === topicNumberFromSideBar\r\n  // );\r\n\r\n  console.log(selectedTopic);\r\n  //End\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/examplesData?collectionName=${courseDetails.courseExamplesCollectionName}&modelName=${courseDetails.courseExamplesModelName}`\r\n    ).then((response) => {\r\n      setExampleDatafromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [topicNumberFromSideBar, courseDetails]);\r\n\r\n  // let { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  //Obtain Example Data from back end\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\r\n  //     \"topicDatafromBackEnd\",\r\n  //     JSON.stringify(topicDatafromBackEnd)\r\n  //   );\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\r\n  //     \"exampleDatafromBackEnd\",\r\n  //     JSON.stringify(exampleDatafromBackEnd)\r\n  //   );\r\n  // });\r\n\r\n  // if (topicDatafromBackEnd.length == 0) {\r\n  //   topicDatafromBackEnd = JSON.parse(\r\n  //     localStorage.getItem(\"topicDatafromBackEnd\")\r\n  //   );\r\n  // }\r\n\r\n  // if (exampleDatafromBackEnd.length == 0) {\r\n  //   exampleDatafromBackEnd = JSON.parse(\r\n  //     localStorage.getItem(\"exampleDatafromBackEnd\")\r\n  //   );\r\n  // }\r\n\r\n  //For page refresh\r\n  //End\r\n\r\n  //Code to make a particular section glow\r\n  let currentUrl = window.location.href;\r\n  console.log(currentUrl);\r\n  // setCurrentUrlState(currentUrl);\r\n  let currentUrlArray = currentUrl.split(\"/\");\r\n  console.log(currentUrlArray);\r\n  let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n  console.log(topicAndSection);\r\n  //Handling%23 in URL\r\n  var topicAndSectionArray = [];\r\n\r\n  if (topicAndSection.includes(\"%\")) {\r\n    topicAndSectionArray = topicAndSection.split(\"%23\");\r\n  } else {\r\n    topicAndSectionArray = topicAndSection.split(\"#\");\r\n  }\r\n\r\n  console.log(topicAndSectionArray);\r\n  let currentUrlSectionID = topicAndSectionArray[1];\r\n  console.log(currentUrlSectionID);\r\n\r\n  // console.log(topicNumberFromSideBar);\r\n  //End\r\n\r\n  //To scroll to the top on change of url or scroll to section\r\n  useEffect(() => {\r\n    if (currentUrlSectionID === undefined) {\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }\r\n  }, [currentUrl]);\r\n\r\n  useEffect(() => {\r\n    if (currentUrlSectionID) {\r\n      const element = document.getElementById(currentUrlSectionID);\r\n      element && element.scrollIntoView();\r\n    }\r\n  });\r\n  console.log(currentUrl);\r\n  //End\r\n\r\n  const sectionList = []; //Creates a list of all the sectionNumbers on this topic\r\n  selectedTopic.sections &&\r\n    selectedTopic.sections.map((section) => {\r\n      return sectionList.push(section.sectionNumber);\r\n    });\r\n\r\n  console.log(sectionList);\r\n\r\n  // Randomiser function to choose an example for a particular section\r\n\r\n  const chooseRandomExample = (sectionNumber) => {\r\n    let allSectionExamples =\r\n      exampleDatafromBackEnd.length !== 0 &&\r\n      exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n    const random = Math.floor(Math.random() * allSectionExamples.length);\r\n    let selectedExample = allSectionExamples[random];\r\n    return selectedExample;\r\n  };\r\n\r\n  // Randomiser function to create quiz for all topics\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n\r\n  let needToDisplay = 100;\r\n  let needtoSelect = Math.ceil(needToDisplay / sectionList.length);\r\n  console.log(needtoSelect);\r\n\r\n  let selectedSectionExamples = []; //List of selected examples from each section\r\n  let selectedSectionExamplesPool = []; //List of all selected examples from all sections\r\n  let newselectedSectionExamplesPool = []; //Needed this to use the concat logic because concat requires you to store the concatenation into a new variable\r\n  let finalSetOfExamplesToDisplay = []; //final list of examples to display\r\n\r\n  // Algorithm for obtaining questions from each section:\r\n  sectionList.map((sectionNumber) => {\r\n    //Mapping through the list of sections that from the Topic\r\n    let allSectionExamples =\r\n      exampleDatafromBackEnd.length !== 0 &&\r\n      exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n    console.log(allSectionExamples);\r\n    if (allSectionExamples.length > needtoSelect) {\r\n      selectedSectionExamples = chooseRandom(allSectionExamples, needtoSelect);\r\n      console.log(selectedSectionExamples);\r\n      newselectedSectionExamplesPool = selectedSectionExamplesPool.concat(\r\n        newselectedSectionExamplesPool,\r\n        selectedSectionExamples\r\n      );\r\n    } else {\r\n      newselectedSectionExamplesPool = selectedSectionExamplesPool.concat(\r\n        newselectedSectionExamplesPool,\r\n        allSectionExamples\r\n      );\r\n    }\r\n    console.log(selectedSectionExamplesPool);\r\n    console.log(newselectedSectionExamplesPool);\r\n  });\r\n  console.log(selectedSectionExamplesPool);\r\n  console.log(newselectedSectionExamplesPool);\r\n  if (newselectedSectionExamplesPool.length > needToDisplay) {\r\n    finalSetOfExamplesToDisplay = chooseRandom(\r\n      newselectedSectionExamplesPool,\r\n      needToDisplay\r\n    );\r\n  } else {\r\n    finalSetOfExamplesToDisplay = newselectedSectionExamplesPool;\r\n  }\r\n\r\n  console.log(finalSetOfExamplesToDisplay);\r\n\r\n  const [completedSections, setCompletedSections] = useState([]);\r\n\r\n  const handleSectionCompletion = (sectionNumber) => {\r\n    if (completedSections.includes(sectionNumber)) {\r\n      setCompletedSections(\r\n        completedSections.filter((section) => section !== sectionNumber)\r\n      );\r\n    } else {\r\n      setCompletedSections([...completedSections, sectionNumber]);\r\n\r\n      // Trigger haptic feedback\r\n      if (navigator.vibrate) {\r\n        // Vibrate for 100ms\r\n        navigator.vibrate(100);\r\n      }\r\n\r\n      setTimeout(() => {\r\n        scrollToNextSection(sectionNumber);\r\n      }, confettiConfig.duration);\r\n    }\r\n  };\r\n\r\n  const scrollToNextSection = (currentSectionNumber) => {\r\n    const currentIndex = sectionList.indexOf(currentSectionNumber);\r\n    if (currentIndex !== -1 && currentIndex < sectionList.length - 1) {\r\n      const nextSectionNumber = sectionList[currentIndex + 1];\r\n      const nextSectionElement = document.getElementById(nextSectionNumber);\r\n      nextSectionElement &&\r\n        nextSectionElement.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  return selectedTopic === \"undefined\" ||\r\n    selectedTopic === null ||\r\n    selectedTopic.length === 0 ? ( //Needed to add condition because without it, component was rendering and not waiting on selectedTopic from useEffect\r\n    <div>Loading</div>\r\n  ) : (\r\n    <div>\r\n      {/* <MainSideNav\r\n        courseTitleUserIsOn={courseTitleUserIsOn}\r\n        courseDetails={courseDetails}\r\n        selectedTopic={selectedTopic}\r\n      ></MainSideNav> */}\r\n      <TopicTitle id=\"Topic\">\r\n        {selectedTopic.topicNumber} &nbsp; {selectedTopic.topicTitle}\r\n        {selectedTopic.topicYoutubeLink && (\r\n          <a\r\n            href={selectedTopic.topicYoutubeLink}\r\n            style={{ fontSize: 25, marginLeft: \"20px\" }}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <ButtonH2>\r\n              <b>Watch</b>\r\n            </ButtonH2>\r\n          </a>\r\n        )}\r\n        &nbsp; &nbsp;\r\n        <ButtonH2\r\n          onClick={() => {\r\n            let title =\r\n              courseDetails.courseTitle +\r\n              \"\\nTopic \" +\r\n              selectedTopic.topicNumber +\r\n              \" - \" +\r\n              selectedTopic.topicTitle;\r\n            let text =\r\n              courseDetails.courseTitle +\r\n              \"\\nTopic \" +\r\n              selectedTopic.topicNumber +\r\n              \" - \" +\r\n              selectedTopic.topicTitle +\r\n              \"\\n\\n\" +\r\n              selectedTopic.topicDescription;\r\n            if (navigator.share) {\r\n              navigator.share({\r\n                title: title,\r\n                text: text,\r\n                url: `/#/${courseTitleUserIsOn}/topic/${selectedTopic.topicNumber}`,\r\n              });\r\n            } else {\r\n              navigator.clipboard.writeText(\r\n                `/#/${courseTitleUserIsOn}/topic/${selectedTopic.topicNumber}`\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <b>share</b>\r\n        </ButtonH2>\r\n      </TopicTitle>\r\n      <TopicDescription>\r\n        <p>{selectedTopic.topicDescription}</p>\r\n        {/* <div style={{ alignSelf: \"center\" }}>\r\n          <Link\r\n            to={{\r\n              pathname:\r\n                `/${courseTitleUserIsOn}/quiz/` + selectedTopic.topicNumber,\r\n              state: {\r\n                comingFrom: \"Topic\",\r\n                topicSelectedQuizQuestions: finalSetOfExamplesToDisplay,\r\n                sectionList: sectionList,\r\n              },\r\n            }}\r\n          >\r\n            {selectedTopic.sections.length !== 0 && (\r\n              <QuizMeButton>\r\n                <p style={{ fontSize: \"2vh\", margin: \"0px\" }}>Switch to</p>\r\n                <b>Quiz Mode</b>\r\n              </QuizMeButton>\r\n            )}\r\n          </Link>\r\n        </div> */}\r\n      </TopicDescription>\r\n      <hr\r\n        style={{\r\n          marginTop: 50,\r\n          marginBottom: 50,\r\n          width: \"70vw\",\r\n          backgroundColor: \"#eb8381\",\r\n          height: 2,\r\n          borderRadius: 20,\r\n          border: 0,\r\n        }}\r\n      ></hr>\r\n\r\n      {selectedTopic.sections &&\r\n        selectedTopic.sections.map((section) => {\r\n          return (\r\n            <div>\r\n              <SectionDescription\r\n                currentUrlSectionID={currentUrlSectionID}\r\n                sectionNumber={section.sectionNumber}\r\n                id={section.sectionNumber}\r\n              >\r\n                <SectionTitle>\r\n                  <b>\r\n                    {section.sectionNumber} &nbsp; {section.sectionTitle}\r\n                  </b>\r\n                  {section.sectonYoutubeLink && (\r\n                    <a\r\n                      href={section.sectonYoutubeLink}\r\n                      style={{ marginLeft: \"20px\" }}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <ButtonH2>\r\n                        <b>Watch</b>\r\n                      </ButtonH2>\r\n                    </a>\r\n                  )}\r\n                  &nbsp; &nbsp;\r\n                  <ButtonH2\r\n                    onClick={() => {\r\n                      let url = decodeURIComponent(\r\n                        `/#/${courseTitleUserIsOn}/topic/${selectedTopic.topicNumber}%23${section.sectionNumber}`\r\n                      );\r\n                      let text =\r\n                        courseDetails.courseTitle +\r\n                        \"\\nSection \" +\r\n                        section.sectionNumber +\r\n                        \" - \" +\r\n                        section.sectionTitle +\r\n                        \"\\n\\n\" +\r\n                        section.sectionDescription +\r\n                        \"\\n\\n\" +\r\n                        section.sectionNotes.join(\" \");\r\n                      let title =\r\n                        courseDetails.courseTitle +\r\n                        \"\\nSection \" +\r\n                        section.sectionNumber +\r\n                        \" - \" +\r\n                        section.sectionTitle;\r\n                      if (navigator.share) {\r\n                        navigator.share({\r\n                          title: title,\r\n                          text: text,\r\n                          url: url,\r\n                        });\r\n                      } else {\r\n                        navigator.clipboard.writeText(\r\n                          `/#/${courseTitleUserIsOn}/topic/${selectedTopic.topicNumber}#${section.sectionNumber}`\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    <b>share</b>\r\n                  </ButtonH2>\r\n                </SectionTitle>\r\n                <SectionImageAndText>\r\n                  <img\r\n                    className=\"sectionImage\"\r\n                    src={\r\n                      \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n                      courseDetails.courseTitle.replace(/\\s/g, \"\") +\r\n                      \"/sectionImages/\" +\r\n                      section.sectionNumber +\r\n                      \".png\"\r\n                    }\r\n                    alt=\"\"\r\n                  ></img>\r\n                  <div className=\"sectionText\">\r\n                    <p>{section.sectionDescription}</p>\r\n                    {\r\n                      /* { Start from here to add notes */\r\n                      section.sectionNotes &&\r\n                        section.sectionNotes.map((sectionNote, index) => {\r\n                          return (\r\n                            <>\r\n                              {sectionNote.length !== 0 && (\r\n                                <div>\r\n                                  <NoteTitle>\r\n                                    <div className=\"noteTitle\">\r\n                                      <b>&nbsp; Note {index + 1}</b>\r\n                                    </div>\r\n                                  </NoteTitle>\r\n                                  <NoteDescription className=\"noteDescription\">\r\n                                    {sectionNote}\r\n                                  </NoteDescription>\r\n                                </div>\r\n                              )}\r\n                            </>\r\n                          );\r\n                        })\r\n                    }\r\n                  </div>\r\n                </SectionImageAndText>\r\n                {courseDetails.isQuizInStudyMode && (\r\n                  <Example\r\n                    topicNumber={topicNumberFromSideBar}\r\n                    section={section.sectionNumber}\r\n                    sectionTitle={section.sectionTitle}\r\n                    sectionExample={chooseRandomExample(section.sectionNumber)}\r\n                  ></Example>\r\n                )}\r\n\r\n                {/* <div style={{ position: \"relative\", textAlign: \"center\" }}>\r\n                  <button\r\n                    className={\r\n                      completedSections.includes(section.sectionNumber)\r\n                        ? \"completed-button\"\r\n                        : \"complete-button\"\r\n                    }\r\n                    onClick={() =>\r\n                      handleSectionCompletion(section.sectionNumber)\r\n                    }\r\n                  >\r\n                    {completedSections.includes(section.sectionNumber)\r\n                      ? \"Completed\"\r\n                      : \"Mark as Complete\"}\r\n                  </button>\r\n                  <Confetti\r\n                    active={completedSections.includes(section.sectionNumber)}\r\n                    config={{\r\n                      ...confettiConfig,\r\n                    }}\r\n                  />\r\n                </div> */}\r\n              </SectionDescription>\r\n              <hr\r\n                style={{\r\n                  marginTop: 50,\r\n                  marginBottom: 50,\r\n                  width: \"70vw\",\r\n                  backgroundColor: \"#eb8381\",\r\n                  height: 2,\r\n                  borderRadius: 20,\r\n                  border: 0,\r\n                }}\r\n              ></hr>\r\n            </div>\r\n          );\r\n        })}\r\n      {/* <div>\r\n        <Link\r\n          to={{\r\n            pathname:\r\n              `/${courseTitleUserIsOn}/quiz/` + selectedTopic.topicNumber,\r\n            state: {\r\n              comingFrom: \"Topic\",\r\n              topicSelectedQuizQuestions: finalSetOfExamplesToDisplay,\r\n              sectionList: sectionList,\r\n            },\r\n          }}\r\n        >\r\n          {selectedTopic.sections.length !== 0 && (\r\n            <QuizMeButton\r\n              style={{\r\n                margin: \"0 auto\",\r\n                marginBottom: \"50px\",\r\n                display: \"block\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              <b>Take a Quiz</b>\r\n            </QuizMeButton>\r\n          )}\r\n        </Link>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topic;\r\n", "import React, { useState, createContext } from \"react\";\r\n\r\nexport const ScoreContext = createContext();\r\n\r\nexport const SubmitButtonContext = createContext();\r\n", "import React, { useState, useContext, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\n\r\nimport { ScoreContext, SubmitButtonContext } from \"../Contexts/ScoreContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport { motion } from \"framer-motion\";\r\nimport SideNavRowLesson from \"./sidebar/SideNavRowLesson\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst fadeIn = keyframes`\r\n0%{opacity: 0}\r\n100%{opacity: 1}\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ExampleBox = styled.div`\r\n  /* box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2); */\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  /* background: #252525; */\r\n  /* margin-top: 80px; */\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst ExampleQuestion = styled.div`\r\n  /* font-size: 17px; */\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #a678de;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ExampleAnswer = styled(motion.div)`\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  /* border-radius: 15px; */\r\n  /* padding: 10px; */\r\n  text-align: center;\r\n  font-family: Quicksand;\r\n  display: flex;\r\n  background: ${(props) =>\r\n    props.answerClicked == props.answer && props.submitted\r\n      ? props.answerColor\r\n      : props.answerClicked == props.answer\r\n      ? \"#b8b8b8\"\r\n      : \"#D2CFE6\"};\r\n\r\n  transition: transform 300ms;\r\n  justify-content: center;\r\n  pointer-events: ${(props) => (props.submitted ? \"none\" : \"auto\")};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst AnswerExplanation = styled.div`\r\n  /* font-size: 2vh; */\r\n  display: ${(props) =>\r\n    props.answerClicked == props.answer && props.submitted ? \"flex\" : \"none\"};\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst QuizExample = (props) => {\r\n  const { courseTitleUserIsOn, entryStore, isDarkMode } = useAmazonContext();\r\n  const [sumCorrect, setSumCorrect] = useContext(ScoreContext);\r\n  const [submitted, setSubmitted] = useContext(SubmitButtonContext);\r\n\r\n  const [answerColor, setAnswerColor] = useState(\"#e8e2ef\");\r\n  const [answerClicked, setAnswerClicked] = useState(\"NoAnswer\");\r\n  const [answerClickedToPractice, setAnswerClickedToPractice] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(\"noSelection\");\r\n\r\n  // Issue: when i click on try again, if the same quiz example came up after re-render, it would show as already clicked due to code : props.answerClicked == props.answer\r\n  //  ? \"#DFDFDF\". In order to tackle it, this logic says, when try again is clicked\r\n  //(indicatied by sumCorrect becoming 0) AND when value of submitted changes (in this case from true to false when try agian button is clicked)  only then should the code set all answers to no answer and prevent any highlight logic to take place.\r\n  // Both conditons were needed, else didnt produced required result as can be seen if you tried to remove length==0 logic\r\n\r\n  useEffect(() => {\r\n    if (sumCorrect.length == 0) {\r\n      setAnswerClicked(\"NoAnswer\");\r\n    }\r\n  }, [submitted]);\r\n\r\n  const checkAnswer = (isCorrect, answer) => {\r\n    setAnswerClicked(answer);\r\n    setAnswerClickedToPractice(true);\r\n\r\n    if (isCorrect == true) {\r\n      setAnswerColor(\"#DAF7A6\");\r\n      setSelectedAnswer(true);\r\n      pushCorrectAnswer(props.exampleIndex);\r\n      console.log(props.exampleIndex);\r\n    } else {\r\n      setAnswerColor(\"#ff726f\");\r\n      setSelectedAnswer(false);\r\n      pushWrongAnswer(props.exampleIndex);\r\n    }\r\n  };\r\n\r\n  function pushCorrectAnswer(index) {\r\n    const newAnswerList = [...sumCorrect];\r\n    newAnswerList[index] = 1;\r\n    setSumCorrect(newAnswerList);\r\n    console.log(sumCorrect);\r\n  }\r\n\r\n  function pushWrongAnswer(index) {\r\n    const newAnswerList = [...sumCorrect];\r\n    newAnswerList[index] = 0;\r\n    setSumCorrect(newAnswerList);\r\n    console.log(sumCorrect);\r\n  }\r\n\r\n  //Find lessontitle if lessonnumber is provided:\r\n  function getSectionTitleByNumber(sectionNumber) {\r\n    if (entryStore) {\r\n      // Iterate through the topics\r\n      for (const topic of entryStore) {\r\n        // Iterate through the entries within each topic\r\n        for (const entry of topic.entries) {\r\n          // Iterate through the sections within each entry\r\n          for (const section of entry.entries) {\r\n            for (const lesson of section.entries) {\r\n              if (lesson.sectionNumber === sectionNumber) {\r\n                return lesson.title; // Return the corresponding title\r\n              }\r\n            }\r\n            // Check if the sectionNumber matches\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Return null if the sectionNumber was not found\r\n    return null;\r\n  }\r\n\r\n  const sectionNumberToFind = props.example.sectionNumber; // Replace with the section number you want to find\r\n  const sectionTitle = getSectionTitleByNumber(sectionNumberToFind);\r\n\r\n  if (sectionTitle !== null) {\r\n    console.log(`Section Title for ${sectionNumberToFind}: ${sectionTitle}`);\r\n  } else {\r\n    console.log(\r\n      `Section with Section Number ${sectionNumberToFind} not found.`\r\n    );\r\n  }\r\n\r\n  //End\r\n\r\n  return (\r\n    <ExampleBox className=\"LessonExampleBox\">\r\n      <ExampleQuestion>{props.example.question}</ExampleQuestion>\r\n      {props.example &&\r\n        props.example.answers.map((answerItem) => {\r\n          return (\r\n            <>\r\n              <ExampleAnswer\r\n                className=\"LessonExampleAnswerBox\"\r\n                whileHover={{ scale: 1.2 }}\r\n                whileTap={{ scale: 0.8 }}\r\n                transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n                onClick={() =>\r\n                  checkAnswer(answerItem.isCorrect, answerItem.answer)\r\n                }\r\n                answerColor={answerColor}\r\n                answer={answerItem.answer}\r\n                answerClicked={answerClicked}\r\n                submitted={submitted}\r\n                sumCorrect={sumCorrect}\r\n              >\r\n                <div className=\"LessonExampleAnswer\">{answerItem.answer}</div>\r\n              </ExampleAnswer>\r\n              {\r\n                <AnswerExplanation\r\n                  answerClicked={answerClicked}\r\n                  answer={answerItem.answer}\r\n                  answerColor={answerColor}\r\n                  selectedAnswer={selectedAnswer}\r\n                  submitted={submitted}\r\n                >\r\n                  {answerItem.isCorrect == false ? (\r\n                    <div style={{ width: \"90% \" }}>\r\n                      <div\r\n                        className={`LessonExampleAnswerExplanationContainer ${\r\n                          isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                        }`}\r\n                      >\r\n                        <i class=\"wrongCross fa-solid fa-xmark\"></i>\r\n                        <p\r\n                          style={{\r\n                            display: \"inline\",\r\n                          }}\r\n                          className=\"LessonExampleAnswerExplanation\"\r\n                        >\r\n                          {answerItem.explanation}\r\n                        </p>\r\n                      </div>\r\n                      <motion.div\r\n                        className=\"LessonExampleNextLessonBox\"\r\n                        style={{ marginTop: \"0\", marginBottom: \"4vh\" }}\r\n                        initial={{ opacity: 0, scale: 0.5 }}\r\n                        animate={{ opacity: 1, scale: [1, 1.03, 1] }}\r\n                        transition={{\r\n                          duration: 0.8,\r\n                          delay: 0.3,\r\n                          ease: [0, 0.71, 0.2, 1.01],\r\n                        }}\r\n                      >\r\n                        <div style={{}} className=\"LessonTitleContainer\">\r\n                          <span className=\"LessonNumber\">Revise Lesson</span>{\" \"}\r\n                        </div>\r\n                        <Link\r\n                          to={`/${courseTitleUserIsOn}/lesson/${props.example.sectionNumber}`}\r\n                        >\r\n                          <motion.div\r\n                            whileTap={{ scale: 0.8 }}\r\n                            transition={{\r\n                              type: \"spring\",\r\n                              stiffness: 400,\r\n                              damping: 17,\r\n                            }}\r\n                          >\r\n                            <SideNavRowLesson\r\n                              number={props.example.sectionNumber}\r\n                              title={sectionTitle}\r\n                              width=\"100%\"\r\n                              marginLeft=\"0\"\r\n                              borderRadius=\"14% 2% 2% 14% / 50% 10% 10% 50%\"\r\n                            ></SideNavRowLesson>\r\n                          </motion.div>\r\n                        </Link>\r\n                      </motion.div>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <i class=\"correctCheckMark fa-solid fa-check\"></i>\r\n\r\n                      <p\r\n                        className={`LessonExampleAnswerExplanation ${\r\n                          isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                        }`}\r\n                      >\r\n                        Correct!\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </AnswerExplanation>\r\n              }\r\n            </>\r\n          );\r\n        })}\r\n    </ExampleBox>\r\n  );\r\n};\r\n\r\nexport default QuizExample;\r\n", "import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  QuizState,\r\n  ScoreContext,\r\n  SubmitButtonContext,\r\n} from \"../Contexts/ScoreContext\";\r\nimport styled, { css } from \"styled-components\";\r\n// import { ButtonH2 } from \"./Buttons\";\r\nimport \"./Quiz.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { allExampleData } from \"./TopicData\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport ConfettiExplosion from \"react-confetti-explosion\";\r\nimport SideNavRowLesson from \"./sidebar/SideNavRowLesson\";\r\nimport { motion } from \"framer-motion\";\r\nimport axios from \"axios\";\r\nimport ChapterProgressBar from \"./ChapterProgressBar\";\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 100px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ScoreCardBorder = styled.div`\r\n  background: ${(props) =>\r\n    props.scorePercentage == 100 ? \"#f6ffe6\" : \"#e8c6c5\"};\r\n  font-size: 40px;\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n\r\n  box-shadow: 10px 15px 15px rgba(0, 0, 0, 0.767);\r\n  display: ${(props) =>\r\n    props.submitted\r\n      ? \"flex\"\r\n      : \"none\"}; /* Display score card only when button is clicked, ie. when submitted state is true */\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  /* text-align: center; */\r\n  flex-direction: column;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  padding: 20px;\r\n  padding-left: 60px;\r\n`;\r\n\r\nconst ScoreCardText = styled.p`\r\n  font-size: 5vh;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  text-align: center;\r\n  font-weight: 900;\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst ScoreMessage = styled.div`\r\n  font-size: 3vh;\r\n  text-align: center;\r\n  font-weight: 900;\r\n  margin: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${(props) =>\r\n    props.submitted && props.scorePercentage == 100\r\n      ? css`\r\n          shakeY 1s 1s\r\n        `\r\n      : props.submitted && props.scorePercentage < 100\r\n      ? css`\r\n          shakeX 1s 1s\r\n        `\r\n      : \"none\"};\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-basis: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst ScoreCardButtons = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-basis: 100%;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst ScoreCard = (props) => {\r\n  //Obtain Example Data from back end\r\n  const { exampleDatafromBackEnd, courseTitleUserIsOn } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  const [sumCorrect, setSumCorrect] = useContext(ScoreContext);\r\n  const [scoreCardColour, setScoreCardColour] = useState(\"#f8f8f8\");\r\n  const [chapterProgressData, setChapterProgressData] = useState(null); //Put it as state to ensure new data after fetch is sent to chapterProgressBar\r\n  const [submitted, setSubmitted] = useContext(SubmitButtonContext);\r\n  const location = useLocation(); //Props obtained from Router Link\r\n\r\n  const sum = sumCorrect.reduce(function (a, b) {\r\n    return a + b;\r\n  }, 0);\r\n\r\n  const scorePercentage = Math.round((sum / sumCorrect.length) * 100);\r\n\r\n  const [chapterProgressPosted, setChapterProgressPosted] = useState(false);\r\n\r\n  if (scorePercentage === 100 && !chapterProgressPosted) {\r\n    (async function updateChapterProgress() {\r\n      const userEmail = localStorage.getItem(\"userEmail\");\r\n      console.log(userEmail);\r\n      console.log(courseTitleUserIsOn);\r\n      console.log(props.topicNumber);\r\n\r\n      // Prepare data to be sent to the backend for chapter progress\r\n      const chapterProgressData = {\r\n        userEmail: userEmail,\r\n        chapterProgress: [\r\n          {\r\n            courseProgress: courseTitleUserIsOn,\r\n            chapterProgress: [props.topicNumber],\r\n          },\r\n        ],\r\n      };\r\n\r\n      try {\r\n        // Send chapter progress data to the backend\r\n        await axios.post(\"/insertChapterProgressRecord\", chapterProgressData);\r\n        console.log(\"Chapter progress data sent successfully!\");\r\n        setChapterProgressPosted(true); // Update state to indicate that data has been posted\r\n      } catch (error) {\r\n        console.error(\"Error sending chapter progress data:\", error);\r\n      }\r\n    })();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchChapterProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchChapterProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setChapterProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chapter progress data:\", error);\r\n      }\r\n    };\r\n\r\n    if (chapterProgressPosted) {\r\n      fetchChapterProgress(); // Fetch data only if chapter progress has been posted\r\n    }\r\n  }, [chapterProgressPosted]);\r\n\r\n  let sectionID = props.goBackTo; //depricated, now using backToStudiesHashLinkPath\r\n  let backToStudiesHashLinkPath =\r\n    props.comingFrom == \"Topic\"\r\n      ? `/${courseTitleUserIsOn}/topic/${props.topicNumber}`\r\n      : props.comingFrom == \"Section\"\r\n      ? `/${courseTitleUserIsOn}/topic/${props.topicNumber}#${props.sectionNumber}`\r\n      : props.comingFrom == \"ScoreCard\" && props.sections.constructor == Array //Same logic as used in the quiz algorithm to figure out if it needs to go back to a topic or section\r\n      ? `/${courseTitleUserIsOn}/topic/${props.topicNumber}`\r\n      : props.comingFrom == \"ScoreCard\"\r\n      ? `/${courseTitleUserIsOn}/topic/${props.topicNumber}#${location.state.sectionNumber}`\r\n      : `/${courseTitleUserIsOn}/topic/${props.topicNumber}`;\r\n  let morePracticeHashLinkPath =\r\n    props.comingFrom == \"Topic\"\r\n      ? `/${courseTitleUserIsOn}/quiz/${props.topicNumber}`\r\n      : props.comingFrom == \"Section\"\r\n      ? `/${courseTitleUserIsOn}/quiz/${props.topicNumber}/${props.sectionNumber}`\r\n      : props.comingFrom == \"ScoreCard\" && props.sections.constructor == Array\r\n      ? `/${courseTitleUserIsOn}/quiz/${props.topicNumber}`\r\n      : props.comingFrom == \"ScoreCard\"\r\n      ? `/${courseTitleUserIsOn}/quiz/${props.topicNumber}/${location.state.sectionNumber}`\r\n      : `/${courseTitleUserIsOn}/quiz/${props.topicNumber}`;\r\n\r\n  // if (scorePercentage == 100) {\r\n  //   setScoreCardColour(\"#ff726f\");\r\n  // } else {\r\n  //   setScoreCardColour(\"#DAF7A6\");\r\n  // }\r\n\r\n  //Keeping the quiz ready if a user hits try again , same algorithm to find questions if coming from the Topic or a Section.\r\n\r\n  // Randomiser function to create quiz for all topics\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n  console.log(props.comingFrom);\r\n  console.log(props.sections);\r\n  console.log(props.topicNumber);\r\n  console.log(props.sectionNumber);\r\n  let needToDisplay = 5;\r\n  let needtoSelect = Math.ceil(needToDisplay / props.sections.length);\r\n\r\n  let selectedSectionExamples = []; //List of selected examples from each section\r\n  let selectedSectionExamplesPool = []; //List of all selected examples from all sections\r\n  let finalSetOfExamplesToDisplay = []; //final list of examples to display\r\n  let finalExamplesOutput = []; //finalOutput of examples\r\n\r\n  // Algorithm for obtaining questions from each section:\r\n  if (props.comingFrom == \"Topic\") {\r\n    props.sections.map((sectionNumber) => {\r\n      //Mapping through the list of sections that from the Topic\r\n      let allSectionExamples = exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n      if (allSectionExamples.length > needtoSelect) {\r\n        selectedSectionExamples = chooseRandom(\r\n          allSectionExamples,\r\n          needtoSelect\r\n        );\r\n        selectedSectionExamplesPool.push.apply(\r\n          selectedSectionExamplesPool,\r\n          selectedSectionExamples\r\n        );\r\n      } else {\r\n        selectedSectionExamplesPool.push.apply(\r\n          selectedSectionExamplesPool,\r\n          allSectionExamples\r\n        );\r\n      }\r\n    });\r\n    if (selectedSectionExamplesPool.length > needToDisplay) {\r\n      finalSetOfExamplesToDisplay = chooseRandom(\r\n        selectedSectionExamplesPool,\r\n        needToDisplay\r\n      );\r\n      finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n    } else {\r\n      finalSetOfExamplesToDisplay = selectedSectionExamplesPool;\r\n      finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n    }\r\n  } else if (props.comingFrom == \"Section\") {\r\n    let allSectionExamples = exampleDatafromBackEnd.filter(\r\n      (example) => example.sectionNumber == props.sections\r\n    );\r\n    if (allSectionExamples.length > needToDisplay) {\r\n      selectedSectionExamples = chooseRandom(allSectionExamples, needToDisplay);\r\n      finalExamplesOutput = selectedSectionExamples;\r\n    } else {\r\n      selectedSectionExamples = allSectionExamples;\r\n      finalExamplesOutput = selectedSectionExamples;\r\n    }\r\n  } else if (props.comingFrom == \"ScoreCard\") {\r\n    //If someone were to click Try Again from the score card, I was having a hard time trying to make the code determine which of the two logic above (Topic or Section) to run.\r\n    //If the quiz is rerun by clicking try again from score card, i need to determine whether the quiz is Topic or Section. Because Topic and Section have their own logic of running the quiz randomniser, I know that if its coming from Topic it will be an array and if it is coming form sections it is a list therefore i will run my logic based on that\r\n    if (props.sections.constructor == Array) {\r\n      props.sections.map((sectionNumber) => {\r\n        //Mapping through the list of sections that from the Topic\r\n        let allSectionExamples = exampleDatafromBackEnd.filter(\r\n          //list of ALL examples for a particular section in the database\r\n          (example) => example.sectionNumber == sectionNumber\r\n        );\r\n        if (allSectionExamples.length > needtoSelect) {\r\n          selectedSectionExamples = chooseRandom(\r\n            allSectionExamples,\r\n            needtoSelect\r\n          );\r\n          selectedSectionExamplesPool.push.apply(\r\n            selectedSectionExamplesPool,\r\n            selectedSectionExamples\r\n          );\r\n        } else {\r\n          selectedSectionExamplesPool.push.apply(\r\n            selectedSectionExamplesPool,\r\n            allSectionExamples\r\n          );\r\n        }\r\n      });\r\n      if (selectedSectionExamplesPool.length > needToDisplay) {\r\n        finalSetOfExamplesToDisplay = chooseRandom(\r\n          selectedSectionExamplesPool,\r\n          needToDisplay\r\n        );\r\n        finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n      } else {\r\n        finalSetOfExamplesToDisplay = selectedSectionExamplesPool;\r\n        finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n      }\r\n    } else {\r\n      let allSectionExamples = exampleDatafromBackEnd.filter(\r\n        (example) => example.sectionNumber == props.sections\r\n      );\r\n      if (allSectionExamples.length > needToDisplay) {\r\n        selectedSectionExamples = chooseRandom(\r\n          allSectionExamples,\r\n          needToDisplay\r\n        );\r\n        finalExamplesOutput = selectedSectionExamples;\r\n      } else {\r\n        selectedSectionExamples = allSectionExamples;\r\n        finalExamplesOutput = selectedSectionExamples;\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(finalSetOfExamplesToDisplay);\r\n  console.log(selectedSectionExamples);\r\n\r\n  const restartQuiz = () => {\r\n    setSubmitted(false);\r\n    setSumCorrect([]);\r\n  };\r\n\r\n  // //When user changes quiz then set submitted back to false\r\n\r\n  // useEffect(() => {\r\n  //   setSubmitted(false);\r\n  //   setSumCorrect([]);\r\n  // }, [props.topicNumber]);\r\n\r\n  // //End\r\n\r\n  return (\r\n    <ScoreCardBorder submitted={submitted} scorePercentage={scorePercentage}>\r\n      {scorePercentage === 100 ? (\r\n        <ScoreMessage submitted={submitted} scorePercentage={scorePercentage}>\r\n          <p\r\n            style={{\r\n              color: \"green\",\r\n              display: \"inline\",\r\n              fontSize: \"50px\",\r\n              margin: \"0 10px 0 0\",\r\n            }}\r\n          >\r\n            ✓\r\n          </p>\r\n          <p>Congratulations you got them all right!</p>\r\n          {/* Update chapter progress when score is 100 */}\r\n        </ScoreMessage>\r\n      ) : (\r\n        <ScoreMessage submitted={submitted} scorePercentage={scorePercentage}>\r\n          <p\r\n            style={{\r\n              color: \"#ff726f\",\r\n              display: \"inline\",\r\n              fontSize: \"50px\",\r\n              margin: \"0 10px\",\r\n            }}\r\n          >\r\n            ✖\r\n          </p>\r\n          <p>Not quite there yet!</p>\r\n        </ScoreMessage>\r\n      )}\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n            fontSize: \"3vh\",\r\n          }}\r\n        >\r\n          <p>Score</p>\r\n\r\n          <ScoreCardText>\r\n            {sum}/{sumCorrect.length}\r\n          </ScoreCardText>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n            fontSize: \"3vh\",\r\n          }}\r\n        >\r\n          <p style={{ marginRight: \"50px\" }}>Percentage</p>\r\n\r\n          <ScoreCardText>{scorePercentage}%</ScoreCardText>\r\n        </div>\r\n      </div>\r\n      {scorePercentage == 100 &&\r\n        props.nextChapterFirstLessonNumber !== false && (\r\n          <motion.div\r\n            className=\"LessonExampleNextLessonBox\"\r\n            style={{\r\n              marginTop: \"0\",\r\n              marginBottom: \"4vh\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            initial={{ opacity: 0, scale: 0.5 }}\r\n            animate={{ opacity: 1, scale: [1, 1.03, 1] }}\r\n            transition={{\r\n              duration: 2,\r\n              delay: 0.5,\r\n              ease: [0, 0.71, 0.2, 1.01],\r\n            }}\r\n          >\r\n            <div style={{ width: \"100%\" }}>\r\n              {\" \"}\r\n              <ChapterProgressBar\r\n                chapterNumber={props.chapterNumber}\r\n                courseTitleUserIsOn={courseTitleUserIsOn}\r\n                chapterProgressData={chapterProgressData}\r\n              ></ChapterProgressBar>\r\n            </div>\r\n\r\n            <div\r\n              style={{ marginLeft: \"0\", width: \"100%\" }}\r\n              className=\"LessonTitleContainerOnSideNav\"\r\n            >\r\n              <div>\r\n                <span className=\"LessonNumber\">\r\n                  Next Chapter {props.nextChapterNumber}\r\n                </span>{\" \"}\r\n              </div>\r\n\r\n              <div style={{ fontSize: \"2vh\", textAlign: \"center\" }}>\r\n                {\" \"}\r\n                <span className=\"LessonTitle\">{props.nextChapterTitle}</span>\r\n              </div>\r\n            </div>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Link\r\n                to={`/${courseTitleUserIsOn}/lesson/${props.nextChapterFirstLessonNumber}`}\r\n              >\r\n                <motion.div\r\n                  whileTap={{ scale: 0.8 }}\r\n                  transition={{\r\n                    type: \"spring\",\r\n                    stiffness: 400,\r\n                    width: \"100%\",\r\n                    damping: 17,\r\n                  }}\r\n                >\r\n                  <SideNavRowLesson\r\n                    number={props.nextChapterFirstLessonNumber}\r\n                    title={props.nextChapterFirstLessonTitle}\r\n                    marginLeft=\"0\"\r\n                    borderRadius=\"14% 2% 2% 14% / 50% 10% 10% 50%\"\r\n                  ></SideNavRowLesson>\r\n                </motion.div>\r\n              </Link>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      {scorePercentage == 100 &&\r\n        props.nextChapterFirstLessonNumber == false && (\r\n          <motion.div\r\n            className=\"LessonExampleNextLessonBox\"\r\n            style={{\r\n              marginTop: \"0\",\r\n              marginBottom: \"4vh\",\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n            initial={{ opacity: 0, scale: 0.5 }}\r\n            animate={{ opacity: 1, scale: [1, 1.03, 1] }}\r\n            transition={{\r\n              duration: 2,\r\n              delay: 0.5,\r\n              ease: [0, 0.71, 0.2, 1.01],\r\n            }}\r\n          >\r\n            <div style={{ width: \"95%\" }}>\r\n              {\" \"}\r\n              <ChapterProgressBar\r\n                chapterNumber={props.chapterNumber}\r\n                courseTitleUserIsOn={courseTitleUserIsOn}\r\n                chapterProgressData={chapterProgressData}\r\n              ></ChapterProgressBar>\r\n            </div>\r\n            <div\r\n              style={{ textAlign: \"center\", width: \"100%\" }}\r\n              className=\"LessonTitleContainer\"\r\n            >\r\n              <span className=\"LessonNumber\"></span> <br />\r\n              <span className=\"LessonTitle\">\r\n                {\" \"}\r\n                This is the end\r\n                <br /> of the Course!\r\n              </span>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      {scorePercentage !== 100 && (\r\n        <ScoreCardButtons>\r\n          <Link\r\n            to={{\r\n              pathname: morePracticeHashLinkPath,\r\n              state: {\r\n                comingFrom: \"ScoreCard\",\r\n                sections: props.sections,\r\n                scoreCardSelectedQuizQuestons: finalExamplesOutput,\r\n                sectionNumber: props.sectionNumber, //Retains the section number to pass where needed\r\n              },\r\n            }}\r\n          >\r\n            <ButtonH2 style={{ marginBottom: 20 }} onClick={restartQuiz}>\r\n              Try Again\r\n            </ButtonH2>\r\n          </Link>\r\n\r\n          {/* <HashLink to={backToStudiesHashLinkPath}>\r\n          <ButtonH2>Back to Studies</ButtonH2>\r\n        </HashLink> */}\r\n        </ScoreCardButtons>\r\n      )}\r\n    </ScoreCardBorder>\r\n  );\r\n};\r\n\r\nexport default ScoreCard;\r\n", "export default __webpack_public_path__ + \"static/media/HHLogo.a975645f.png\";", "import React, { useState, useEffect } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport QuizSideNavRow from \"./QuizSideNavRow\";\r\nimport styled from \"styled-components\";\r\nimport QuizDropDown from \"./QuizDropDown\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CourseContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  height: 100%; /* Ensure the div takes full height */\r\n`;\r\n\r\nconst SearchBarContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 700px;\r\n  margin-bottom: 20px;\r\n  margin-right: 50px;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 10px;\r\n  padding-left: 70px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-size: 3vh;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst SearchIcon = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 10px;\r\n  font-size: 3vh;\r\n`;\r\n\r\nexport default function QuizSideNavContent(props) {\r\n  const { courseTitleUserIsOn, entryStore } = useAmazonContext();\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State for the search term\r\n  const [filteredEntries, setFilteredEntries] = useState([]); // State for filtered entries\r\n\r\n  // Filter the entries based on the search term\r\n  useEffect(() => {\r\n    if (entryStore && searchTerm) {\r\n      const filtered = entryStore\r\n        .map((entry) => {\r\n          const filteredSubEntries = entry.entries.filter((subEntry) => {\r\n            const subEntryMatches = subEntry.title\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase());\r\n            const nestedEntryMatches =\r\n              subEntry.entries &&\r\n              subEntry.entries.some((nestedEntry) =>\r\n                nestedEntry.entries.some(\r\n                  (section) =>\r\n                    section.title &&\r\n                    section.title\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase())\r\n                )\r\n              );\r\n            return subEntryMatches || nestedEntryMatches;\r\n          });\r\n          return { ...entry, entries: filteredSubEntries };\r\n        })\r\n        .filter((entry) => entry.entries.length > 0);\r\n      setFilteredEntries(filtered);\r\n    } else {\r\n      setFilteredEntries(entryStore);\r\n    }\r\n  }, [entryStore, searchTerm]);\r\n\r\n  console.log(entryStore);\r\n  console.log(entryStore, courseTitleUserIsOn);\r\n  const [dropDownEntries, setDropDownEntries] = useState(null);\r\n\r\n  let currentUrl = window.location.href;\r\n  console.log(currentUrl);\r\n  // setCurrentUrlState(currentUrl);\r\n  let currentUrlArray = currentUrl.split(\"/\");\r\n  console.log(currentUrlArray);\r\n  let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n  console.log(topicAndSection);\r\n  //Handling%23 in URL\r\n  var topicAndSectionArray = [];\r\n\r\n  if (topicAndSection.includes(\"%\")) {\r\n    topicAndSectionArray = topicAndSection.split(\"%23\");\r\n  } else {\r\n    topicAndSectionArray = topicAndSection.split(\"#\");\r\n  }\r\n  console.log(topicAndSectionArray);\r\n  let currentTopicNumber = topicAndSectionArray[0];\r\n  let currentSectionNumber = topicAndSectionArray[1];\r\n  console.log(currentTopicNumber);\r\n\r\n  return (\r\n    <div\r\n      className=\"sideNavContainer\"\r\n      style={\r\n        props.state === \"exiting\"\r\n          ? { animation: \"QuizmoveMainContainer .3s forwards\" }\r\n          : props.state === \"entering\"\r\n          ? { animation: \"QuizmoveMainContainer .3s reverse backwards\" }\r\n          : null\r\n      }\r\n    >\r\n      <SearchBarContainer>\r\n        <SearchIcon>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n        </SearchIcon>\r\n        <SearchBar\r\n          type=\"text\"\r\n          placeholder=\"Search for a Topic\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        ></SearchBar>\r\n      </SearchBarContainer>\r\n      {filteredEntries &&\r\n        filteredEntries.map((entry, index) => {\r\n          return (\r\n            <div>\r\n              <div className=\"sidenavContentHeaderMainMenu\">\r\n                {entry.topicHeaderNumber && entry.topicHeaderNumber}\r\n                &nbsp; &nbsp;\r\n                {entry.title}\r\n              </div>\r\n              {entry.entries.map((subEntry, index) => {\r\n                return (\r\n                  <div>\r\n                    {/* Renable below when ready for section quiz */}\r\n                    {/* {subEntry.rows ? (\r\n                      <QuizSideNavRow\r\n                        number={subEntry.topicNumber}\r\n                        title={subEntry.title}\r\n                        entries={subEntry.entries}\r\n                        styleVariable={\r\n                          subEntry.topicNumber == currentTopicNumber\r\n                            ? { background: \"#ebebeb\" }\r\n                            : {}\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <Link\r\n                        to={`/${courseTitleUserIsOn}/quiz/${subEntry.topicNumber}`}\r\n                      >\r\n                        <div\r\n                          className=\"sidenavContent\"\r\n                          onClick={props.closeNav}\r\n                          style={\r\n                            subEntry.topicNumber == currentTopicNumber\r\n                              ? { background: \"#ebebeb\" }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          {subEntry.topicNumber && subEntry.topicNumber}\r\n                          &nbsp; &nbsp;\r\n                          {subEntry.title}\r\n                        </div>\r\n                      </Link>\r\n                    )} */}\r\n\r\n                    <Link\r\n                      to={`/${courseTitleUserIsOn}/quiz/${subEntry.topicNumber}`}\r\n                    >\r\n                      <div\r\n                        className=\"sidenavContent\"\r\n                        onClick={props.closeNav}\r\n                        style={\r\n                          subEntry.topicNumber == currentTopicNumber\r\n                            ? { background: \"#dfdfdf\" }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        {subEntry.topicNumber && subEntry.topicNumber}\r\n                        &nbsp; &nbsp;\r\n                        {subEntry.title}\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      <div style={{ minHeight: \"60px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport \"./QuizSidebar.css\";\r\n\r\nfunction QuizBackgroundPage(props) {\r\n  return (\r\n    <div>\r\n      <p></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizBackgroundPage;\r\n", "import React, { useEffect } from \"react\";\r\nimport HHLogo from \"./HHLogo.png\";\r\nimport QuizHamburgerButton from \"./QuizHamburgerButton\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport QuizSidenav from \"./QuizSidenav\";\r\nimport QuizBackgroundPage from \"./QuizBackgroundPage\";\r\nimport { useState } from \"react\";\r\nimport { Transition, TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  AmazonContextProvider,\r\n  useAmazonContext,\r\n} from \"../../Contexts/AmazonContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navbar = styled.nav`\r\n  background: #d0bad9;\r\n  /* top: 80; */\r\n  height: 6vh;\r\n  transform: translateY(${(props) => props.navTop + \"vh\"});\r\n  transition: 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 6vh; /* Adjust the width as needed */\r\n  height: 6vh; /* Adjust the height as needed */\r\n  margin-left: 70px; /* Adjust the margin as needed */\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  position: relative;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 4vh;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #8747d4;\r\n  color: #f8f6f0;\r\n  height: 6vh;\r\n\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst StudyModeButton = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  /* margin: 20px; */\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2.5vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  height: 6vh;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nexport default function QuizMainSideNav(props) {\r\n  const [navOpen, setNavOpen] = useState(false);\r\n\r\n  // const [entryStore, setEntryStore] = useState([]);\r\n  const {\r\n    courseTitleUserIsOn,\r\n\r\n    courseDetails,\r\n    setSubContainerEntries,\r\n    subContainer,\r\n    setSubContainer,\r\n    rowClicked,\r\n    setRowClicked,\r\n  } = useAmazonContext();\r\n\r\n  console.log(courseTitleUserIsOn, courseDetails, props.entryStore);\r\n\r\n  const [currentUrlState, setCurrentUrlState] = useState(\"0\");\r\n  const [currentTopicNumberState, setCurrentTopicNumberState] = useState(\"0\");\r\n  const [nextTopicNumberState, setNextTopicNumberState] = useState(\"0\");\r\n  const [previousTopicNumberState, setPreviousTopicNumberState] = useState(\"0\");\r\n\r\n  //Code for nav to hide scroll down and show on scroll up\r\n  const [navTop, setNavTop] = useState(0);\r\n  var lastScrollY = window.scrollY;\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (lastScrollY < window.scrollY) {\r\n      setNavTop(-6); //needs to be same as Nav Height defined above\r\n    } else {\r\n      setNavTop(0);\r\n    }\r\n    lastScrollY = window.scrollY;\r\n  });\r\n  //End\r\n\r\n  const openNav = () => {\r\n    setNavOpen(true);\r\n  };\r\n\r\n  const closeNav = () => {\r\n    setNavOpen(false);\r\n  };\r\n\r\n  //Logic for next and previous buttons\r\n  console.log(props.topicNumbersListfromBackEnd);\r\n  // Step 0.1 I needed this for this component to re-render any time the currentUrl changed, so that re-render would run the useEffect below:\r\n  const setCurrentUrl = () => {\r\n    var currentUrl = window.location.href;\r\n    setCurrentUrlState(currentUrl);\r\n    console.log(currentUrl);\r\n\r\n    if (props.entryStore) {\r\n      props.entryStore.forEach(function (entry) {\r\n        entry.entries.forEach(function (subEntry) {\r\n          if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == true\r\n          ) {\r\n            console.log(currentTopicNumberState);\r\n            console.log(subEntry.entries);\r\n            setSubContainer(true);\r\n            setSubContainerEntries(subEntry.entries);\r\n          } else if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == false &&\r\n            subContainer == true\r\n          ) {\r\n            console.log(subEntry.entries);\r\n            setSubContainer(false);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Step 1 obtain current topic:\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n    console.log(topicAndSection);\r\n    //Handling%23 in URL\r\n    var topicAndSectionArray = [];\r\n\r\n    if (topicAndSection.includes(\"%\")) {\r\n      topicAndSectionArray = topicAndSection.split(\"%23\");\r\n    } else {\r\n      topicAndSectionArray = topicAndSection.split(\"#\");\r\n    }\r\n    console.log(topicAndSectionArray);\r\n    let currentTopicNumber = topicAndSectionArray[0];\r\n    console.log(currentTopicNumber);\r\n    setCurrentTopicNumberState(currentTopicNumber);\r\n    //Step 2 Find the index of the currentTopicNumber in list of topic numbers from back end\r\n\r\n    let indexofCurrentTopicNumber = props.topicNumbersListfromBackEnd.findIndex(\r\n      (topicNumber) => topicNumber == currentTopicNumber\r\n    );\r\n    console.log(indexofCurrentTopicNumber);\r\n\r\n    //Step 3 Derive next topic number in list with catch error for out of bound index\r\n    let indexofNextTopicNumber = indexofCurrentTopicNumber + 1;\r\n    if (indexofNextTopicNumber > props.topicNumbersListfromBackEnd.length - 1) {\r\n      //if next index great then lenght of array set index number to 0 so you go back to beginning\r\n      indexofNextTopicNumber = 0;\r\n    }\r\n    console.log(indexofNextTopicNumber);\r\n    let nextTopicNumber =\r\n      props.topicNumbersListfromBackEnd[indexofNextTopicNumber];\r\n    console.log(nextTopicNumber);\r\n    setNextTopicNumberState(nextTopicNumber);\r\n\r\n    //Step 4 Derive previous topic number in list with catch error for out of bound index\r\n    let indexofPreviousTopicNumber = indexofCurrentTopicNumber - 1;\r\n    if (indexofPreviousTopicNumber < 0) {\r\n      //if next index less then 0 set index number to last so you go back to ending\r\n      indexofPreviousTopicNumber = props.topicNumbersListfromBackEnd.length - 1;\r\n    }\r\n    console.log(indexofPreviousTopicNumber);\r\n    let previousTopicNumber =\r\n      props.topicNumbersListfromBackEnd[indexofPreviousTopicNumber];\r\n    console.log(previousTopicNumber);\r\n    setPreviousTopicNumberState(previousTopicNumber);\r\n\r\n    //Step 5 - Change sidebar to show menu based on current topic\r\n    console.log(props.entryStore); // when code below uncommetned it is saying entrystroe has no properties\r\n\r\n    // if (entryStore) {\r\n    //   entryStore.forEach(function (entry) {\r\n    //     entry.entries.forEach(function (subEntry) {\r\n    //       if (\r\n    //         subEntry.topicNumber == currentTopicNumberState &&\r\n    //         subEntry.rows == true\r\n    //       ) {\r\n    //         console.log(subEntry.entries);\r\n    //         setSubContainerEntries(subEntry.entries);\r\n    //         // setSubContainer(true);\r\n    //       }\r\n    //       // else if (\r\n    //       //   subEntry.topicNumber == currentTopicNumberState &&\r\n    //       //   subEntry.rows == false &&\r\n    //       //   subContainer == true\r\n    //       // ) {\r\n    //       //   console.log(subEntry.entries);\r\n    //       //   setSubContainer(false);\r\n    //       // }\r\n    //     });\r\n    //   });\r\n    // }\r\n\r\n    //End\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"unset\" }}>\r\n      <Navbar\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 1,\r\n        }}\r\n        navTop={navTop}\r\n      >\r\n        <div>\r\n          <QuizHamburgerButton click={openNav}></QuizHamburgerButton>{\" \"}\r\n          <Link to={\"/\"}>\r\n            <Logo src={HHLogo} alt=\"Logo\" />{\" \"}\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <Link\r\n            to={\r\n              `/${courseTitleUserIsOn}/topic/` + props.selectedTopic.topicNumber\r\n            }\r\n          >\r\n            <StudyModeButton>\r\n              <p style={{ fontSize: \"1.5vh\", margin: \"0px\" }}>Switch to</p>\r\n              <b>Study Mode</b>\r\n            </StudyModeButton>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          {props.topicNumbersListfromBackEnd.findIndex(\r\n            (topicNumber) => topicNumber == currentTopicNumberState\r\n          ) !== 0 && (\r\n            <Link\r\n              to={`/${courseTitleUserIsOn}/quiz/${previousTopicNumberState}`}\r\n            >\r\n              <ButtonH2 onClick={setCurrentUrl}>\r\n                <FontAwesomeIcon icon={faArrowLeft} />\r\n              </ButtonH2>\r\n            </Link>\r\n          )}\r\n          {props.topicNumbersListfromBackEnd.findIndex(\r\n            (topicNumber) => topicNumber == currentTopicNumberState\r\n          ) >\r\n          props.topicNumbersListfromBackEnd.length - 2 ? (\r\n            <a href=\"https://subscribepage.io/hhcourses\">\r\n              <ButtonH2>\r\n                {\" \"}\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n              </ButtonH2>\r\n            </a>\r\n          ) : (\r\n            <Link to={`/${courseTitleUserIsOn}/quiz/${nextTopicNumberState}`}>\r\n              <ButtonH2 onClick={setCurrentUrl}>\r\n                {\" \"}\r\n                <FontAwesomeIcon icon={faArrowRight} />\r\n              </ButtonH2>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </Navbar>\r\n\r\n      <Transition\r\n        in={navOpen && props.entryStore}\r\n        timeout={300}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        {(state) => {\r\n          {\r\n            /* if (state === \"exited\") setSubContainer(false); */\r\n          } //Code for NavBar to reset to main menu every time it closes\r\n          return (\r\n            <>\r\n              <QuizSidenav state={state} click={closeNav} />\r\n              <div\r\n                className=\"overlay\"\r\n                style={\r\n                  state === \"entering\"\r\n                    ? { animation: \"show .3s forwards\" }\r\n                    : state === \"entered\"\r\n                    ? { opacity: \"1\" }\r\n                    : { animation: \"show .3s backwards reverse\" }\r\n                }\r\n                onClick={closeNav}\r\n              ></div>\r\n              {\r\n                <div\r\n                  className=\"closeBtn\"\r\n                  style={\r\n                    state === \"entering\"\r\n                      ? { animation: \"show .3s forwards\" }\r\n                      : state === \"entered\"\r\n                      ? { opacity: \"1\" }\r\n                      : { animation: \"show .3s backwards reverse\" }\r\n                  }\r\n                  onClick={closeNav}\r\n                >\r\n                  &times;\r\n                </div> //This is code for a close button\r\n              }\r\n            </>\r\n          );\r\n        }}\r\n      </Transition>\r\n\r\n      <QuizBackgroundPage></QuizBackgroundPage>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useEffect } from \"react\";\r\nimport HHLogo from \"./HHLogo.png\";\r\nimport HamburgerButton from \"./HamburgerButton\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport Sidenav from \"./Sidenav\";\r\nimport BackgroundPage from \"./BackgroundPage\";\r\nimport { useState } from \"react\";\r\nimport { Transition, TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  AmazonContextProvider,\r\n  useAmazonContext,\r\n} from \"../../Contexts/AmazonContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Logout from \"../userAuth/Logout\";\r\n\r\nconst Navbar = styled.nav`\r\n  /* background: #dd6260; */\r\n  background: #8747d4;\r\n  /* top: 80; */\r\n  height: 6vh;\r\n  transform: translateY(${(props) => props.navTop + \"vh\"});\r\n  transition: 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default function LessonMainSideNav(props) {\r\n  const [topicNumbersListfromBackEnd, setTopicNumbersListfromBackEnd] =\r\n    useState([]);\r\n  // const [entryStore, setEntryStore] = useState([]);\r\n  const {\r\n    courseTitleUserIsOn,\r\n    entryStore,\r\n    setEntryStore,\r\n    courseDetails,\r\n    setSubContainerEntries,\r\n    subContainer,\r\n    setSubContainer,\r\n    rowClicked,\r\n    setRowClicked,\r\n    isDarkMode,\r\n    setIsDarkMode,\r\n    navOpen,\r\n    setNavOpen,\r\n  } = useAmazonContext();\r\n  console.log(courseTitleUserIsOn, courseDetails, entryStore);\r\n\r\n  // Toggle dark mode\r\n  const toggleMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  //This use Effect is needed incase someone lands onto the topic page first, (we are loading sidebar data on the landing page, but need it for the topic page too)\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/sideBarData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setEntryStore(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [courseDetails]);\r\n  console.log(\r\n    `/api/${courseTitleUserIsOn}/sideBarData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n  );\r\n  console.log(entryStore);\r\n\r\n  const [currentUrlState, setCurrentUrlState] = useState(\"0\");\r\n  const [currentTopicNumberState, setCurrentTopicNumberState] = useState(\"0\");\r\n  const [nextTopicNumberState, setNextTopicNumberState] = useState(\"0\");\r\n  const [previousTopicNumberState, setPreviousTopicNumberState] = useState(\"0\");\r\n\r\n  //Code for nav to hide scroll down and show on scroll up\r\n  const [navTop, setNavTop] = useState(0);\r\n  var lastScrollY = window.scrollY;\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (lastScrollY < window.scrollY) {\r\n      setNavTop(-6); //needs to be same as Nav Height defined above\r\n    } else {\r\n      setNavTop(0);\r\n    }\r\n    lastScrollY = window.scrollY;\r\n  });\r\n  //End\r\n\r\n  const openNav = () => {\r\n    setNavOpen(true);\r\n  };\r\n\r\n  const closeNav = () => {\r\n    setNavOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"unset\" }}>\r\n      <Navbar\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 10000,\r\n        }}\r\n        navTop={navTop}\r\n      >\r\n        <div>\r\n          <HamburgerButton click={openNav}></HamburgerButton>{\" \"}\r\n        </div>\r\n        {/* <button\r\n          onClick={toggleMode}\r\n          className={`toggle-button ${isDarkMode ? \"dark\" : \"light\"}`}\r\n        >\r\n          {isDarkMode ? \"Dark\" : \"Light\"}\r\n        </button> */}\r\n        <div className=\"toggle-container\">\r\n          {\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"toggle_checkbox\"\r\n            checked={isDarkMode}\r\n            onChange={toggleMode}\r\n          />\r\n          <label for=\"toggle_checkbox\">\r\n            <div id=\"star\">\r\n              <div class=\"star\" id=\"star-1\">\r\n                ★\r\n              </div>\r\n              <div class=\"star\" id=\"star-2\">\r\n                ★\r\n              </div>\r\n            </div>\r\n            <div id=\"moon\"></div>\r\n          </label>\r\n        </div>\r\n      </Navbar>\r\n\r\n      <Transition\r\n        in={navOpen && entryStore}\r\n        timeout={300}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        {(state) => {\r\n          {\r\n            /* if (state === \"exited\") setSubContainer(false); */\r\n          } //Code for NavBar to reset to main menu every time it closes\r\n          return (\r\n            <>\r\n              <Sidenav state={state} click={closeNav} />\r\n              {/* <div\r\n                className=\"overlay\"\r\n                style={\r\n                  state === \"entering\"\r\n                    ? { animation: \"show .3s forwards\" }\r\n                    : state === \"entered\"\r\n                    ? { opacity: \"1\" }\r\n                    : { animation: \"show .3s backwards reverse\" }\r\n                }\r\n                onClick={closeNav}\r\n              ></div>\r\n              {\r\n                <div\r\n                  className=\"closeBtn\"\r\n                  style={\r\n                    state === \"entering\"\r\n                      ? { animation: \"show .3s forwards\" }\r\n                      : state === \"entered\"\r\n                      ? { opacity: \"1\" }\r\n                      : { animation: \"show .3s backwards reverse\" }\r\n                  }\r\n                  onClick={closeNav}\r\n                >\r\n                  &times;\r\n                </div> //This is code for a close button\r\n              } */}\r\n            </>\r\n          );\r\n        }}\r\n      </Transition>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TopicData, { allExampleData } from \"./TopicData\";\r\nimport QuizExample from \"./QuizExample\";\r\nimport ScoreCard from \"./ScoreCard\";\r\nimport { ScoreContext, SubmitButtonContext } from \"../Contexts/ScoreContext\";\r\nimport { ButtonH1 } from \"./Buttons\";\r\nimport styled from \"styled-components\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport QuizMainSideNav from \"./quiz sidebar/QuizMainSideNav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LessonMainSideNav from \"./sidebar/LessonMainSideNav\";\r\nimport ConfettiExplosion from \"react-confetti-explosion\";\r\n\r\nconst QuizTitle = styled.p`\r\n  color: #eb8381;\r\n  /* font-size: 3vh; */\r\n  font-family: \"Quicksand\", sans-serif;\r\n  justify-content: center;\r\n  text-align: center;\r\n  /* margin: 30px 30px; */\r\n  display: flex;\r\n\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst CenteredButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StudyModeButton = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  margin: 20px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 3vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 3vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #8747d4;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  margin-right: \"20px\";\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #e8e2ef;\r\n  color: #252525;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #e8e2ef;\r\n  }\r\n`;\r\n\r\nconst TopicTitle = styled.div`\r\n  color: #9589be;\r\n  /* font-size: 1rem; */\r\n  /* font-size: clamp(4vh, 30px, 30px); */\r\n  /* font-size: min(2rem, 4vh); */\r\n  font-size: 4vh;\r\n  display: block;\r\n  margin: 30px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n\r\n  /* @media (max-width: 40em) {\r\n    font-size: 5vh;\r\n  } */\r\n\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst Quiz = (props) => {\r\n  //set the courseTitle for whatever course the User is on here as well as course landing page in case a user is lands onto a topic page directly\r\n  let {\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    entryStore,\r\n    setEntryStore,\r\n    setSubContainerEntries,\r\n    setSubContainer,\r\n    navOpen,\r\n  } = useAmazonContext();\r\n\r\n  console.log(courseDetails);\r\n  useEffect(() => {\r\n    setCourseTitleUserIsOn(props.match.params.courseTitle);\r\n  }, []);\r\n  console.log(courseTitleUserIsOn);\r\n  console.log(props.match.params.courseTitle);\r\n\r\n  console.log(courseDetails);\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [sumCorrect, setSumCorrect] = useState([]);\r\n  const [whereDidIComeFrom, setWhereDidIComeFrom] = useState(\"none\");\r\n  const location = useLocation(); //Props obtained from Router Link\r\n\r\n  const checkSubmission = () => setSubmitted(true);\r\n\r\n  useEffect(() => window.scrollTo({ top: 0, behavior: \"smooth\" }), [submitted]);\r\n\r\n  // console.log(sumCorrect);\r\n\r\n  console.log(whereDidIComeFrom);\r\n  console.log(location);\r\n  console.log(location.state);\r\n  // console.log(location.state.comingFrom);\r\n\r\n  //set the course Details\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      console.log(response.data);\r\n      let allCourses = response.data;\r\n      let courseChosen = allCourses.find(\r\n        (o) =>\r\n          o.courseTitle.replace(/\\s/g, \"\") === props.match.params.courseTitle\r\n      );\r\n      setCourseDetails(courseChosen);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(courseDetails);\r\n\r\n  //Topic to be displayed\r\n  console.log(props.match);\r\n  console.log(props.match.params.topicNumber);\r\n\r\n  let topicNumberFromSideBar = props.match.params.topicNumber;\r\n  console.log(topicNumberFromSideBar);\r\n  console.log(courseDetails);\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/examplesData?collectionName=${courseDetails.courseExamplesCollectionName}&modelName=${courseDetails.courseExamplesModelName}`\r\n    ).then((response) => {\r\n      setExampleDatafromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [courseDetails]);\r\n\r\n  // let { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  // // Finding quiz questions algorithm starts here\r\n\r\n  //Topic Data from BackEnd\r\n  const [selectedTopic, setSelectedTopic] = useState([]);\r\n\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  //Set the selected topic\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/topicRESTCAll/${topicNumberFromSideBar}?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setSelectedTopic(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [topicNumberFromSideBar, courseDetails]);\r\n\r\n  // let selectedTopic = topicDatafromBackEnd.find(\r\n  //   (o) => o.topicNumber === topicNumberFromSideBar\r\n  // );\r\n\r\n  console.log(selectedTopic);\r\n  //End\r\n\r\n  //This use Effect is needed incase someone lands onto the topic page first, (we are loading sidebar data on the landing page, but need it for the topic page too)\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/sideBarData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setEntryStore(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [selectedTopic.topicNumber]);\r\n  console.log(entryStore);\r\n\r\n  //Logic to open the Chapter Lessons Menu subentry (on the subcontainer in the side bar) related to the lesson the user is on\r\n\r\n  console.log(entryStore);\r\n  useEffect(() => {\r\n    let nextSectionNumber = null;\r\n    let nextSectionTitle = null;\r\n    let foundCurrentSection = false;\r\n    // Example usage:\r\n    const currentChapterNumber = selectedTopic.topicNumber;\r\n\r\n    if (entryStore) {\r\n      //Needed to wait for entryStore to load\r\n      // Iterate through the entryStore data\r\n      for (const topic of entryStore) {\r\n        for (const entry of topic.entries) {\r\n          for (const subEntry of entry.entries) {\r\n            // Check if the section number matches the currentSectionNumber\r\n            if (subEntry.topicNumber === currentChapterNumber) {\r\n              foundCurrentSection = true;\r\n\r\n              setSubContainerEntries(entry.entries);\r\n              setSubContainer(true);\r\n              break;\r\n            }\r\n          }\r\n          if (foundCurrentSection) break;\r\n        }\r\n        if (foundCurrentSection) break;\r\n      }\r\n    }\r\n  }, [navOpen, courseDetails, selectedTopic]);\r\n\r\n  //End\r\n\r\n  //function to find next chapter number and title along with the first lesson in that chapter\r\n  //Start\r\n  function findNextTopic(currentTopicNumber) {\r\n    let foundCurrentTopic = false;\r\n\r\n    if (entryStore) {\r\n      // Iterate through the entryStore data\r\n      for (const topicHeader of entryStore) {\r\n        for (const topic of topicHeader.entries) {\r\n          // Check if the topic number matches the currentTopicNumber\r\n          if (topic.topicNumber === currentTopicNumber) {\r\n            foundCurrentTopic = true;\r\n            console.log(currentTopicNumber);\r\n\r\n            // Find the index of the current topic in the topicHeader\r\n            const currentIndex = topicHeader.entries.findIndex(\r\n              (topic) => topic.topicNumber === currentTopicNumber\r\n            );\r\n            console.log(currentIndex);\r\n\r\n            // Find the index of the current topicHeader\r\n\r\n            console.log(topicHeader.title);\r\n\r\n            const currentTopicHeaderIndex = entryStore.findIndex(\r\n              (entry) =>\r\n                entry.topicHeaderNumber ===\r\n                String(Math.floor(parseFloat(currentTopicNumber)))\r\n            );\r\n            console.log(entryStore);\r\n            console.log(Math.floor(parseFloat(currentTopicNumber)));\r\n            console.log(topicHeader.topicHeaderNumber, currentTopicHeaderIndex);\r\n\r\n            // If the current topic is not the last one in the entry\r\n            if (currentIndex !== topicHeader.entries.length - 1) {\r\n              // Get the next topic's data\r\n              const nextTopic = topicHeader.entries[currentIndex + 1];\r\n              return nextTopic;\r\n            } else if (currentIndex == topicHeader.entries.length - 1) {\r\n              // Get the next topicHeaders first chapter\r\n              if (currentTopicHeaderIndex !== entryStore.length - 1) {\r\n                const nextTopic =\r\n                  entryStore[currentTopicHeaderIndex + 1].entries[0];\r\n                return nextTopic;\r\n              }\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        if (foundCurrentTopic) break;\r\n      }\r\n    }\r\n\r\n    if (!foundCurrentTopic) {\r\n      console.log(\"Current topic not found.\");\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // Example usage:\r\n  const currentTopicNumber = topicNumberFromSideBar; // Assuming this is the last topic\r\n  const nextTopic = findNextTopic(currentTopicNumber, entryStore);\r\n\r\n  var nextChapterTitle = \"\";\r\n  var nextChapterNumber = \"\";\r\n  var nextChapterFirstLessonNumber = \"\";\r\n  var nextChapterFirstLessonTitle = \"\";\r\n\r\n  if (nextTopic) {\r\n    console.log(\"Next Chapter Number:\", nextTopic.entries[0].topicNumber);\r\n    console.log(\"Next Chapter Title:\", nextTopic.entries[0].title);\r\n    console.log(\r\n      \"Next Chapter First Lesson Number:\",\r\n      nextTopic.entries[0].entries[0].sectionNumber\r\n    );\r\n    console.log(\r\n      \"Next Chapter First Lesson Title:\",\r\n      nextTopic.entries[0].entries[0].title\r\n    );\r\n\r\n    nextChapterNumber = nextTopic.entries[0].topicNumber;\r\n    nextChapterTitle = nextTopic.entries[0].title;\r\n    nextChapterFirstLessonNumber =\r\n      nextTopic.entries[0].entries[0].sectionNumber;\r\n    nextChapterFirstLessonTitle = nextTopic.entries[0].entries[0].title;\r\n  } else {\r\n    console.log(\"No next topic.\");\r\n    nextChapterNumber = false;\r\n    nextChapterTitle = false;\r\n    nextChapterFirstLessonNumber = false;\r\n    nextChapterFirstLessonTitle = false;\r\n  }\r\n\r\n  //End\r\n\r\n  const [topicNumbersListfromBackEnd, setTopicNumbersListfromBackEnd] =\r\n    useState([]);\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/topicNumbersList?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setTopicNumbersListfromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [selectedTopic.topicNumber]);\r\n  console.log(topicNumbersListfromBackEnd);\r\n\r\n  const sectionList = []; //Creates a list of all the sectionNumbers on this topic\r\n  selectedTopic.sections &&\r\n    selectedTopic.sections.map((section) => {\r\n      return sectionList.push(section.sectionNumber);\r\n    });\r\n\r\n  console.log(sectionList);\r\n\r\n  // Number of questions display properties\r\n\r\n  let needToDisplay = 100;\r\n  let needtoSelect = Math.ceil(needToDisplay / sectionList.length);\r\n  console.log(needtoSelect);\r\n\r\n  let selectedSectionExamples = []; //List of selected examples from each section\r\n  let selectedSectionExamplesPool = []; //List of all selected examples from all sections\r\n  let newselectedSectionExamplesPool = []; //Needed this to use the concat logic because concat requires you to store the concatenation into a new variable\r\n  let finalSetOfExamplesToDisplay = []; //final list of examples to display\r\n\r\n  // Algorithm for obtaining questions from each section:\r\n\r\n  // Randomiser function to create quiz for all topics\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  sectionList.map((sectionNumber) => {\r\n    //Mapping through the list of sections that from the Topic\r\n    let allSectionExamples =\r\n      exampleDatafromBackEnd &&\r\n      exampleDatafromBackEnd.length !== 0 &&\r\n      exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n    console.log(allSectionExamples);\r\n    if (allSectionExamples.length > needtoSelect) {\r\n      selectedSectionExamples = chooseRandom(allSectionExamples, needtoSelect);\r\n      console.log(selectedSectionExamples);\r\n      newselectedSectionExamplesPool = selectedSectionExamplesPool.concat(\r\n        newselectedSectionExamplesPool,\r\n        selectedSectionExamples\r\n      );\r\n    } else {\r\n      newselectedSectionExamplesPool = selectedSectionExamplesPool.concat(\r\n        newselectedSectionExamplesPool,\r\n        allSectionExamples\r\n      );\r\n    }\r\n    console.log(selectedSectionExamplesPool);\r\n    console.log(newselectedSectionExamplesPool);\r\n  });\r\n  console.log(selectedSectionExamplesPool);\r\n  console.log(newselectedSectionExamplesPool);\r\n  if (newselectedSectionExamplesPool.length > needToDisplay) {\r\n    finalSetOfExamplesToDisplay = chooseRandom(\r\n      newselectedSectionExamplesPool,\r\n      needToDisplay\r\n    );\r\n  } else {\r\n    finalSetOfExamplesToDisplay = newselectedSectionExamplesPool;\r\n  }\r\n\r\n  console.log(finalSetOfExamplesToDisplay);\r\n\r\n  // let selectedQuizQuestions = [];\r\n\r\n  // // if (location.state.comingFrom == \"Topic\") {\r\n  // //   selectedQuizQuestions = location.state.topicSelectedQuizQuestions;\r\n  // // } else if (location.state.comingFrom == \"Section\") {\r\n  // //   selectedQuizQuestions = location.state.sectionSelectedQuizQuestions;\r\n  // // } else if (location.state.comingFrom == \"ScoreCard\") {\r\n  // //   selectedQuizQuestions = location.state.scoreCardSelectedQuizQuestons;\r\n  // // }\r\n\r\n  // console.log(selectedQuizQuestions);\r\n\r\n  // //When user changes quiz then set submitted back to false\r\n\r\n  useEffect(() => {\r\n    setSubmitted(false);\r\n    setSumCorrect([]);\r\n  }, [selectedTopic.topicNumber]);\r\n\r\n  //End\r\n\r\n  const sum = sumCorrect.reduce(function (a, b) {\r\n    return a + b;\r\n  }, 0);\r\n\r\n  const scorePercentage = Math.round((sum / sumCorrect.length) * 100);\r\n\r\n  return (\r\n    <ScoreContext.Provider value={[sumCorrect, setSumCorrect]}>\r\n      <SubmitButtonContext.Provider value={[submitted, setSubmitted]}>\r\n        <>\r\n          <LessonMainSideNav></LessonMainSideNav>\r\n          <div className=\"Quiz\">\r\n            <div className=\"QuizContainer\">\r\n              <div style={{}} className=\"LessonTitleContainer\">\r\n                <span className=\"LessonNumber\">\r\n                  Chapter Quiz {selectedTopic.topicNumber}\r\n                </span>{\" \"}\r\n                <br />\r\n                <span className=\"LessonTitle\">{selectedTopic.topicTitle}</span>\r\n                {submitted && scorePercentage == 100 && (\r\n                  <ConfettiExplosion\r\n                    height={\"1000vh\"}\r\n                    particleSize={30}\r\n                    autoStart={true}\r\n                    duration={5000}\r\n                    particleCount={350}\r\n                    spread={360}\r\n                    origin={{ x: 0.8, y: 0.5 }}\r\n                    force={0.8}\r\n                    width={1600}\r\n                  />\r\n                )}\r\n              </div>\r\n              {/* <CenteredButtonContainer>\r\n            <Link\r\n              to={`/${courseTitleUserIsOn}/topic/` + selectedTopic.topicNumber}\r\n            >\r\n              <StudyModeButton>\r\n                <p style={{ fontSize: \"2vh\", margin: \"0px\" }}>Switch to</p>\r\n                <b>Study Mode</b>\r\n              </StudyModeButton>\r\n            </Link>\r\n          </CenteredButtonContainer> */}\r\n              {submitted ? (\r\n                <ScoreCard\r\n                  // goBackTo={\r\n                  //   location.state.comingFrom == \"Topic\"\r\n                  //     ? \"Topic\"\r\n                  //     : location.state.section\r\n                  // } //Used to send section to HashLink\r\n                  sections={\r\n                    location.state\r\n                      ? location.state.comingFrom == \"Topic\"\r\n                        ? location.state.sectionList\r\n                        : location.state.comingFrom == \"Section\"\r\n                        ? location.state.section\r\n                        : location.state.comingFrom == \"ScoreCard\"\r\n                        ? location.state.sections\r\n                        : \"none\"\r\n                      : sectionList\r\n                  }\r\n                  comingFrom={\r\n                    location.state &&\r\n                    (location.state.comingFrom == \"Topic\"\r\n                      ? \"Topic\"\r\n                      : location.state.comingFrom == \"Section\"\r\n                      ? \"Section\"\r\n                      : location.state.comingFrom == \"ScoreCard\"\r\n                      ? \"ScoreCard\"\r\n                      : \"none\")\r\n                  }\r\n                  whereDidIComeFrom={whereDidIComeFrom}\r\n                  topicNumber={props.match.params.topicNumber}\r\n                  sectionNumber={\r\n                    location.state &&\r\n                    (location.state.comingFrom == \"Section\"\r\n                      ? location.state.section\r\n                      : location.state.comingFrom == \"ScoreCard\"\r\n                      ? location.state.sectionNumber\r\n                      : \"none\")\r\n                  }\r\n                  nextChapterNumber={nextChapterNumber}\r\n                  nextChapterTitle={nextChapterTitle}\r\n                  nextChapterFirstLessonNumber={nextChapterFirstLessonNumber}\r\n                  nextChapterFirstLessonTitle={nextChapterFirstLessonTitle}\r\n                  chapterNumber={selectedTopic.topicNumber}\r\n                ></ScoreCard>\r\n              ) : (\r\n                <QuizTitle></QuizTitle>\r\n              )}\r\n\r\n              {finalSetOfExamplesToDisplay.map((example, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <QuizExample\r\n                      topicNumber={props.match.params.topicNumber} //Passed from the 'Link' id substitute which is the topicNumber obtained from the Sidebar\r\n                      example={example}\r\n                      exampleIndex={index}\r\n                    ></QuizExample>\r\n                    {index !== finalSetOfExamplesToDisplay.length - 1 ? (\r\n                      <hr\r\n                        style={{\r\n                          width: \"70%\",\r\n                          backgroundColor: \"#9589be\",\r\n                          height: 2,\r\n                          borderRadius: 20,\r\n                          border: 0,\r\n                          marginTop: \"10%\",\r\n                          marginBottom: \"10%\",\r\n                        }}\r\n                      ></hr>\r\n                    ) : (\r\n                      <div\r\n                        style={{\r\n                          marginTop: \"10%\",\r\n                          marginBottom: \"30%\",\r\n                        }}\r\n                      ></div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n              {sumCorrect.includes(undefined) == false && //When User has clicked all answers, show button, list of answers should not contain undefined\r\n              sumCorrect.length == finalSetOfExamplesToDisplay.length &&\r\n              submitted == false ? ( //Button will dissappear when submitted == true\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginBottom: \"100px\",\r\n                    position: \"fixed\",\r\n                    bottom: \"0px\",\r\n                    left: \"50%\",\r\n                    transform: \"translateX(-50%)\",\r\n                  }}\r\n                >\r\n                  <SubmitButton onClick={checkSubmission}>\r\n                    <b>Submit</b>\r\n                  </SubmitButton>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </>\r\n      </SubmitButtonContext.Provider>\r\n    </ScoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n", "import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./landingPage.css\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CourseIcon(props) {\r\n  return (\r\n    <div className=\"courseIconAndTitle\">\r\n      <div>\r\n        <img className=\"courseImage\" src={props.img} alt=\"\"></img>{\" \"}\r\n        {/* <h1>{props.title}</h1> */}\r\n        {/* <h3>{props.description}</h3> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseIcon;\r\n", "import \"./landingPageCourseContent.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CourseContentRow from \"./CourseConentRow\";\r\nimport axios from \"axios\";\r\n\r\n/* Before coding it is important to agree on what each of the stats mean:\r\nnumberOfLessons = count of Sections\r\nnumberOfVideos = count of Sections that have a youTubeLink\r\nnumberOfQuizQuestions = count of examples data set\r\napproxCourseDuration = (timeToCompleteEachLesson*numberOfLessons) + \r\n                       (timeToCompleteEachTopicQuiz*numberOfTopicsWithSections) + \r\n                       (addedBufferTime*numberOfTopicsWithSections)\r\n    where timeToCompleteEachLesson = time it takes to complete a Section\r\n    timeToCompleteEachTopicQuiz = time it takes to Complete a Topic Quiz [I am assuming this is the same time for each topic regardless of the number of sections in each Topic because the count of questions in the Topic Quiz is the same regardless of count of sections]\r\n    numberOfTopicsWithSections = count of Topics with Sections\r\n    addedBufferTime = added Time a user might spend on a Topic if a user makes mistakes in sections or Topics\r\n*/\r\n\r\nfunction CourseStats(props) {\r\n  const { topicDatafromBackEnd, exampleDatafromBackEnd } = useAmazonContext();\r\n  const [numberOfQuizQuestions, setNumberOfQuizQuestions] = useState(0);\r\n  const [numberOfLessons, setNumberOfLessons] = useState(0);\r\n  const [numberOfVideos, setNumberOfVideos] = useState(0);\r\n  const [approxCourseDuration, setApproxCourseDuration] = useState(0);\r\n\r\n  let {\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    setTopicDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    entryStore,\r\n    setEntryStore,\r\n    subContainer,\r\n  } = useAmazonContext();\r\n\r\n  // Fetch data for contents as well as stats based on course clicked\r\n  useEffect(() => {\r\n    // props.courseDetails &&\r\n    //   axios(\r\n    //     `/api/${props.courseDetails.courseTitle.replace(\r\n    //       /\\s/g,\r\n    //       \"\"\r\n    //     )}/sideBarData?collectionName=${\r\n    //       props.courseDetails.courseTopicsCollectionName\r\n    //     }&modelName=${props.courseDetails.courseTopicsModelName}`\r\n    //   ).then((response) => {\r\n    //     setEntryStore(response.data);\r\n    //     console.log(response.data);\r\n    //   });\r\n    props.courseDetails &&\r\n      axios(\r\n        `/${props.courseDetails.courseTitle.replace(\r\n          /\\s/g,\r\n          \"\"\r\n        )}/topicsData?collectionName=${\r\n          props.courseDetails.courseTopicsCollectionName\r\n        }&modelName=${props.courseDetails.courseTopicsModelName}`\r\n      ).then((response) => {\r\n        //counting topic youtube links\r\n\r\n        let numberOfLessons = 0;\r\n        let numberOfTopicsWithSections = 0;\r\n        let numberOfVideos = 0;\r\n\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          numberOfLessons += response.data[i].sections.length;\r\n          if (response.data[i].sections.length !== 0) {\r\n            numberOfTopicsWithSections += 1;\r\n          }\r\n          if (response.data[i].topicYoutubeLink) {\r\n            numberOfVideos += 1;\r\n          }\r\n        }\r\n\r\n        setNumberOfLessons(numberOfLessons);\r\n        setNumberOfVideos(numberOfVideos);\r\n        let timeToCompleteEachLesson = 1.5;\r\n        let timeToCompleteEachTopicQuiz = 2;\r\n        let addedBufferTime = 1;\r\n        setApproxCourseDuration(timeToCompleteEachLesson * numberOfLessons);\r\n        // setTopicDatafromBackEnd(response.data);\r\n        console.log(response.data);\r\n      });\r\n    props.courseDetails &&\r\n      axios(\r\n        `/examplesData?collectionName=${props.courseDetails.courseExamplesCollectionName}&modelName=${props.courseDetails.courseExamplesModelName}`\r\n      ).then((response) => {\r\n        // setExampleDatafromBackEnd(response.data);\r\n        setNumberOfQuizQuestions(response.data.length);\r\n        console.log(response.data);\r\n      });\r\n  }, [props.courseDetails]);\r\n  console.log(entryStore, topicDatafromBackEnd, exampleDatafromBackEnd);\r\n\r\n  // let numberOfLessons = 0;\r\n  // let numberOfVideos = 0;\r\n  let numberOfTopicsWithSections = 0;\r\n\r\n  // counting section youtube links\r\n  // for (let i = 0; i < topicDatafromBackEnd.length; i++) {\r\n  //   numberOfLessons += topicDatafromBackEnd[i].sections.length;\r\n  //   if (topicDatafromBackEnd[i].sections.length !== 0) {\r\n  //     //if the topic has a section\r\n  //     numberOfTopicsWithSections += 1;\r\n  //     for (let j = 0; j < topicDatafromBackEnd[i].sections.length; j++) {\r\n  //       if (topicDatafromBackEnd[i].sections[j].sectonYoutubeLink) {\r\n  //         //count the sections with videos\r\n  //         numberOfVideos += 1;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  console.log(numberOfLessons);\r\n  console.log(numberOfVideos);\r\n  console.log(numberOfTopicsWithSections);\r\n\r\n  console.log(topicDatafromBackEnd);\r\n\r\n  // let numberOfQuizQuestions = exampleDatafromBackEnd.length;\r\n\r\n  console.log(numberOfQuizQuestions);\r\n\r\n  // let approxCourseDuration = timeToCompleteEachLesson * numberOfLessons;\r\n\r\n  console.log(approxCourseDuration);\r\n\r\n  return (\r\n    <div className=\"courseStatBanner\" style={{ color: props.color }}>\r\n      <div className=\"courseStat\">\r\n        <div className=\"courseStatImage\">\r\n          <i class=\"fa-solid fa-clipboard-question\"></i>\r\n        </div>\r\n        <div className=\"courseStatDescription\">\r\n          <div className=\"courseStatNumber\">{numberOfQuizQuestions}</div>{\" \"}\r\n          <div className=\"courseStatName\">Questions</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"courseStat\">\r\n        <div className=\"courseStatImage\">\r\n          <i class=\"fa-solid fa-graduation-cap\"></i>\r\n        </div>\r\n        <div className=\"courseStatDescription\">\r\n          <div className=\"courseStatNumber\">{numberOfLessons}</div>{\" \"}\r\n          <div className=\"courseStatName\">Lessons</div>\r\n        </div>\r\n      </div>\r\n      {numberOfVideos > 0 && (\r\n        <div className=\"courseStat\">\r\n          <div className=\"courseStatImage\">\r\n            <i class=\"fa-solid fa-play\"></i>\r\n          </div>\r\n          <div className=\"courseStatDescription\">\r\n            <div className=\"courseStatNumber\">{numberOfVideos}</div>{\" \"}\r\n            <div className=\"courseStatName\">Videos</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"courseStat\">\r\n        <div className=\"courseStatImage\">\r\n          <i class=\"fa-solid fa-clock\"></i>\r\n        </div>\r\n        <div className=\"courseStatDescription\">\r\n          <div className=\"courseStatNumber\">{approxCourseDuration}</div>{\" \"}\r\n          <div className=\"courseStatName\">~ mins</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseStats;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./landingPage.css\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport CourseStats from \"./CourseStats\";\r\nimport ColorThief from \"colorthief\";\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  position: relative;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  /* padding-left: 15px; */\r\n  /* padding-right: 15px; */\r\n  /* margin: 30px; */\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 1.4vh;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 20% 20% 20% 20% / 50% 50% 50% 50%;\r\n  background: none;\r\n  color: #dd6260;\r\n  height: 6vh;\r\n  text-decoration: underline;\r\n\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst StartButton = styled.button`\r\n  background: #8747d4;\r\n  position: relative;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  /* margin-bottom: 10px; */\r\n\r\n  /* font-size: 15px; */\r\n  font-size: 3vh;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 15%;\r\n\r\n  color: white;\r\n  height: 6vh;\r\n\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n  margin-bottom: 40px;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nfunction CourseCard(props) {\r\n  const [dominantColor, setDominantColor] = useState(\"\");\r\n  const [textColor, setTextColor] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showGoals, setShowGoals] = useState(false);\r\n\r\n  const toggleGoals = () => {\r\n    setShowGoals(!showGoals);\r\n  };\r\n\r\n  const fetchAndExtractColorWithCache = async (imageUrl) => {\r\n    const cachedColor = localStorage.getItem(imageUrl);\r\n\r\n    if (cachedColor) {\r\n      handleColorExtraction(cachedColor);\r\n    } else {\r\n      try {\r\n        const response = await fetch(imageUrl, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Cache-Control\": \"no-cache\",\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const blob = await response.blob();\r\n          const reader = new FileReader();\r\n\r\n          reader.readAsDataURL(blob);\r\n          reader.onloadend = () => {\r\n            const base64data = reader.result;\r\n\r\n            const image = new Image();\r\n            image.src = base64data;\r\n\r\n            image.onload = () => {\r\n              const colorThief = new ColorThief();\r\n              const dominantColorRGB = colorThief.getColor(image);\r\n              const dominantColorCSS = `rgb(${dominantColorRGB[0]}, ${dominantColorRGB[1]}, ${dominantColorRGB[2]})`;\r\n\r\n              handleColorExtraction(dominantColorCSS);\r\n\r\n              // Store the color in local storage for caching\r\n              localStorage.setItem(imageUrl, dominantColorCSS);\r\n            };\r\n          };\r\n        } else {\r\n          console.error(\"Image fetch failed:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleColorExtraction = (color) => {\r\n    setDominantColor(color);\r\n    const luminance = calculateLuminance(color);\r\n    const textColor = luminance > 0.5 ? \"#000\" : \"#fff\";\r\n    setTextColor(textColor);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const calculateLuminance = (color) => {\r\n    const rgb = color.match(/\\d+/g);\r\n    const luminance = (0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2]) / 255;\r\n    return luminance;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const imageUrl =\r\n      \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n      props.course.courseTitle.replace(/\\s/g, \"\") +\r\n      \"/courseImage/\" +\r\n      props.course.courseTitle.replace(/\\s/g, \"\") +\r\n      \".png\";\r\n\r\n    fetchAndExtractColorWithCache(imageUrl);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"courseFullDetails\"\r\n      style={{ backgroundColor: dominantColor }}\r\n    >\r\n      <div className=\"courseHeader\">\r\n        <CourseIcon\r\n          img={\r\n            \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n            props.course.courseTitle.replace(/\\s/g, \"\") +\r\n            \"/courseImage/\" +\r\n            props.course.courseTitle.replace(/\\s/g, \"\") +\r\n            \".png\"\r\n          }\r\n          title={props.course.courseTitle}\r\n          description={props.course.courseDescription}\r\n        ></CourseIcon>\r\n        <div className=\"courseDescriptionANDGoals\">\r\n          <CourseStats\r\n            courseDetails={props.course}\r\n            color={textColor}\r\n          ></CourseStats>\r\n        </div>\r\n      </div>\r\n      <h1 className=\"courseDescription\" style={{ color: textColor }}>\r\n        {props.course.courseDescription}\r\n        <br></br>\r\n        <ButtonH2 onClick={toggleGoals} style={{ color: textColor }}>\r\n          {showGoals ? \"Hide Course Details\" : \"Show Course Details\"}\r\n        </ButtonH2>\r\n        ​\r\n      </h1>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Link to={`/${props.course.courseTitle.replace(/\\s/g, \"\")}/start`}>\r\n          <StartButton>Start</StartButton>\r\n        </Link>\r\n      </div>\r\n\r\n      {showGoals && (\r\n        <div className=\"courseGoals\">\r\n          <div className=\"courseGoalsDescription\" style={{ color: textColor }}>\r\n            <div className=\"courseGoalsHeader\" style={{ color: textColor }}>\r\n              You will learn\r\n            </div>\r\n            {Object.entries(props.course).length === 0 ? ( //UseEffects need to fetch object details and hence object will be empty until useEffect gets data, until then this is empty\r\n              <div>Loading</div>\r\n            ) : (\r\n              props.course.courseGoals.map((goal, index) => {\r\n                return <p>{goal}</p>;\r\n              })\r\n            )}\r\n          </div>\r\n          <div className=\"courseReference\">\r\n            {props.course.courseTitle && (\r\n              <img\r\n                className=\"courseReferenceImage\"\r\n                src={\r\n                  \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n                  props.course.courseTitle.replace(/\\s/g, \"\") +\r\n                  \"/courseReferenceImage/\" +\r\n                  props.course.courseTitle.replace(/\\s/g, \"\") +\r\n                  \".png\"\r\n                }\r\n                alt=\"\"\r\n              ></img>\r\n            )}\r\n\r\n            <div\r\n              className=\"courseReferenceDescription\"\r\n              style={{ color: textColor }}\r\n            >\r\n              {props.course.courseReferenceDescription}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseCard;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport CourseStats from \"./CourseStats\";\r\nimport CourseCard from \"./CourseCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logout from \"../userAuth/Logout\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction CourseMenuPage() {\r\n  const [coursesDisplayed, setCoursesDisplayed] = useState([]);\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      setCoursesDisplayed(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n  console.log(coursesDisplayed);\r\nconst history = useHistory();\r\n  // In your component that requires authentication\r\nuseEffect(() => {\r\n  if (!sessionStorage.getItem('isLoggedIn')) {\r\n      // Redirect to login page\r\n      history.replace('/');\r\n  }\r\n}, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sideNavChapterHeader\">\r\n        <p>Courses</p>\r\n      </div>\r\n      <Logout/>\r\n      <div className=\"courseCardsContainer\">\r\n        {coursesDisplayed.map((course, index) => {\r\n          return (\r\n            <>\r\n              {course.courseIsActive && (\r\n                <CourseCard course={course}></CourseCard>\r\n              )}\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseMenuPage;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CourseContentRow from \"./CourseConentRow\";\r\nimport axios from \"axios\";\r\n\r\nconst CourseContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  height: 100%; /* Ensure the div takes full height */\r\n`;\r\n\r\nconst SearchBarContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 700px;\r\n  margin-bottom: 20px;\r\n  margin-right: 90px;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 10px;\r\n  padding-left: 100px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-size: 3vh;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst SearchIcon = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 10px;\r\n  font-size: 3vh;\r\n`;\r\n\r\nfunction CourseContent() {\r\n  const { courseTitleUserIsOn, courseDetails, entryStore } = useAmazonContext();\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State for the search term\r\n  const [filteredEntries, setFilteredEntries] = useState([]); // State for filtered entries\r\n\r\n  // Filter the entries based on the search term\r\n  useEffect(() => {\r\n    if (entryStore && searchTerm) {\r\n      const filtered = entryStore\r\n        .map((entry) => {\r\n          const filteredSubEntries = entry.entries.filter((subEntry) => {\r\n            const subEntryMatches = subEntry.title\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase());\r\n            const nestedEntryMatches =\r\n              subEntry.entries &&\r\n              subEntry.entries.some((nestedEntry) =>\r\n                nestedEntry.entries.some(\r\n                  (section) =>\r\n                    section.title &&\r\n                    section.title\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase())\r\n                )\r\n              );\r\n            return subEntryMatches || nestedEntryMatches;\r\n          });\r\n          return { ...entry, entries: filteredSubEntries };\r\n        })\r\n        .filter((entry) => entry.entries.length > 0);\r\n      setFilteredEntries(filtered);\r\n    } else {\r\n      setFilteredEntries(entryStore);\r\n    }\r\n  }, [entryStore, searchTerm]);\r\n\r\n  return (\r\n    <div className=\"courseContent\">\r\n      <CourseContentWrapper>\r\n        <div className=\"courseContentHeader\">Course Content</div>\r\n        <SearchBarContainer>\r\n          <SearchBar\r\n            type=\"text\"\r\n            placeholder=\"Search for a topic\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <SearchIcon>\r\n            <FontAwesomeIcon icon={faSearch} />\r\n          </SearchIcon>\r\n        </SearchBarContainer>\r\n      </CourseContentWrapper>\r\n      {filteredEntries &&\r\n        filteredEntries.map((entry, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <div className=\"sidenavContentHeaderMainMenuCC\">\r\n                {entry.title}\r\n              </div>\r\n              {entry.entries.map((subEntry, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <CourseContentRow topic={subEntry}></CourseContentRow>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseContent;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SideNavContent from \"./SideNavContent\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport SubContainer from \"./SubContainer\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function SidenavLandingPage(props) {\r\n  let {\r\n    subContainer,\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    entryStore,\r\n    setEntryStore,\r\n    progressData,\r\n    setProgressData,\r\n    chapterProgressData,\r\n    setChapterProgressData,\r\n  } = useAmazonContext();\r\n\r\n  return (\r\n    <div\r\n      className=\"SidenavLandingPage\"\r\n      //   style={\r\n      //     props.state === \"entering\"\r\n      //       ? { animation: \"moveSideBar .3s forwards\" }\r\n      //       : props.state === \"entered\"\r\n      //       ? { transform: \"translateX(-0px)\" }\r\n      //       : { animation: \"moveSideBar .3s reverse backwards\" }\r\n      //   }\r\n    >\r\n      <Transition in={!subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => (\r\n          <SideNavContent\r\n            state={state}\r\n            closeNav={props.click}\r\n            progressData={props.progressData}\r\n            chapterProgressData={props.chapterProgressData}\r\n            simplifiedChaptersLessonsData={props.simplifiedChaptersLessonsData}\r\n            unlockedLessons={props.unlockedLessons}\r\n            unlockedChapters={props.unlockedChapters}\r\n            unlockedQuizzes={props.unlockedQuizzes}\r\n            isLastLessonOfChapter={props.isLastLessonOfChapter}\r\n            isFirstLessonOfChapter={props.isFirstLessonOfChapter}\r\n            chapterOfLastCompletedLesson={props.chapterOfLastCompletedLesson}\r\n            lastUnlockedLessonNumber={props.lastUnlockedLessonNumber}\r\n            lastUnlockedLessonTitle={props.lastUnlockedLessonTitle}\r\n            isLessonProgressEmpty={props.isLessonProgressEmpty}\r\n          />\r\n        )}\r\n      </Transition>\r\n      <Transition in={subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => (\r\n          <SubContainer\r\n            state={state}\r\n            closeNav={props.click}\r\n            unlockedLessons={props.unlockedLessons}\r\n            unlockedChapters={props.unlockedChapters}\r\n            unlockedQuizzes={props.unlockedQuizzes}\r\n          />\r\n        )}\r\n      </Transition>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MainSideNav from \"../sidebar/MainSideNav\";\r\nimport Sidenav from \"../sidebar/Sidenav\";\r\nimport SideNavContent from \"../sidebar/SideNavContent\";\r\nimport SubContainer from \"../sidebar/SubContainer\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport \"./landingPage.css\";\r\nimport \"../sidebar/Sidebar.css\";\r\nimport CourseContent from \"./CourseContent\";\r\nimport CourseStats from \"./CourseStats\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport SidenavLandingPage from \"../sidebar/SidenavLandingPage\";\r\nimport CourseProgressBar from \"../sidebar/CourseProgressBar\";\r\nimport SideNavRowLesson from \"../sidebar/SideNavRowLesson\";\r\nimport SideNavRowQuiz from \"../sidebar/SideNavRowQuiz\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst navBarHeight = 10;\r\n\r\nconst Navbar = styled.div`\r\n  background: #dd6260;\r\n  /* top: 80; */\r\n  /* height: ${navBarHeight}vh; */\r\n  transform: translateY(${(props) => props.navTop + \"vh\"});\r\n  transition: 0.2s;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  font-family: Quicksand;\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  /* margin-right: \"20px\"; */\r\n\r\n  /* font-size: 15px; */\r\n  font-size: 5vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 15px;\r\n  background: #8747d4;\r\n  color: white;\r\n  /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5); */\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin: 0 auto;\r\n  /* margin-top: 40px; */\r\n  display: block;\r\n  textdecoration: none;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nfunction CourseLandingPage(props) {\r\n  //set the courseTitle and courseDetails for whatever course the User is on and store in AmazonContext to be used across app\r\n  let {\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    entryStore,\r\n    setEntryStore,\r\n    subContainer,\r\n    progressData,\r\n    setProgressData,\r\n    chapterProgressData,\r\n    setChapterProgressData,\r\n  } = useAmazonContext();\r\n\r\n  //Code to make a particular section glow\r\n  let currentUrl = window.location.href;\r\n  console.log(currentUrl);\r\n  // setCurrentUrlState(currentUrl);\r\n  let currentUrlArray = currentUrl.split(\"/\");\r\n  console.log(currentUrlArray);\r\n  let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n  console.log(topicAndSection);\r\n  //Handling%23 in URL\r\n  var topicAndSectionArray = [];\r\n\r\n  if (topicAndSection.includes(\"%\")) {\r\n    topicAndSectionArray = topicAndSection.split(\"%23\");\r\n  } else {\r\n    topicAndSectionArray = topicAndSection.split(\"#\");\r\n  }\r\n\r\n  console.log(topicAndSectionArray);\r\n  let currentUrlSectionID = topicAndSectionArray[1];\r\n  console.log(currentUrlSectionID);\r\n\r\n  // console.log(topicNumberFromSideBar);\r\n  //End\r\n\r\n  //To scroll to the top on change of url or scroll to section\r\n  useEffect(() => {\r\n    if (currentUrlSectionID === undefined) {\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }\r\n  }, [currentUrl]);\r\n\r\n  useEffect(() => {\r\n    if (currentUrlSectionID) {\r\n      const element = document.getElementById(currentUrlSectionID);\r\n      element && element.scrollIntoView();\r\n    }\r\n  });\r\n  console.log(currentUrl);\r\n  //End\r\n\r\n  useEffect(() => {\r\n    //set courseTitle\r\n    setCourseTitleUserIsOn(props.match.params.courseTitle);\r\n  }, []);\r\n  console.log(courseTitleUserIsOn);\r\n  //set the course Details\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      console.log(response.data);\r\n      let allCourses = response.data;\r\n      let courseChosen = allCourses.find(\r\n        (o) => o.courseTitle.replace(/\\s/g, \"\") === courseTitleUserIsOn\r\n      );\r\n      setCourseDetails(courseChosen);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(courseDetails);\r\n  // Fetch data for contents as well as stats based on course clicked\r\n  useEffect(() => {\r\n    courseDetails &&\r\n      axios(\r\n        `/${courseTitleUserIsOn}/sideBarData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n      ).then((response) => {\r\n        setEntryStore(response.data);\r\n        console.log(response.data);\r\n      });\r\n    courseDetails &&\r\n      axios(\r\n        `/${courseTitleUserIsOn}/topicsData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n      ).then((response) => {\r\n        setTopicDatafromBackEnd(response.data);\r\n        console.log(response.data);\r\n      });\r\n    courseDetails &&\r\n      axios(\r\n        `/examplesData?collectionName=${courseDetails.courseExamplesCollectionName}&modelName=${courseDetails.courseExamplesModelName}`\r\n      ).then((response) => {\r\n        setExampleDatafromBackEnd(response.data);\r\n        console.log(response.data);\r\n      });\r\n  }, [courseDetails]);\r\n  console.log(entryStore, topicDatafromBackEnd, exampleDatafromBackEnd);\r\n\r\n  //Code for nav to hide scroll down and show on scroll up\r\n  const [navTop, setNavTop] = useState(0);\r\n  var lastScrollY = window.scrollY;\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (lastScrollY < window.scrollY) {\r\n      setNavTop(-{ navBarHeight }); //needs to be same as Nav Height defined above\r\n    } else {\r\n      setNavTop(0);\r\n    }\r\n    lastScrollY = window.scrollY;\r\n  });\r\n  //End\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching progress data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProgress();\r\n  }, []);\r\n\r\n  console.log(progressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchChapterProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchChapterProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setChapterProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chapter progress data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchChapterProgress();\r\n  }, []);\r\n\r\n  console.log(chapterProgressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  //Simplfied entryStore\r\n\r\n  function simplifyData(data) {\r\n    return (\r\n      data &&\r\n      data\r\n        .map((topicHeader) => {\r\n          return topicHeader.entries.map((chapter) => {\r\n            return {\r\n              chapterNumber: chapter.topicNumber,\r\n              chapterTitle: chapter.title,\r\n              lessons: chapter.entries[0].entries.map((lesson) => {\r\n                return {\r\n                  lessonNumber: lesson.sectionNumber,\r\n                  lessonTitle: lesson.title,\r\n                };\r\n              }),\r\n            };\r\n          });\r\n        })\r\n        .flat()\r\n    );\r\n  }\r\n\r\n  // Usage\r\n  const simplifiedChaptersLessonsData = simplifyData(entryStore);\r\n  console.log(simplifiedChaptersLessonsData);\r\n\r\n  function generateunlockedLessons(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    chapterProgressData,\r\n    courseTitleUserIsOn\r\n  ) {\r\n    const unlockedLessons = [];\r\n\r\n    const userProgress =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n    if (userProgress) {\r\n      const { lessonProgress } = userProgress;\r\n      const lastCompletedLesson = lessonProgress[lessonProgress.length - 1];\r\n      const chapterContainingLastCompletedLesson =\r\n        simplifiedChaptersLessonsData &&\r\n        simplifiedChaptersLessonsData.find((chapter) => {\r\n          return chapter.lessons.some(\r\n            (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n          );\r\n        });\r\n\r\n      if (chapterContainingLastCompletedLesson) {\r\n        const { lessons } = chapterContainingLastCompletedLesson;\r\n        const lastCompletedLessonIndex = lessons.findIndex(\r\n          (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n        );\r\n        if (lastCompletedLessonIndex === lessons.length - 1) {\r\n          // Add all completed lessons and check chapter completion\r\n          unlockedLessons.push(...lessonProgress);\r\n          const nextChapterIndex =\r\n            simplifiedChaptersLessonsData.findIndex(\r\n              (chapter) =>\r\n                chapter.chapterNumber ===\r\n                chapterContainingLastCompletedLesson.chapterNumber\r\n            ) + 1;\r\n          const nextChapter = simplifiedChaptersLessonsData[nextChapterIndex];\r\n          if (nextChapter) {\r\n            const chapterProgress =\r\n              chapterProgressData &&\r\n              chapterProgressData.find(\r\n                (progress) => progress.courseProgress === courseTitleUserIsOn\r\n              )?.chapterProgress;\r\n            if (\r\n              chapterProgress &&\r\n              chapterProgress.includes(\r\n                chapterContainingLastCompletedLesson.chapterNumber\r\n              )\r\n            ) {\r\n              const nextLesson = nextChapter.lessons[0];\r\n              unlockedLessons.push(nextLesson.lessonNumber);\r\n            }\r\n          }\r\n        } else {\r\n          // Add completed lessons and next lesson in the same chapter\r\n          const nextLesson = lessons[lastCompletedLessonIndex + 1];\r\n          unlockedLessons.push(...lessonProgress, nextLesson.lessonNumber);\r\n        }\r\n      }\r\n    }\r\n\r\n    return unlockedLessons;\r\n  }\r\n\r\n  // Generate the third dataset\r\n  const unlockedLessons = generateunlockedLessons(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    chapterProgressData,\r\n    courseTitleUserIsOn\r\n  );\r\n\r\n  // Log the result\r\n  console.log(unlockedLessons);\r\n\r\n  function generateUnlockedQuizzes(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    courseTitleUserIsOn\r\n  ) {\r\n    const unlockedQuizzes = [];\r\n\r\n    const userProgress =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n    if (userProgress) {\r\n      simplifiedChaptersLessonsData &&\r\n        simplifiedChaptersLessonsData.forEach((chapter) => {\r\n          const lastLessonNumber =\r\n            chapter.lessons[chapter.lessons.length - 1].lessonNumber;\r\n          const isLastLessonCompleted =\r\n            userProgress.lessonProgress.includes(lastLessonNumber);\r\n          if (isLastLessonCompleted) {\r\n            unlockedQuizzes.push(chapter.chapterNumber);\r\n          }\r\n        });\r\n    }\r\n\r\n    return unlockedQuizzes;\r\n  }\r\n\r\n  function generateUnlockedChapters(\r\n    simplifiedChaptersLessonsData,\r\n    unlockedLessons\r\n  ) {\r\n    const unlockedChapters = [];\r\n\r\n    simplifiedChaptersLessonsData &&\r\n      simplifiedChaptersLessonsData.forEach((chapter) => {\r\n        const hasUnlockedLesson = chapter.lessons.some((lesson) =>\r\n          unlockedLessons.includes(lesson.lessonNumber)\r\n        );\r\n        if (hasUnlockedLesson) {\r\n          unlockedChapters.push(chapter.chapterNumber);\r\n        }\r\n      });\r\n\r\n    return unlockedChapters;\r\n  }\r\n\r\n  // Generate the arrays\r\n  const unlockedQuizzes = generateUnlockedQuizzes(\r\n    progressData,\r\n    simplifiedChaptersLessonsData,\r\n    courseTitleUserIsOn\r\n  );\r\n  const unlockedChapters = generateUnlockedChapters(\r\n    simplifiedChaptersLessonsData,\r\n    unlockedLessons\r\n  );\r\n\r\n  // Log the results\r\n  console.log(unlockedQuizzes);\r\n  console.log(unlockedChapters);\r\n\r\n  //Find lastunlockedlesson\r\n\r\n  const lastUnlockedLessonNumber = unlockedLessons[unlockedLessons.length - 1];\r\n\r\n  function getLessonTitle(lessonNumber) {\r\n    if (simplifiedChaptersLessonsData) {\r\n      for (let chapter of simplifiedChaptersLessonsData) {\r\n        for (let lesson of chapter.lessons) {\r\n          if (lesson.lessonNumber === lessonNumber) {\r\n            return lesson.lessonTitle;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return null; // Return null if lessonNumber is not found\r\n  }\r\n\r\n  const lastUnlockedLessonTitle = getLessonTitle(lastUnlockedLessonNumber);\r\n  // Example usage\r\n  console.log(lastUnlockedLessonNumber, lastUnlockedLessonTitle);\r\n\r\n  //How can I determine true or false that the last completed lesson in progressData, is the last lesson of chapter?\r\n\r\n  // Step 1: Find the lessonProgress array based on the course the user is on\r\n  const currentCourseProgress =\r\n    progressData &&\r\n    progressData.find(\r\n      (progress) => progress.courseProgress === courseTitleUserIsOn\r\n    );\r\n\r\n  // Step 2: Get the last completed lesson from the lessonProgress array\r\n  const lastCompletedLesson =\r\n    currentCourseProgress && currentCourseProgress.lessonProgress.slice(-1)[0];\r\n\r\n  // Step 3: Find the corresponding chapter in simplifiedChaptersLessonsData\r\n  const chapterOfLastCompletedLesson =\r\n    simplifiedChaptersLessonsData &&\r\n    simplifiedChaptersLessonsData.find((chapter) =>\r\n      chapter.lessons.some(\r\n        (lesson) => lesson.lessonNumber === lastCompletedLesson\r\n      )\r\n    );\r\n\r\n  // Step 4: Check if the last completed lesson is the last lesson of the chapter\r\n  const isLastLessonOfChapter =\r\n    chapterOfLastCompletedLesson &&\r\n    chapterOfLastCompletedLesson.lessons.slice(-1)[0].lessonNumber ===\r\n      lastCompletedLesson;\r\n\r\n  console.log(isLastLessonOfChapter);\r\n\r\n  //Similary could you also determine true or false that the last unlocked lesson in unlockedLessons, is the first lesson of chapter?\r\n\r\n  // Step 1: Get the last unlocked lesson from the unlockedLessons array\r\n  const lastUnlockedLesson = unlockedLessons.slice(-1)[0];\r\n\r\n  // Step 2: Find the corresponding chapter in simplifiedChaptersLessonsData\r\n  const chapterOfLastUnlockedLesson =\r\n    simplifiedChaptersLessonsData &&\r\n    simplifiedChaptersLessonsData.find((chapter) =>\r\n      chapter.lessons.some(\r\n        (lesson) => lesson.lessonNumber === lastUnlockedLesson\r\n      )\r\n    );\r\n\r\n  // Step 3: Check if the last unlocked lesson is the first lesson of the chapter\r\n  const isFirstLessonOfChapter =\r\n    chapterOfLastUnlockedLesson &&\r\n    chapterOfLastUnlockedLesson.lessons[0].lessonNumber === lastUnlockedLesson;\r\n\r\n  console.log(isFirstLessonOfChapter);\r\n\r\n  // Check if no lesson progress\r\n\r\n  // Find the lessonProgress array based on the course the user is on\r\n\r\n  // Check if lessonProgress is empty\r\n  const isLessonProgressEmpty =\r\n    currentCourseProgress && currentCourseProgress.lessonProgress.length === 0;\r\n  console.log(isLessonProgressEmpty);\r\n\r\n  return courseDetails ? (\r\n    <div>\r\n      <SidenavLandingPage\r\n        progressData={progressData}\r\n        chapterProgressData={chapterProgressData}\r\n        simplifiedChaptersLessonsData={simplifiedChaptersLessonsData}\r\n        unlockedLessons={unlockedLessons}\r\n        unlockedChapters={unlockedChapters}\r\n        unlockedQuizzes={unlockedQuizzes}\r\n        isLastLessonOfChapter={isLastLessonOfChapter}\r\n        isFirstLessonOfChapter={isFirstLessonOfChapter}\r\n        chapterOfLastCompletedLesson={chapterOfLastCompletedLesson}\r\n        lastUnlockedLessonNumber={lastUnlockedLessonNumber}\r\n        lastUnlockedLessonTitle={lastUnlockedLessonTitle}\r\n        isLessonProgressEmpty={isLessonProgressEmpty}\r\n      ></SidenavLandingPage>\r\n\r\n      {/* <img\r\n        style={{ opacity: 0.2 }}\r\n        className=\"courseImage\"\r\n        src=\"https://www.fluentu.com/blog/arabic/wp-content/uploads/sites/21/2016/09/arabic-apps-1.png\"\r\n        alt=\"\"\r\n      ></img> */}\r\n    </div>\r\n  ) : (\r\n    <div>Loading</div>\r\n  );\r\n}\r\n\r\nexport default CourseLandingPage;\r\n", "// LoginPage.js\r\nimport React from \"react\";\r\nimport { GoogleOAuthProvider, useGoogleLogin } from \"@react-oauth/google\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport \"./Login.css\";\r\n\r\nconst LoginPage = ({ setIsLoggedIn, setTokenExpiration }) => {\r\n  // Function to handle login\r\n  const handleLogin = () => {\r\n    // Perform login logic\r\n    // Set isLoggedIn to true and set token expiration time\r\n    setIsLoggedIn(true);\r\n\r\n    // Set expiration time to 30 minutes from now\r\n    // const expirationTime = new Date();\r\n    // expirationTime.setTime(expirationTime.getTime() + (180 * 60 * 1000)); // 30 minutes in milliseconds\r\n    // setTokenExpiration(expirationTime);\r\n\r\n    // Set expiration time to infinity\r\n    const expirationTime = new Date(\"9999-12-31T23:59:59\"); // Any date far in the future\r\n    setTokenExpiration(expirationTime);\r\n\r\n    // Store isLoggedIn and expirationTime in localStorage\r\n    localStorage.setItem(\"isLoggedIn\", true);\r\n    localStorage.setItem(\"tokenExpiration\", expirationTime.getTime()); // Store as timestamp\r\n  };\r\n\r\n  const CustomButton = () => {\r\n    const Login = useGoogleLogin({\r\n      onSuccess: async (tokenResponse) => {\r\n        console.log(tokenResponse);\r\n        // fetching userinfo can be done on the client or the server\r\n        const userObject = await axios\r\n          .get(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\r\n            headers: { Authorization: `Bearer ${tokenResponse.access_token}` },\r\n          })\r\n          .then((res) => res.data);\r\n        handleLogin();\r\n        console.log(userObject);\r\n\r\n        // Get the current date and time in the specified format\r\n        const formattedDate = moment().format(\"DD-MM-YYYY hh:mm:ss\");\r\n        console.log(formattedDate);\r\n\r\n        // Combine user data and formatted date into a single object\r\n        const requestData = {\r\n          userEmail: userObject.email,\r\n          userFamilyName: userObject.family_name,\r\n          userGivenName: userObject.given_name,\r\n          userPicture: userObject.picture,\r\n          loginDateTime: formattedDate,\r\n        };\r\n        console.log(requestData);\r\n\r\n        // Store userEmail in localStorage\r\n        localStorage.setItem(\"userEmail\", userObject.email);\r\n        console.log(localStorage.getItem(\"userEmail\"));\r\n\r\n        fetch(\"/insertLoginRecord\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(requestData),\r\n        })\r\n          .then((response) => {\r\n            if (response.ok) {\r\n              return response.json(); // If you expect a response from the server\r\n            }\r\n            throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then((data) => {\r\n            console.log(data); // Log response from the server\r\n          })\r\n          .catch((error) => {\r\n            if (\r\n              error instanceof SyntaxError &&\r\n              error.message.includes(\"Unexpected token 'U'\")\r\n            ) {\r\n              // Ignore the SyntaxError caused by unexpected token 'U'\r\n              return;\r\n            }\r\n            console.error(\"Error from fetch:\", error); // Log other errors\r\n          });\r\n      },\r\n      // flow: 'implicit', // implicit is the default\r\n    });\r\n\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          Login();\r\n        }}\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          padding: \"6px 12px\",\r\n          borderRadius: \"300px\", // Adjust the border radius to make it pill-shaped\r\n          backgroundColor: \"white\", // Google's blue color\r\n          color: \"black\",\r\n          fontSize: \"2.5vh\",\r\n          cursor: \"pointer\",\r\n          width: \"80%\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/CanvaGeneratedImages/GoogleLogo.png\"\r\n            alt=\"Google logo\"\r\n            style={{ width: \"10%\", height: \"auto\", marginRight: \"50px\" }} // Left align Google logo\r\n          />\r\n          <div>Continue with Google</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div className=\"LoginMessageHeader\">Time to Log In!</div>\r\n        <div className=\"LoginMessage\">\r\n          {\" \"}\r\n          Save your progress,\r\n          <br /> sync across devices\r\n          <br /> and more\r\n        </div>\r\n      </div>\r\n      <GoogleOAuthProvider clientId=\"910323986833-fnj0aj92c8l42bl0gdv0ogaejuc2fdfs.apps.googleusercontent.com\">\r\n        <CustomButton />\r\n      </GoogleOAuthProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n", "import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./LogoutMessage.css\";\r\n\r\nconst LogoutMessage = ({ setIsLoggedIn }) => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // Redirect to the login page after 3 seconds\r\n    const timeoutId = setTimeout(() => {\r\n      // Push the login route to navigate to it\r\n      history.push('/');\r\n      // Set isLoggedIn to false after redirecting to the login page\r\n      setIsLoggedIn(false);\r\n      // Clear all items from local storage\r\n      localStorage.clear();\r\n      // Refresh the page\r\n      // window.location.reload();\r\n    }, 2000);\r\n\r\n    // Clean up the timeout when the component unmounts\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [history, setIsLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"message-container\">\r\n      <h1>You have logged out successfully! Redirecting you to the Login Page again...</h1>\r\n    </div>\r\n  );  \r\n};\r\n\r\nexport default LogoutMessage;\r\n", "import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport ButtonH2 from \"./Buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { allExampleData } from \"./TopicData\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport \"./sidebar/Sidebar.css\";\r\nimport \"./Lesson.css\";\r\nimport ConfettiExplosion from \"react-confetti-explosion\";\r\nimport { motion } from \"framer-motion\";\r\nimport SideNavRowLesson from \"./sidebar/SideNavRowLesson\";\r\nimport SideNavRowQuiz from \"./sidebar/SideNavRowQuiz\";\r\nimport axios from \"axios\";\r\nimport ChapterProgressBar from \"./ChapterProgressBar\";\r\n\r\nconst ExampleBox = styled.div`\r\n  /* box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2); */\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  /* background: #252525; */\r\n  /* margin-top: 80px; */\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst ExampleQuestion = styled.div`\r\n  /* font-size: 17px; */\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #a678de;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ExampleAnswer = styled(motion.div)`\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  font-family: Quicksand;\r\n  /* border-radius: 15px; */\r\n  /* padding: 10px; */\r\n  color: #252525;\r\n  display: flex;\r\n  background: ${(props) =>\r\n    props.answerClicked == props.answer ? props.answerColor : \"#D2CFE6\"};\r\n  /* margin: 20px; */\r\n  transition: transform 300ms;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst AnswerExplanation = styled.div`\r\n  /* font-size: 2vh; */\r\n  display: ${(props) =>\r\n    props.answerClicked == props.answer ? \"flex\" : \"none\"};\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst LessonExample = (props) => {\r\n  console.log(props);\r\n  //Obtain Example Data from back end\r\n  const {\r\n    courseTitleUserIsOn,\r\n    entryStore,\r\n    isDarkMode,\r\n    subContainer,\r\n\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n\r\n    setEntryStore,\r\n\r\n    setIsDarkMode,\r\n  } = useAmazonContext();\r\n\r\n  console.log(entryStore);\r\n\r\n  const [answerColor, setAnswerColor] = useState(\"#e8e2ef\");\r\n  const [answerClicked, setAnswerClicked] = useState(\"NoAnswer\");\r\n  const [answerClickedToPractice, setAnswerClickedToPractice] = useState(false);\r\n  const [progressPosted, setProgressPosted] = useState(false);\r\n  const [progressData, setProgressData] = useState(null); //Put it as state to ensure new data after fetch is sent to chapterProgressBar\r\n\r\n  const nextLessonBoxRef = useRef(null);\r\n\r\n  // State to hold the shuffled answers\r\n  const [answeredCorrectly, setAnsweredCorrectly] = useState(false);\r\n  const [selectedExample, setSelectedExample] = useState({});\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n  const isMobile = window.innerWidth <= 768; // You can adjust the breakpoint (768) as needed\r\n\r\n  // Randomiser function to choose an example for this Lesson\r\n\r\n  const chooseRandomExample = (sectionNumber) => {\r\n    let allSectionExamples =\r\n      props.exampleDatafromBackEnd.length !== 0 &&\r\n      props.exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n    const random = Math.floor(Math.random() * allSectionExamples.length);\r\n    let selectedExample = allSectionExamples[random];\r\n    return selectedExample;\r\n  };\r\n\r\n  const checkAnswer = async (isCorrect, answer) => {\r\n    setAnswerClicked(answer);\r\n    setAnswerClickedToPractice(true);\r\n\r\n    if (isCorrect === true && !progressPosted) {\r\n      setAnswerColor(\"#DAF7A6\");\r\n      setAnsweredCorrectly(true);\r\n      // Trigger confetti burst\r\n      // Scroll distance based on device type\r\n      const scrollDistance = isMobile ? 1000 : 1000;\r\n      // Scroll smoothly by 600 pixels after 300ms after answer is correct\r\n      setTimeout(() => {\r\n        window.scrollBy({\r\n          top: scrollDistance,\r\n          behavior: \"smooth\",\r\n        });\r\n      }, 300);\r\n\r\n      // Send User progress on lessons to the backend only if user completes it (lessons)\r\n      // Retrieve userEmail from localStorage\r\n      const userEmail = localStorage.getItem(\"userEmail\");\r\n      console.log(userEmail);\r\n      console.log(courseTitleUserIsOn);\r\n      console.log(props.currentSectionNumber);\r\n      // Prepare data to be sent to the backend\r\n      const progressData = {\r\n        userEmail: userEmail,\r\n        progress: [\r\n          {\r\n            courseProgress: courseTitleUserIsOn,\r\n            lessonProgress: [props.currentSectionNumber],\r\n          },\r\n        ],\r\n      };\r\n\r\n      try {\r\n        // Send progress data to the backend\r\n        await axios.post(\"/insertProgressRecord\", progressData);\r\n        console.log(\"Progress data sent successfully!\");\r\n        setProgressPosted(true); // Update state to indicate that data has been posted\r\n      } catch (error) {\r\n        console.error(\"Error sending progress data:\", error);\r\n      }\r\n    } else {\r\n      setAnswerColor(\"#ff726f\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const userEmail = localStorage.getItem(\"userEmail\");\r\n    if (!userEmail) {\r\n      console.error(\"User email not found in local storage\");\r\n      return;\r\n    }\r\n\r\n    const fetchProgress = async () => {\r\n      try {\r\n        const response = await axios.get(\"/fetchProgressRecord\", {\r\n          params: {\r\n            userEmail: userEmail,\r\n          },\r\n        });\r\n        setProgressData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching progress data:\", error);\r\n      }\r\n    };\r\n\r\n    if (progressPosted) {\r\n      fetchProgress(); // Fetch data only if progress has been posted\r\n    }\r\n  }, [progressPosted]);\r\n\r\n  console.log(progressData);\r\n\r\n  // Utility function to shuffle an array\r\n  function shuffleArray(array) {\r\n    const shuffledArray = [...array];\r\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffledArray[i], shuffledArray[j]] = [\r\n        shuffledArray[j],\r\n        shuffledArray[i],\r\n      ];\r\n    }\r\n    return shuffledArray;\r\n  }\r\n  useEffect(() => {\r\n    var selectedExampleOne = chooseRandomExample(props.lessonNumber);\r\n    setSelectedExample(selectedExampleOne);\r\n\r\n    // Shuffle the answers when the component mounts\r\n    setShuffledAnswers(shuffleArray(selectedExampleOne.answers));\r\n  }, []);\r\n\r\n  return (\r\n    <ExampleBox className=\"LessonExampleBox\">\r\n      <ExampleQuestion>\r\n        {selectedExample && selectedExample.question}\r\n      </ExampleQuestion>\r\n      {shuffledAnswers.map((answerItem) => {\r\n        return (\r\n          <>\r\n            <ExampleAnswer\r\n              className=\"LessonExampleAnswerBox\"\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.8 }}\r\n              transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n              onClick={() =>\r\n                checkAnswer(answerItem.isCorrect, answerItem.answer)\r\n              }\r\n              answerColor={answerColor}\r\n              answer={answerItem.answer}\r\n              answerClicked={answerClicked}\r\n            >\r\n              <div className=\"LessonExampleAnswer\">{answerItem.answer}</div>\r\n            </ExampleAnswer>\r\n            {\r\n              <AnswerExplanation\r\n                answerClicked={answerClicked}\r\n                answer={answerItem.answer}\r\n                answerColor={answerColor}\r\n              >\r\n                {answerItem.isCorrect == false ? (\r\n                  <div\r\n                    className={`LessonExampleAnswerExplanationContainer ${\r\n                      isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                    }`}\r\n                  >\r\n                    <i class=\"wrongCross fa-solid fa-xmark\"></i>\r\n                    <p\r\n                      style={{\r\n                        display: \"inline\",\r\n                      }}\r\n                      className=\"LessonExampleAnswerExplanation\"\r\n                    >\r\n                      {answerItem.explanation}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <i class=\"correctCheckMark fa-solid fa-check\"></i>\r\n                    {answeredCorrectly && (\r\n                      <ConfettiExplosion\r\n                        autoStart={true}\r\n                        duration={5000}\r\n                        particleCount={100}\r\n                        spread={360}\r\n                        origin={{ x: 0.8, y: 0.5 }}\r\n                        force={0.8}\r\n                        width={1600}\r\n                      />\r\n                    )}\r\n                    <p\r\n                      className={`LessonExampleAnswerExplanation ${\r\n                        isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                      }`}\r\n                    >\r\n                      Correct!\r\n                    </p>\r\n                    {answeredCorrectly && (\r\n                      <ConfettiExplosion\r\n                        autoStart={true}\r\n                        duration={5000}\r\n                        particleCount={100}\r\n                        spread={360}\r\n                        origin={{ x: 0.8, y: 0.5 }}\r\n                        force={0.8}\r\n                        width={1600}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </AnswerExplanation>\r\n            }\r\n          </>\r\n        );\r\n      })}\r\n      {/* Render the \"Next Lesson\" button if answered correctly */}\r\n      {answeredCorrectly && props.nextLessonNumber == false && (\r\n        <motion.div\r\n          ref={nextLessonBoxRef}\r\n          className=\"LessonExampleNextLessonBox\"\r\n          initial={{ opacity: 0, scale: 0.5 }}\r\n          animate={{ opacity: 1, scale: [1, 1.03, 1] }}\r\n          transition={{\r\n            duration: 0.8,\r\n            delay: 0.3,\r\n            ease: [0, 0.71, 0.2, 1.01],\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <ChapterProgressBar\r\n            lessonNumber={props.currentSectionNumber}\r\n            courseTitleUserIsOn={courseTitleUserIsOn}\r\n            progressData={progressData}\r\n          ></ChapterProgressBar>\r\n          <div style={{}} className=\"LessonTitleContainer\">\r\n            <span className=\"LessonNumber\">End Of Chapter</span>{\" \"}\r\n          </div>\r\n          <Link to={`/${courseTitleUserIsOn}/quiz/${props.chapterNumber}`}>\r\n            <motion.div\r\n              whileTap={{ scale: 0.8 }}\r\n              transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n            >\r\n              <SideNavRowQuiz\r\n                number={props.chapterNumber}\r\n                title={props.chapterTitle}\r\n                width=\"90%\"\r\n                marginLeft=\"5%\"\r\n              ></SideNavRowQuiz>\r\n            </motion.div>\r\n          </Link>\r\n        </motion.div>\r\n      )}{\" \"}\r\n      {answeredCorrectly && props.nextLessonNumber !== false && (\r\n        <motion.div\r\n          ref={nextLessonBoxRef}\r\n          className=\"LessonExampleNextLessonBox\"\r\n          initial={{ opacity: 0, scale: 0.5 }}\r\n          animate={{ opacity: 1, scale: [1, 1.03, 1] }}\r\n          transition={{\r\n            duration: 0.8,\r\n            delay: 0.3,\r\n            ease: [0, 0.71, 0.2, 1.01],\r\n          }}\r\n        >\r\n          <ChapterProgressBar\r\n            lessonNumber={props.currentSectionNumber}\r\n            courseTitleUserIsOn={courseTitleUserIsOn}\r\n            progressData={progressData}\r\n          ></ChapterProgressBar>\r\n          <div style={{}} className=\"LessonTitleContainer\">\r\n            <span className=\"LessonNumber\">Next Lesson</span>{\" \"}\r\n          </div>\r\n          <Link to={`/${courseTitleUserIsOn}/lesson/${props.nextLessonNumber}`}>\r\n            <motion.div\r\n              whileTap={{ scale: 0.8 }}\r\n              transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n            >\r\n              <SideNavRowLesson\r\n                backgroundColor=\"white\"\r\n                number={props.nextLessonNumber}\r\n                title={props.nextLessonTitle}\r\n                chapter={props.chapterTitle}\r\n                width=\"90%\"\r\n                marginLeft=\"5%\"\r\n                borderRadius=\"14% 2% 2% 14% / 50% 10% 10% 50%\"\r\n              ></SideNavRowLesson>\r\n            </motion.div>\r\n          </Link>\r\n        </motion.div>\r\n      )}\r\n    </ExampleBox>\r\n  );\r\n};\r\n\r\nexport default LessonExample;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport Lottie from \"lottie-react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction LottieAnimation(props) {\r\n  const [animationData, setAnimationData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Replace with the URL of your S3 object\r\n    const animationUrl = props.lottieFile;\r\n\r\n    fetch(animationUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => setAnimationData(data))\r\n      .catch((error) => console.error(\"Error fetching animation:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div\r\n      className={props.className}\r\n      style={props.style}\r\n      initial={props.initial}\r\n      animate={props.animate}\r\n      exit={props.exit}\r\n      transition={props.transition}\r\n    >\r\n      {animationData && (\r\n        <Lottie\r\n          animationData={animationData}\r\n          speed={props.speed}\r\n          loop={props.loop}\r\n        />\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default LottieAnimation;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport jsonData from \"./sectionDescription.json\";\r\nimport \"./Lesson.css\";\r\nimport Example from \"./Example\";\r\n// import exampleDatafromBackEnd from \"./example.json\";\r\nimport LessonExample from \"./LessonExample\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport LessonMainSideNav from \"./sidebar/LessonMainSideNav\";\r\nimport LottieAnimation from \"./LottieAnimation\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport const Lesson = (props) => {\r\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(-1);\r\n  const [selectedLesson, setSelectedLesson] = useState({});\r\n  const [isButtonVisible, setIsButtonVisible] = useState(true);\r\n  const [isShowQuiz, setIsShowQuiz] = useState(false);\r\n  const [completedLessons, setCompletedLessons] = useState(null);\r\n  // Had previously declared progress data here and not in amazon context because whenever\r\n  // the page was renredning the new progress data would be fetch and it would mess up lessonComplete logic used to detemrine whether lesson should fully render\r\n\r\n  let {\r\n    courseDetails,\r\n    setCourseDetails,\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    entryStore,\r\n    isDarkMode,\r\n    subContainerEntries,\r\n    setSubContainerEntries,\r\n    subContainer,\r\n    setSubContainer,\r\n    navOpen,\r\n    setNavOpen,\r\n    progressData,\r\n  } = useAmazonContext();\r\n\r\n  //Logic to open the Chapter Lessons Menu subentry (on the subcontainer in the side bar) related to the lesson the user is on\r\n\r\n  console.log(entryStore);\r\n  useEffect(() => {\r\n    let nextSectionNumber = null;\r\n    let nextSectionTitle = null;\r\n    let foundCurrentSection = false;\r\n    // Example usage:\r\n    const currentSectionNumber = selectedLesson.sectionNumber;\r\n\r\n    if (entryStore) {\r\n      //Needed to wait for entryStore to load\r\n      // Iterate through the entryStore data\r\n      for (const topic of entryStore) {\r\n        for (const entry of topic.entries) {\r\n          for (const subEntry of entry.entries) {\r\n            for (const section of subEntry.entries) {\r\n              // Check if the section number matches the currentSectionNumber\r\n              if (section.sectionNumber === currentSectionNumber) {\r\n                foundCurrentSection = true;\r\n\r\n                setSubContainerEntries(entry.entries);\r\n                setSubContainer(true);\r\n                break;\r\n              }\r\n            }\r\n            if (foundCurrentSection) break;\r\n          }\r\n          if (foundCurrentSection) break;\r\n        }\r\n        if (foundCurrentSection) break;\r\n      }\r\n    }\r\n  }, [navOpen, courseDetails, selectedLesson]);\r\n\r\n  //End\r\n\r\n  // Start: Function to find the next section number and title\r\n  function findNextSection(currentSectionNumber) {\r\n    let nextSectionNumber = null;\r\n    let nextSectionTitle = null;\r\n    let foundCurrentSection = false;\r\n\r\n    if (entryStore) {\r\n      //Needed to wait for entryStore to load\r\n      // Iterate through the entryStore data\r\n      for (const topic of entryStore) {\r\n        for (const entry of topic.entries) {\r\n          for (const subEntry of entry.entries) {\r\n            for (const section of subEntry.entries) {\r\n              // Check if the section number matches the currentSectionNumber\r\n              if (section.sectionNumber === currentSectionNumber) {\r\n                foundCurrentSection = true;\r\n\r\n                // Find the index of the current section in its parent entry\r\n                const currentIndex = subEntry.entries.findIndex(\r\n                  (item) => item.sectionNumber === currentSectionNumber\r\n                );\r\n\r\n                // If the current section is not the last one in the entry\r\n                if (currentIndex !== subEntry.entries.length - 1) {\r\n                  // Get the next section's data\r\n                  const nextSection = subEntry.entries[currentIndex + 1];\r\n                  nextSectionNumber = nextSection.sectionNumber;\r\n                  nextSectionTitle = nextSection.title;\r\n                }\r\n                break;\r\n              }\r\n            }\r\n            if (foundCurrentSection) break;\r\n          }\r\n          if (foundCurrentSection) break;\r\n        }\r\n        if (foundCurrentSection) break;\r\n      }\r\n    }\r\n\r\n    if (nextSectionNumber === null) {\r\n      return false;\r\n    }\r\n\r\n    return {\r\n      nextSectionNumber,\r\n      nextSectionTitle,\r\n    };\r\n  }\r\n\r\n  // Example usage:\r\n  const currentSectionNumber = selectedLesson.sectionNumber; // Assuming this is the last section\r\n  const result = findNextSection(currentSectionNumber);\r\n\r\n  var nextLessonNumber = \"\";\r\n  var nextLessonTitle = \"\";\r\n\r\n  if (result === false) {\r\n    console.log(\"No next section.\");\r\n    nextLessonNumber = false;\r\n    nextLessonTitle = false;\r\n  } else {\r\n    console.log(\"Next Section Number:\", result.nextSectionNumber);\r\n    console.log(\"Next Section Title:\", result.nextSectionTitle);\r\n    nextLessonNumber = result.nextSectionNumber;\r\n    nextLessonTitle = result.nextSectionTitle;\r\n  }\r\n  console.log(nextLessonNumber, nextLessonTitle);\r\n\r\n  //End: Function to find the next section number and title\r\n\r\n  //Finding topic number and topic title for current section\r\n\r\n  function findChapterInfo(sectionNumber, entryStore) {\r\n    if (entryStore) {\r\n      for (const topic of entryStore) {\r\n        for (const entry of topic.entries) {\r\n          for (const chapter of entry.entries) {\r\n            for (const section of chapter.entries) {\r\n              if (section.sectionNumber === sectionNumber) {\r\n                return {\r\n                  chapterTitle: chapter.title,\r\n                  chapterNumber: chapter.topicNumber,\r\n                };\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Return null or handle not found case as needed\r\n    return null;\r\n  }\r\n\r\n  const chapterInfo = findChapterInfo(selectedLesson.sectionNumber, entryStore);\r\n\r\n  var chapterTitle = \"\";\r\n  var chapterNumber = \"\";\r\n  if (chapterInfo) {\r\n    console.log(\"Chapter Title:\", chapterInfo.chapterTitle);\r\n    console.log(\"Chapter Number:\", chapterInfo.chapterNumber);\r\n    chapterTitle = chapterInfo.chapterTitle;\r\n    chapterNumber = chapterInfo.chapterNumber;\r\n  } else {\r\n    console.log(\"Section not found.\");\r\n  }\r\n\r\n  console.log(courseDetails);\r\n  console.log(entryStore);\r\n  useEffect(() => {\r\n    setCourseTitleUserIsOn(props.match.params.courseTitle);\r\n  }, []);\r\n  console.log(courseTitleUserIsOn);\r\n  console.log(props.match.params.courseTitle);\r\n  //set the course Details\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      console.log(response.data);\r\n      let allCourses = response.data;\r\n      let courseChosen = allCourses.find(\r\n        (o) =>\r\n          o.courseTitle.replace(/\\s/g, \"\") === props.match.params.courseTitle\r\n      );\r\n      setCourseDetails(courseChosen);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(courseDetails);\r\n\r\n  console.log(courseDetails);\r\n  console.log(props.match.params.courseTitle);\r\n\r\n  //Lesson Data from BackEnd\r\n\r\n  console.log(props.match);\r\n  console.log(props.match.params.lessonNumber);\r\n\r\n  let lessonNumberFromSideBar = props.match.params.lessonNumber;\r\n  console.log(lessonNumberFromSideBar);\r\n  console.log(courseDetails.courseTopicsCollectionName);\r\n  console.log(courseDetails.courseTopicsModelName);\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/${props.match.params.courseTitle}/lessonRESTCAll/${lessonNumberFromSideBar}?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      //changefordev\r\n      setSelectedLesson(response.data);\r\n      // setSelectedLesson(jsonData);\r\n      // console.log(response.data);\r\n    });\r\n  }, [lessonNumberFromSideBar, courseDetails]);\r\n\r\n  console.log(\r\n    `/api/${props.match.params.courseTitle}/lessonRESTCAll/${lessonNumberFromSideBar}?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n  );\r\n  console.log(selectedLesson);\r\n\r\n  // Find out whether the lesson is completed\r\n  useEffect(() => {\r\n    const courseProgressData =\r\n      progressData &&\r\n      progressData.find(\r\n        (progress) => progress.courseProgress === courseTitleUserIsOn\r\n      );\r\n\r\n    console.log(courseProgressData);\r\n\r\n    // Get the lessons the user has completed\r\n\r\n    setCompletedLessons(new Set(courseProgressData?.lessonProgress || []));\r\n    console.log(completedLessons);\r\n  }, [selectedLesson]);\r\n\r\n  console.log(progressData);\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  //End\r\n\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/examplesData?collectionName=${courseDetails.courseExamplesCollectionName}&modelName=${courseDetails.courseExamplesModelName}`\r\n    ).then((response) => {\r\n      setExampleDatafromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [lessonNumberFromSideBar, courseDetails]);\r\n\r\n  // let { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  const handleNextSection = () => {\r\n    // Increment the section index\r\n    setCurrentSectionIndex((prevIndex) => prevIndex + 1);\r\n  };\r\n\r\n  const handleShowLessonExample = () => {\r\n    setIsShowQuiz(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isShowQuiz) {\r\n      // Scroll to the LessonExample component when isShowQuiz becomes true\r\n      const lessonExampleElement = document.getElementById(\"lessonExample\");\r\n      if (lessonExampleElement) {\r\n        lessonExampleElement.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    }\r\n  }, [isShowQuiz]);\r\n\r\n  const isMobile = window.innerWidth <= 768; // You can adjust the breakpoint (768) as needed\r\n\r\n  useEffect(() => {\r\n    if (currentSectionIndex > 0) {\r\n      const nextSection = document.getElementById(\r\n        `section-${currentSectionIndex - 1}`\r\n      );\r\n      if (nextSection) {\r\n        nextSection.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    }\r\n\r\n    //Logic when quiz rendered autimatically\r\n\r\n    // // Scroll to the next section when currentSectionIndex changes\r\n    // if (\r\n    //   selectedLesson.lessonAnimation &&\r\n    //   currentSectionIndex == selectedLesson.lessonAnimation.length - 1\r\n    // ) {\r\n    //   // Scroll distance based on device type\r\n    //   const scrollDistance = isMobile ? 1000 : 300;\r\n    //   // Scroll smoothly by 600 pixels after 300ms\r\n    //   setTimeout(() => {\r\n    //     window.scrollBy({\r\n    //       top: scrollDistance,\r\n    //       behavior: \"smooth\",\r\n    //     });\r\n    //   }, 1500); // I set this number in seconds equal to the delay in lesson example animation\r\n    // } else if (currentSectionIndex > 0) {\r\n    //   const nextSection = document.getElementById(\r\n    //     `section-${currentSectionIndex - 1}`\r\n    //   );\r\n    //   if (nextSection) {\r\n    //     nextSection.scrollIntoView({ behavior: \"smooth\" });\r\n    //   }\r\n    // }\r\n  }, [currentSectionIndex]);\r\n\r\n  //hide tap to next for 10 seconds everytime a section loads:\r\n  useEffect(() => {\r\n    // Hide the button temporarily\r\n    setIsButtonVisible(false);\r\n\r\n    // Show the button again after 10 seconds\r\n    const timer = setTimeout(() => {\r\n      setIsButtonVisible(true);\r\n    }, 5000);\r\n\r\n    // Cleanup the timer if the component unmounts or currentSectionIndex changes\r\n    return () => clearTimeout(timer);\r\n  }, [currentSectionIndex]);\r\n  //End\r\n\r\n  //Reset current index when lesson changes:\r\n  useEffect(() => {\r\n    // Reset currentSectionIndex to 0 when lessonNumberFromSideBar or selectedLesson changes\r\n    setCurrentSectionIndex(-1);\r\n    setIsShowQuiz(false);\r\n  }, [lessonNumberFromSideBar, selectedLesson]);\r\n\r\n  // Randomiser function to choose an example for this Lesson\r\n\r\n  // const chooseRandomExample = (sectionNumber) => {\r\n  //   let allSectionExamples =\r\n  //     exampleDatafromBackEnd.length !== 0 &&\r\n  //     exampleDatafromBackEnd.filter(\r\n  //       //list of ALL examples for a particular section in the database\r\n  //       (example) => example.sectionNumber == sectionNumber\r\n  //     );\r\n  //   const random = Math.floor(Math.random() * allSectionExamples.length);\r\n  //   let selectedExample = allSectionExamples[random];\r\n  //   return selectedExample;\r\n  // };\r\n\r\n  console.log(currentSectionIndex);\r\n\r\n  if (completedLessons && completedLessons.has(selectedLesson.sectionNumber)) {\r\n    return selectedLesson === \"undefined\" ||\r\n      selectedLesson === null ||\r\n      selectedLesson.length === 0 ? ( //Needed to add condition because without it, component was rendering and not waiting on selectedTopic from useEffect\r\n      <div>Loading</div>\r\n    ) : (\r\n      <div>\r\n        <LessonMainSideNav></LessonMainSideNav>\r\n        <div className=\"Lesson\">\r\n          <div className=\"LessonContainer\">\r\n            <div style={{}} className=\"LessonTitleContainer\">\r\n              <span className=\"LessonNumber\">\r\n                Lesson {selectedLesson.sectionNumber}\r\n              </span>{\" \"}\r\n              <br />\r\n              <span className=\"LessonTitle\">{selectedLesson.sectionTitle}</span>\r\n            </div>\r\n\r\n            {selectedLesson.lessonAnimation &&\r\n              selectedLesson.lessonAnimation.map((section, index) =>\r\n                // Conditionally render sections based on the index\r\n\r\n                section.className == \"multiSection\" ? (\r\n                  <motion.div\r\n                    className={section.className}\r\n                    style={section.style}\r\n                    key={index}\r\n                  >\r\n                    {section.subSections.map((subSection, subSectionIndex) => (\r\n                      <motion.div\r\n                        className={subSection.className}\r\n                        style={subSection.style}\r\n                        key={subSectionIndex}\r\n                      >\r\n                        {subSection.miniSections.map(\r\n                          (miniSection, miniSectionIndex) =>\r\n                            miniSection.className === \"LottieAnimation\" ? (\r\n                              <LottieAnimation\r\n                                key={miniSectionIndex}\r\n                                lottieFile={miniSection.lottieFilePath}\r\n                                className={miniSection.className}\r\n                                style={miniSection.style}\r\n                                speed={miniSection.speed}\r\n                                loop={miniSection.loop}\r\n                              ></LottieAnimation>\r\n                            ) : (\r\n                              <motion.div\r\n                                key={miniSectionIndex}\r\n                                className={`${miniSection.className} ${\r\n                                  isDarkMode\r\n                                    ? \"darkThemeFont\"\r\n                                    : \"lightThemeFont\"\r\n                                }`}\r\n                                style={miniSection.style}\r\n                              >\r\n                                <div style={miniSection.contentStyle}>\r\n                                  {ReactHtmlParser(miniSection.content)}{\" \"}\r\n                                </div>\r\n                                {/* Use subSection.content here */}\r\n                              </motion.div>\r\n                            )\r\n                        )}\r\n                      </motion.div>\r\n                    ))}\r\n                  </motion.div>\r\n                ) : (\r\n                  <motion.div\r\n                    className={section.className}\r\n                    style={section.style}\r\n                    key={index}\r\n                  >\r\n                    {section.subSections.map((subSection, subSectionIndex) =>\r\n                      subSection.className == \"YouTubeVideo\" ? (\r\n                        <div style={subSection.style}>\r\n                          <div className=\"ratio ratio-16x9\">\r\n                            <iframe\r\n                              src={subSection.videoLink}\r\n                              title=\"YouTube video\"\r\n                              allowFullScreen\r\n                              style={{ width: \"100%\", height: \"100%\" }}\r\n                              allow=\"autoplay\" // Add this line\r\n                            ></iframe>\r\n                          </div>\r\n                        </div>\r\n                      ) : subSection.className == \"LottieAnimation\" ? (\r\n                        <LottieAnimation\r\n                          key={subSectionIndex}\r\n                          lottieFile={subSection.lottieFilePath}\r\n                          className={subSection.className}\r\n                          style={subSection.style}\r\n                          speed={subSection.speed}\r\n                          loop={subSection.loop}\r\n                        ></LottieAnimation>\r\n                      ) : (\r\n                        <motion.div\r\n                          key={subSectionIndex}\r\n                          className={`${subSection.className} ${\r\n                            isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                          }`}\r\n                          style={subSection.style}\r\n                        >\r\n                          <div style={subSection.contentStyle}>\r\n                            {ReactHtmlParser(subSection.content)}{\" \"}\r\n                          </div>\r\n                          {/* Use subSection.content here */}\r\n                        </motion.div>\r\n                      )\r\n                    )}\r\n                  </motion.div>\r\n                )\r\n              )}\r\n\r\n            <div style={{ minHeight: \"50px\", zIndex: 999 }}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //Return this if the lesson has not been completed:\r\n\r\n  return selectedLesson === \"undefined\" ||\r\n    selectedLesson === null ||\r\n    selectedLesson.length === 0 ? ( //Needed to add condition because without it, component was rendering and not waiting on selectedTopic from useEffect\r\n    <div>Loading</div>\r\n  ) : (\r\n    <div>\r\n      <LessonMainSideNav></LessonMainSideNav>\r\n      <div className=\"Lesson\">\r\n        <div className=\"LessonContainer\">\r\n          <div style={{}} className=\"LessonTitleContainer\">\r\n            <span className=\"LessonNumber\">\r\n              Lesson {selectedLesson.sectionNumber}\r\n            </span>{\" \"}\r\n            <br />\r\n            <span className=\"LessonTitle\">{selectedLesson.sectionTitle}</span>\r\n          </div>\r\n\r\n          {selectedLesson.lessonAnimation &&\r\n            selectedLesson.lessonAnimation.map(\r\n              (section, index) =>\r\n                // Conditionally render sections based on the index\r\n                index <= currentSectionIndex &&\r\n                (section.className == \"multiSection\" ? (\r\n                  <motion.div\r\n                    id={`section-${index}`}\r\n                    className={section.className}\r\n                    style={section.style}\r\n                    initial={section.initial}\r\n                    animate={section.animate}\r\n                    exit={section.exit}\r\n                    transition={section.transition}\r\n                    key={index}\r\n                  >\r\n                    {section.subSections.map((subSection, subSectionIndex) => (\r\n                      <motion.div\r\n                        id={`subSection-${index}`}\r\n                        className={subSection.className}\r\n                        style={subSection.style}\r\n                        initial={subSection.initial}\r\n                        animate={subSection.animate}\r\n                        exit={subSection.exit}\r\n                        transition={subSection.transition}\r\n                        key={index}\r\n                      >\r\n                        {subSection.miniSections.map(\r\n                          (miniSection, miniSectionIndex) =>\r\n                            miniSection.className === \"LottieAnimation\" ? (\r\n                              <LottieAnimation\r\n                                key={miniSectionIndex}\r\n                                lottieFile={miniSection.lottieFilePath}\r\n                                className={miniSection.className}\r\n                                style={miniSection.style}\r\n                                initial={miniSection.initial}\r\n                                animate={miniSection.animate}\r\n                                exit={miniSection.exit}\r\n                                transition={miniSection.transition}\r\n                                speed={miniSection.speed}\r\n                                loop={miniSection.loop}\r\n                              ></LottieAnimation>\r\n                            ) : (\r\n                              <motion.div\r\n                                key={miniSectionIndex}\r\n                                className={`${miniSection.className} ${\r\n                                  isDarkMode\r\n                                    ? \"darkThemeFont\"\r\n                                    : \"lightThemeFont\"\r\n                                }`}\r\n                                style={miniSection.style}\r\n                                initial={miniSection.initial}\r\n                                animate={miniSection.animate}\r\n                                exit={miniSection.exit}\r\n                                transition={miniSection.transition}\r\n                              >\r\n                                <div style={miniSection.contentStyle}>\r\n                                  {ReactHtmlParser(miniSection.content)}{\" \"}\r\n                                </div>\r\n                                {/* Use subSection.content here */}\r\n                              </motion.div>\r\n                            )\r\n                        )}\r\n                      </motion.div>\r\n                    ))}\r\n                  </motion.div>\r\n                ) : (\r\n                  <motion.div\r\n                    id={`section-${index}`}\r\n                    className={section.className}\r\n                    style={section.style}\r\n                    initial={section.initial}\r\n                    animate={section.animate}\r\n                    exit={section.exit}\r\n                    transition={section.transition}\r\n                    key={index}\r\n                  >\r\n                    {section.subSections.map((subSection, subSectionIndex) =>\r\n                      subSection.className == \"YouTubeVideo\" ? (\r\n                        <div style={subSection.style}>\r\n                          <div className=\"ratio ratio-16x9\">\r\n                            <iframe\r\n                              src={subSection.videoLink}\r\n                              title=\"YouTube video\"\r\n                              allowFullScreen\r\n                              style={{ width: \"100%\", height: \"100%\" }}\r\n                              allow=\"autoplay\" // Add this line\r\n                            ></iframe>\r\n                          </div>\r\n                        </div>\r\n                      ) : subSection.className == \"LottieAnimation\" ? (\r\n                        <LottieAnimation\r\n                          key={subSectionIndex}\r\n                          lottieFile={subSection.lottieFilePath}\r\n                          className={subSection.className}\r\n                          style={subSection.style}\r\n                          initial={subSection.initial}\r\n                          animate={subSection.animate}\r\n                          exit={subSection.exit}\r\n                          transition={subSection.transition}\r\n                          speed={subSection.speed}\r\n                          loop={subSection.loop}\r\n                        ></LottieAnimation>\r\n                      ) : (\r\n                        <motion.div\r\n                          key={subSectionIndex}\r\n                          className={`${subSection.className} ${\r\n                            isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                          }`}\r\n                          style={subSection.style}\r\n                          initial={subSection.initial}\r\n                          animate={subSection.animate}\r\n                          exit={subSection.exit}\r\n                          transition={subSection.transition}\r\n                        >\r\n                          <div style={subSection.contentStyle}>\r\n                            {ReactHtmlParser(subSection.content)}{\" \"}\r\n                          </div>\r\n                          {/* Use subSection.content here */}\r\n                        </motion.div>\r\n                      )\r\n                    )}\r\n                  </motion.div>\r\n                ))\r\n            )}\r\n\r\n          {selectedLesson.lessonAnimation && isShowQuiz && (\r\n            <motion.div\r\n              id=\"lessonExample\"\r\n              initial={{ scale: 0 }}\r\n              animate={{ scale: 1 }}\r\n              transition={{\r\n                type: \"spring\",\r\n                stiffness: 260,\r\n                damping: 10,\r\n              }}\r\n            >\r\n              <LessonExample\r\n                currentSectionNumber={currentSectionNumber}\r\n                nextLessonNumber={nextLessonNumber}\r\n                nextLessonTitle={nextLessonTitle}\r\n                chapterNumber={chapterNumber}\r\n                chapterTitle={chapterTitle}\r\n                lessonNumber={selectedLesson.sectionNumber}\r\n                exampleDatafromBackEnd={exampleDatafromBackEnd}\r\n                // sectionExample={chooseRandomExample(\r\n                // selectedLesson.sectionNumber\r\n                // )}\r\n              ></LessonExample>\r\n            </motion.div>\r\n          )}\r\n          <div style={{ minHeight: \"1000px\", zIndex: 999 }}></div>\r\n        </div>\r\n        {/* Render a button to show the next section */}\r\n        {selectedLesson.lessonAnimation &&\r\n          currentSectionIndex < selectedLesson.lessonAnimation.length - 1 && (\r\n            <div className=\"forwardButton\" onClick={handleNextSection}></div>\r\n          )}\r\n        {selectedLesson.lessonAnimation &&\r\n          currentSectionIndex == selectedLesson.lessonAnimation.length - 1 &&\r\n          isShowQuiz == false && (\r\n            <div\r\n              className=\"forwardButton\"\r\n              onClick={handleShowLessonExample}\r\n            ></div>\r\n          )}\r\n\r\n        {currentSectionIndex == -1 && (\r\n          <motion.div\r\n            className={`${\r\n              isDarkMode\r\n                ? \"forwardButtonVisibleDark\"\r\n                : \"forwardButtonVisibleLight\"\r\n            }`}\r\n            onClick={handleNextSection}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{\r\n              duration: 0.5,\r\n              repeat: Infinity,\r\n              repeatType: \"reverse\",\r\n            }}\r\n          >\r\n            Tap anywhere\r\n          </motion.div>\r\n        )}\r\n        {selectedLesson.lessonAnimation &&\r\n          currentSectionIndex > -1 &&\r\n          currentSectionIndex < 1 &&\r\n          selectedLesson.lessonAnimation.length !== 1 &&\r\n          isButtonVisible && (\r\n            <motion.div\r\n              className={`${\r\n                isDarkMode\r\n                  ? \"forwardButtonVisibleDark\"\r\n                  : \"forwardButtonVisibleLight\"\r\n              }`}\r\n              onClick={handleNextSection}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{\r\n                duration: 0.5,\r\n                repeat: Infinity,\r\n                repeatType: \"reverse\",\r\n              }}\r\n            >\r\n              Tap anywhere\r\n            </motion.div>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lesson;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst images = [\r\n  [\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/1.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/1.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/1.1.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/1.1.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/1.1.5.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/2.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/2.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/2.1.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.1.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.3.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.3.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.3.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.3.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.3.5.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.3.6.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/3.3.7.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/4.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/4.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/4.1.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/4.1.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/4.1.5.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/KalimaTawheed/sectionImages/4.1.6.png\",\r\n    // Add more images for the first row\r\n  ],\r\n  [\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/1.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/1.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/1.2.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/1.2.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.4.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/1.3.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/1.3.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/1.3.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/1.3.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.1.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.1.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.2.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.2.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.2.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.2.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.3.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.3.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.3.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.3.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.3.5.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.3.6.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/BasicArabicGrammer/sectionImages/2.4.1.png\",\r\n    // Add more images for the third row\r\n  ],\r\n  [\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.1.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.1.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.2.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.3.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.3.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.3.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.3.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.4.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.4.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.4.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.4.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.4.5.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/1.4.6.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/2.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/2.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/2.1.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/2.1.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/3.1.1.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/3.1.2.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/3.1.3.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/3.1.4.png\",\r\n    \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/The6PillarsOfIman/sectionImages/3.1.5.png\",\r\n\r\n    // Add more images for the second row\r\n  ],\r\n];\r\n\r\nfunction GetStarted() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"GetStartedImagesContainer\">\r\n        {images.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"GetStartedRow\">\r\n            {row.map((image, index) => (\r\n              <motion.img\r\n                key={index}\r\n                src={image}\r\n                alt={`Image ${index + 1}`}\r\n                className=\"GetStartedImage\"\r\n                initial={{\r\n                  x:\r\n                    rowIndex === 0\r\n                      ? \"-2200%\"\r\n                      : rowIndex === 1\r\n                      ? \"0%\"\r\n                      : \"-2200%\",\r\n                }}\r\n                animate={{\r\n                  x: rowIndex === 0 ? \"0%\" : rowIndex === 1 ? \"-2200%\" : \"0%\",\r\n                }}\r\n                transition={{\r\n                  repeat: Infinity,\r\n                  duration: 50,\r\n                  ease: \"linear\",\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"GetStartedHeader\">Qaleelo</div>\r\n          <div className=\"WelcomeMessageText\" style={{ paddingTop: 0 }}>\r\n            The power of doing little\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/WelcomeMessageOne\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Get Started</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\">\r\n          {\" \"}\r\n          <Link to={\"/LoginPage\"}>\r\n            <p className=\"GetStartedLoginText\">\r\n              Already have an account?{\" \"}\r\n              <span style={{ color: \"#8747d4\" }}>Log In</span>\r\n            </p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GetStarted;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport LottieAnimation from \"../LottieAnimation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WelcomeMessageOne() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"WelcomeMessageImagesContainer\">\r\n        <div>\r\n          <LottieAnimation\r\n            lottieFile=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/LottieFiles/bookTurning.json\"\r\n            style={{ width: \"600px\" }}\r\n          ></LottieAnimation>\r\n        </div>\r\n\r\n        <div>\r\n          <LottieAnimation\r\n            lottieFile=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/LottieFiles/happyStudent.json\"\r\n            style={{ width: \"400px\" }}\r\n          ></LottieAnimation>\r\n        </div>\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"WelcomeMessageText\">\r\n            <b style={{ color: \"#dd6260\" }}>HH Courses</b> help you learn\r\n            complex Islamic topics effectively.\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/WelcomeMessageTwo\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Continue</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessageOne;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport LottieAnimation from \"../LottieAnimation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WelcomeMessageTwo() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"WelcomeMessageImagesContainer\">\r\n        <div>\r\n          <LottieAnimation\r\n            lottieFile=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/LottieFiles/InteractiveLesson.json\"\r\n            style={{ width: \"800px\", marginTop: \"400px\" }}\r\n          ></LottieAnimation>\r\n        </div>\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"WelcomeMessageText\">\r\n            <b style={{ color: \"#dd6260\" }}>Lessons</b> are bite sized, visual,\r\n            and tappable to hold your attention.\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/WelcomeMessageThree\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Continue</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessageTwo;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport LottieAnimation from \"../LottieAnimation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WelcomeMessageThree() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"WelcomeMessageImagesContainer\">\r\n        <div>\r\n          <LottieAnimation\r\n            lottieFile=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/LottieFiles/quizQuestion.json\"\r\n            style={{ width: \"800px\", marginTop: \"400px\" }}\r\n          ></LottieAnimation>\r\n        </div>\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"WelcomeMessageText\">\r\n            Then <b style={{ color: \"#dd6260\" }}>quizzes</b> help you commit key\r\n            concepts to long term memory.\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/WelcomeMessageFour\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Continue</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessageThree;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport LottieAnimation from \"../LottieAnimation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WelcomeMessageFour() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"WelcomeMessageImagesContainer\">\r\n        <div>\r\n          <LottieAnimation\r\n            lottieFile=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/LottieFiles/rocketLaunchDemo.json\"\r\n            style={{ width: \"800px\", marginTop: \"400px\" }}\r\n          ></LottieAnimation>\r\n        </div>\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"WelcomeMessageText\">\r\n            Let's us show you how it works\r\n            <br /> with a quick demo!\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/LessonDemo\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Continue</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessageFour;\r\n", "import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport ButtonH2 from \"./Buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { allExampleData } from \"./TopicData\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport \"./sidebar/Sidebar.css\";\r\nimport \"./Lesson.css\";\r\nimport ConfettiExplosion from \"react-confetti-explosion\";\r\nimport { motion } from \"framer-motion\";\r\nimport SideNavRowLesson from \"./sidebar/SideNavRowLesson\";\r\nimport SideNavRowQuiz from \"./sidebar/SideNavRowQuiz\";\r\n\r\nconst ExampleBox = styled.div`\r\n  /* box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2); */\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  /* background: #252525; */\r\n  /* margin-top: 80px; */\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst ExampleQuestion = styled.div`\r\n  /* font-size: 17px; */\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #a678de;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ExampleAnswer = styled(motion.div)`\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  font-family: Quicksand;\r\n  /* border-radius: 15px; */\r\n  /* padding: 10px; */\r\n  color: #252525;\r\n  display: flex;\r\n  background: ${(props) =>\r\n    props.answerClicked == props.answer ? props.answerColor : \"#D2CFE6\"};\r\n  /* margin: 20px; */\r\n  transition: transform 300ms;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst AnswerExplanation = styled.div`\r\n  /* font-size: 2vh; */\r\n  display: ${(props) =>\r\n    props.answerClicked == props.answer ? \"flex\" : \"none\"};\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst LessonExampleDemo = (props) => {\r\n  console.log(props);\r\n  //Obtain Example Data from back end\r\n  const { courseTitleUserIsOn, entryStore, isDarkMode } = useAmazonContext();\r\n  console.log(entryStore);\r\n\r\n  const [answerColor, setAnswerColor] = useState(\"#e8e2ef\");\r\n  const [answerClicked, setAnswerClicked] = useState(\"NoAnswer\");\r\n  const [answerClickedToPractice, setAnswerClickedToPractice] = useState(false);\r\n  const nextLessonBoxRef = useRef(null);\r\n\r\n  // State to hold the shuffled answers\r\n  const [answeredCorrectly, setAnsweredCorrectly] = useState(false);\r\n  const [selectedExample, setSelectedExample] = useState({});\r\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\r\n  const isMobile = window.innerWidth <= 768; // You can adjust the breakpoint (768) as needed\r\n\r\n  // Randomiser function to choose an example for this Lesson\r\n\r\n  const chooseRandomExample = (sectionNumber) => {\r\n    let allSectionExamples =\r\n      props.exampleDatafromBackEnd.length !== 0 &&\r\n      props.exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n    const random = Math.floor(Math.random() * allSectionExamples.length);\r\n    let selectedExample = allSectionExamples[random];\r\n    return selectedExample;\r\n  };\r\n\r\n  const checkAnswer = (isCorrect, answer) => {\r\n    setAnswerClicked(answer);\r\n    setAnswerClickedToPractice(true);\r\n\r\n    if (isCorrect == true) {\r\n      setAnswerColor(\"#DAF7A6\");\r\n      setAnsweredCorrectly(true);\r\n      // Trigger confetti burst\r\n      // Scroll distance based on device type\r\n      const scrollDistance = isMobile ? 1000 : 300;\r\n      // Scroll smoothly by 600  pixels after 300ms after answer is correct\r\n      setTimeout(() => {\r\n        window.scrollBy({\r\n          top: scrollDistance,\r\n          behavior: \"smooth\",\r\n        });\r\n      }, 300);\r\n\r\n      console.log(answerColor);\r\n\r\n      // Store the current chapter title in localStorage if it's not already there\r\n      if (!localStorage.getItem(\"chapterTitle\")) {\r\n        localStorage.setItem(\"chapterTitle\", props.chapterTitle);\r\n      }\r\n      console.log(localStorage.getItem(\"chapterTitle\"));\r\n\r\n      // Get the current list of chapter titles from localStorage\r\n      let chapterTitles =\r\n        JSON.parse(localStorage.getItem(\"chapterTitles\")) || [];\r\n\r\n      // Check if the current chapter title is already in the list\r\n      if (!chapterTitles.includes(props.chapterTitle)) {\r\n        // If it's not, add it to the list\r\n        chapterTitles.push(props.chapterTitle);\r\n      }\r\n\r\n      // Store the updated list back in localStorage\r\n      localStorage.setItem(\"chapterTitles\", JSON.stringify(chapterTitles));\r\n      console.log(chapterTitles);\r\n\r\n      // Get the current list of completed chapters from localStorage\r\n      let lessonProgress =\r\n        JSON.parse(localStorage.getItem(\"lessonProgress\")) || [];\r\n\r\n      // Add the current chapter to the list if it's not already there\r\n      if (!lessonProgress.includes(props.currentSectionNumber)) {\r\n        lessonProgress.push(props.currentSectionNumber);\r\n      }\r\n\r\n      // Store the updated list in localStorage\r\n      // Users will continue from the last entry inserted in the list\r\n      localStorage.setItem(\"lessonProgress\", JSON.stringify(lessonProgress));\r\n      console.log(lessonProgress);\r\n      console.log(props.currentSectionNumber);\r\n    } else {\r\n      setAnswerColor(\"#ff726f\");\r\n    }\r\n  };\r\n\r\n  // Utility function to shuffle an array\r\n  function shuffleArray(array) {\r\n    const shuffledArray = [...array];\r\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffledArray[i], shuffledArray[j]] = [\r\n        shuffledArray[j],\r\n        shuffledArray[i],\r\n      ];\r\n    }\r\n    return shuffledArray;\r\n  }\r\n  useEffect(() => {\r\n    var selectedExampleOne = chooseRandomExample(props.lessonNumber);\r\n    setSelectedExample(selectedExampleOne);\r\n\r\n    // Shuffle the answers when the component mounts\r\n    setShuffledAnswers(shuffleArray(selectedExampleOne.answers));\r\n  }, []);\r\n\r\n  return (\r\n    <ExampleBox className=\"LessonExampleBox\">\r\n      <ExampleQuestion>\r\n        {selectedExample && selectedExample.question}\r\n      </ExampleQuestion>\r\n      {shuffledAnswers.map((answerItem) => {\r\n        return (\r\n          <>\r\n            <ExampleAnswer\r\n              className=\"LessonExampleAnswerBox\"\r\n              whileHover={{ scale: 1.2 }}\r\n              whileTap={{ scale: 0.8 }}\r\n              transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n              onClick={() =>\r\n                checkAnswer(answerItem.isCorrect, answerItem.answer)\r\n              }\r\n              answerColor={answerColor}\r\n              answer={answerItem.answer}\r\n              answerClicked={answerClicked}\r\n            >\r\n              <div className=\"LessonExampleAnswer\">{answerItem.answer}</div>\r\n            </ExampleAnswer>\r\n            {\r\n              <AnswerExplanation\r\n                answerClicked={answerClicked}\r\n                answer={answerItem.answer}\r\n                answerColor={answerColor}\r\n              >\r\n                {answerItem.isCorrect == false ? (\r\n                  <div\r\n                    className={`LessonExampleAnswerExplanationContainer ${\r\n                      isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                    }`}\r\n                  >\r\n                    <i class=\"wrongCross fa-solid fa-xmark\"></i>\r\n                    <p\r\n                      style={{\r\n                        display: \"inline\",\r\n                      }}\r\n                      className=\"LessonExampleAnswerExplanation\"\r\n                    >\r\n                      {answerItem.explanation}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <i class=\"correctCheckMark fa-solid fa-check\"></i>\r\n                    {answeredCorrectly && (\r\n                      <ConfettiExplosion\r\n                        autoStart={true}\r\n                        duration={5000}\r\n                        particleCount={100}\r\n                        spread={360}\r\n                        origin={{ x: 0.8, y: 0.5 }}\r\n                        force={0.8}\r\n                        width={1600}\r\n                      />\r\n                    )}\r\n                    <p\r\n                      className={`LessonExampleAnswerExplanation ${\r\n                        isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                      }`}\r\n                    >\r\n                      Correct!\r\n                    </p>\r\n                    {answeredCorrectly && (\r\n                      <ConfettiExplosion\r\n                        autoStart={true}\r\n                        duration={5000}\r\n                        particleCount={100}\r\n                        spread={360}\r\n                        origin={{ x: 0.8, y: 0.5 }}\r\n                        force={0.8}\r\n                        width={1600}\r\n                      />\r\n                    )}\r\n                  </>\r\n                )}\r\n              </AnswerExplanation>\r\n            }\r\n          </>\r\n        );\r\n      })}\r\n      {/* Render the \"Next Lesson\" button if answered correctly */}\r\n      {answeredCorrectly && props.nextLessonNumber == false && (\r\n        <motion.div\r\n          ref={nextLessonBoxRef}\r\n          className=\"LessonExampleNextLessonBox\"\r\n          initial={{ opacity: 0, scale: 0.5 }}\r\n          animate={{ opacity: 1, scale: [1, 1.03, 1] }}\r\n          transition={{\r\n            duration: 0.8,\r\n            delay: 0.3,\r\n            ease: [0, 0.71, 0.2, 1.01],\r\n          }}\r\n        >\r\n          <div style={{}} className=\"LessonTitleContainer\">\r\n            <span className=\"LessonNumber\">End Of Chapter</span>{\" \"}\r\n          </div>\r\n          <Link to={`/${courseTitleUserIsOn}/quiz/${props.chapterNumber}`}>\r\n            <motion.div\r\n              whileTap={{ scale: 0.8 }}\r\n              transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n            >\r\n              <SideNavRowQuiz\r\n                number={props.chapterNumber}\r\n                title={props.chapterTitle}\r\n                width=\"90%\"\r\n                marginLeft=\"5%\"\r\n              ></SideNavRowQuiz>\r\n            </motion.div>\r\n          </Link>\r\n        </motion.div>\r\n      )}{\" \"}\r\n      {answeredCorrectly && props.nextLessonNumber !== false && (\r\n        <motion.div\r\n          ref={nextLessonBoxRef}\r\n          className=\"LessonExampleNextLessonBox\"\r\n          initial={{ opacity: 0, scale: 0.5 }}\r\n          animate={{ opacity: 1, scale: [1, 1.03, 1] }}\r\n          transition={{\r\n            duration: 0.8,\r\n            delay: 0.3,\r\n            ease: [0, 0.71, 0.2, 1.01],\r\n          }}\r\n        >\r\n          <motion.div\r\n            whileTap={{ scale: 0.8 }}\r\n            transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\r\n            className=\"MessageMiddleSection\"\r\n            style={{ marginTop: \"150px\" }}\r\n          >\r\n            <Link\r\n              to={\"/WelcomeMessageFive\"}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <button className=\"GetStartedButton\">Continue</button>\r\n            </Link>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </ExampleBox>\r\n  );\r\n};\r\n\r\nexport default LessonExampleDemo;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport jsonData from \"./sectionDescription.json\";\r\nimport \"./Lesson.css\";\r\nimport Example from \"./Example\";\r\n// import exampleDatafromBackEnd from \"./example.json\";\r\nimport LessonExample from \"./LessonExample\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport LessonMainSideNav from \"./sidebar/LessonMainSideNav\";\r\nimport LottieAnimation from \"./LottieAnimation\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Lesson from \"./Lesson\";\r\nimport LessonExampleDemo from \"./LessonExampleDemo\";\r\n\r\nexport const LessonDemo = (props) => {\r\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(-1);\r\n  const [selectedLesson, setSelectedLesson] = useState({});\r\n  const [isButtonVisible, setIsButtonVisible] = useState(true);\r\n  const [isShowQuiz, setIsShowQuiz] = useState(false);\r\n\r\n  let {\r\n    courseDetails,\r\n    setCourseDetails,\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    entryStore,\r\n    isDarkMode,\r\n  } = useAmazonContext();\r\n\r\n  console.log(courseDetails);\r\n  console.log(entryStore);\r\n  useEffect(() => {\r\n    setCourseTitleUserIsOn(props.match.params.courseTitle);\r\n  }, []);\r\n  console.log(courseTitleUserIsOn);\r\n  console.log(props.match.params.courseTitle);\r\n  //set the course Details\r\n  let courseTitle = \"KalimaTawheed\";\r\n  let lessonNumber = \"3.1.1\";\r\n  let courseTopicsCollectionName = \"kalimaTawheedTopics\";\r\n  let courseTopicsModelName = \"kalimaTawheedTopic\";\r\n  let courseExamplesCollectionName = \"kalimaTawheedExamples\";\r\n  let courseExamplesModelName = \"kalimaTawheedExample\";\r\n\r\n  //Lesson Data from BackEnd\r\n\r\n  console.log(props.match);\r\n  console.log(props.match.params.lessonNumber);\r\n\r\n  let lessonNumberFromSideBar = props.match.params.lessonNumber;\r\n  console.log(lessonNumberFromSideBar);\r\n  console.log(courseDetails.courseTopicsCollectionName);\r\n  console.log(courseDetails.courseTopicsModelName);\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitle}/lessonRESTCAll/${lessonNumber}?collectionName=${courseTopicsCollectionName}&modelName=${courseTopicsModelName}`\r\n    ).then((response) => {\r\n      //changefordev\r\n      setSelectedLesson(response.data);\r\n      // setSelectedLesson(jsonData);\r\n      // console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  console.log(\r\n    `/api/${courseTitle}/lessonRESTCAll/${lessonNumber}?collectionName=${courseTopicsCollectionName}&modelName=${courseTopicsModelName}`\r\n  );\r\n  console.log(selectedLesson);\r\n\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/examplesData?collectionName=${courseExamplesCollectionName}&modelName=${courseExamplesModelName}`\r\n    ).then((response) => {\r\n      setExampleDatafromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  // let { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  const handleNextSection = () => {\r\n    // Increment the section index\r\n    setCurrentSectionIndex((prevIndex) => prevIndex + 1);\r\n  };\r\n\r\n  const handleShowLessonExample = () => {\r\n    setIsShowQuiz(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isShowQuiz) {\r\n      // Scroll to the LessonExample component when isShowQuiz becomes true\r\n      const lessonExampleElement = document.getElementById(\"lessonExample\");\r\n      if (lessonExampleElement) {\r\n        lessonExampleElement.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    }\r\n  }, [isShowQuiz]);\r\n\r\n  const isMobile = window.innerWidth <= 768; // You can adjust the breakpoint (768) as needed\r\n\r\n  useEffect(() => {\r\n    if (currentSectionIndex > 0) {\r\n      const nextSection = document.getElementById(\r\n        `section-${currentSectionIndex - 1}`\r\n      );\r\n      if (nextSection) {\r\n        nextSection.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    }\r\n\r\n    //Logic when quiz rendered autimatically\r\n\r\n    // // Scroll to the next section when currentSectionIndex changes\r\n    // if (\r\n    //   selectedLesson.lessonAnimation &&\r\n    //   currentSectionIndex == selectedLesson.lessonAnimation.length - 1\r\n    // ) {\r\n    //   // Scroll distance based on device type\r\n    //   const scrollDistance = isMobile ? 1000 : 300;\r\n    //   // Scroll smoothly by 600 pixels after 300ms\r\n    //   setTimeout(() => {\r\n    //     window.scrollBy({\r\n    //       top: scrollDistance,\r\n    //       behavior: \"smooth\",\r\n    //     });\r\n    //   }, 1500); // I set this number in seconds equal to the delay in lesson example animation\r\n    // } else if (currentSectionIndex > 0) {\r\n    //   const nextSection = document.getElementById(\r\n    //     `section-${currentSectionIndex - 1}`\r\n    //   );\r\n    //   if (nextSection) {\r\n    //     nextSection.scrollIntoView({ behavior: \"smooth\" });\r\n    //   }\r\n    // }\r\n  }, [currentSectionIndex]);\r\n\r\n  //hide tap to next for 10 seconds everytime a section loads:\r\n  useEffect(() => {\r\n    // Hide the button temporarily\r\n    setIsButtonVisible(false);\r\n\r\n    // Show the button again after 10 seconds\r\n    const timer = setTimeout(() => {\r\n      setIsButtonVisible(true);\r\n    }, 5000);\r\n\r\n    // Cleanup the timer if the component unmounts or currentSectionIndex changes\r\n    return () => clearTimeout(timer);\r\n  }, [currentSectionIndex]);\r\n  //End\r\n\r\n  //Reset current index when lesson changes:\r\n  useEffect(() => {\r\n    // Reset currentSectionIndex to 0 when lessonNumberFromSideBar or selectedLesson changes\r\n    setCurrentSectionIndex(-1);\r\n    setIsShowQuiz(false);\r\n  }, [lessonNumberFromSideBar, selectedLesson]);\r\n\r\n  // Randomiser function to choose an example for this Lesson\r\n\r\n  // const chooseRandomExample = (sectionNumber) => {\r\n  //   let allSectionExamples =\r\n  //     exampleDatafromBackEnd.length !== 0 &&\r\n  //     exampleDatafromBackEnd.filter(\r\n  //       //list of ALL examples for a particular section in the database\r\n  //       (example) => example.sectionNumber == sectionNumber\r\n  //     );\r\n  //   const random = Math.floor(Math.random() * allSectionExamples.length);\r\n  //   let selectedExample = allSectionExamples[random];\r\n  //   return selectedExample;\r\n  // };\r\n\r\n  console.log(currentSectionIndex);\r\n\r\n  return selectedLesson === \"undefined\" ||\r\n    selectedLesson === null ||\r\n    selectedLesson.length === 0 ? ( //Needed to add condition because without it, component was rendering and not waiting on selectedTopic from useEffect\r\n    <div>Loading</div>\r\n  ) : (\r\n    <div>\r\n      <div className=\"Lesson\">\r\n        <div className=\"LessonContainer\">\r\n          <div style={{}} className=\"LessonTitleContainer\">\r\n            <span className=\"LessonNumber\">\r\n              Lesson {selectedLesson.sectionNumber}\r\n            </span>{\" \"}\r\n            <br />\r\n            <span className=\"LessonTitle\">{selectedLesson.sectionTitle}</span>\r\n          </div>\r\n\r\n          {selectedLesson.lessonAnimation &&\r\n            selectedLesson.lessonAnimation.map(\r\n              (section, index) =>\r\n                // Conditionally render sections based on the index\r\n                index <= currentSectionIndex &&\r\n                (section.className == \"multiSection\" ? (\r\n                  <motion.div\r\n                    id={`section-${index}`}\r\n                    className={section.className}\r\n                    style={section.style}\r\n                    initial={section.initial}\r\n                    animate={section.animate}\r\n                    exit={section.exit}\r\n                    transition={section.transition}\r\n                    key={index}\r\n                  >\r\n                    {section.subSections.map((subSection, subSectionIndex) => (\r\n                      <motion.div\r\n                        id={`subSection-${index}`}\r\n                        className={subSection.className}\r\n                        style={subSection.style}\r\n                        initial={subSection.initial}\r\n                        animate={subSection.animate}\r\n                        exit={subSection.exit}\r\n                        transition={subSection.transition}\r\n                        key={subSectionIndex}\r\n                      >\r\n                        {subSection.miniSections.map(\r\n                          (miniSection, miniSectionIndex) =>\r\n                            miniSection.className === \"LottieAnimation\" ? (\r\n                              <LottieAnimation\r\n                                key={miniSectionIndex}\r\n                                lottieFile={miniSection.lottieFilePath}\r\n                                className={miniSection.className}\r\n                                style={miniSection.style}\r\n                                initial={miniSection.initial}\r\n                                animate={miniSection.animate}\r\n                                exit={miniSection.exit}\r\n                                transition={miniSection.transition}\r\n                                speed={miniSection.speed}\r\n                                loop={miniSection.loop}\r\n                              ></LottieAnimation>\r\n                            ) : (\r\n                              <motion.div\r\n                                key={miniSectionIndex}\r\n                                className={`${miniSection.className} ${\r\n                                  isDarkMode\r\n                                    ? \"darkThemeFont\"\r\n                                    : \"lightThemeFont\"\r\n                                }`}\r\n                                style={miniSection.style}\r\n                                initial={miniSection.initial}\r\n                                animate={miniSection.animate}\r\n                                exit={miniSection.exit}\r\n                                transition={miniSection.transition}\r\n                              >\r\n                                <div style={miniSection.contentStyle}>\r\n                                  {ReactHtmlParser(miniSection.content)}{\" \"}\r\n                                </div>\r\n                                {/* Use subSection.content here */}\r\n                              </motion.div>\r\n                            )\r\n                        )}\r\n                      </motion.div>\r\n                    ))}\r\n                  </motion.div>\r\n                ) : (\r\n                  <motion.div\r\n                    id={`section-${index}`}\r\n                    className={section.className}\r\n                    style={section.style}\r\n                    initial={section.initial}\r\n                    animate={section.animate}\r\n                    exit={section.exit}\r\n                    transition={section.transition}\r\n                    key={index}\r\n                  >\r\n                    {section.subSections.map((subSection, subSectionIndex) =>\r\n                      subSection.className == \"YouTubeVideo\" ? (\r\n                        <div style={subSection.style}>\r\n                          <div className=\"ratio ratio-16x9\">\r\n                            <iframe\r\n                              src={subSection.videoLink}\r\n                              title=\"YouTube video\"\r\n                              allowFullScreen\r\n                              style={{ width: \"100%\", height: \"100%\" }}\r\n                              allow=\"autoplay\" // Add this line\r\n                            ></iframe>\r\n                          </div>\r\n                        </div>\r\n                      ) : subSection.className == \"LottieAnimation\" ? (\r\n                        <LottieAnimation\r\n                          key={subSectionIndex}\r\n                          lottieFile={subSection.lottieFilePath}\r\n                          className={subSection.className}\r\n                          style={subSection.style}\r\n                          initial={subSection.initial}\r\n                          animate={subSection.animate}\r\n                          exit={subSection.exit}\r\n                          transition={subSection.transition}\r\n                          speed={subSection.speed}\r\n                          loop={subSection.loop}\r\n                        ></LottieAnimation>\r\n                      ) : (\r\n                        <motion.div\r\n                          key={subSectionIndex}\r\n                          className={`${subSection.className} ${\r\n                            isDarkMode ? \"darkThemeFont\" : \"lightThemeFont\"\r\n                          }`}\r\n                          style={subSection.style}\r\n                          initial={subSection.initial}\r\n                          animate={subSection.animate}\r\n                          exit={subSection.exit}\r\n                          transition={subSection.transition}\r\n                        >\r\n                          <div style={subSection.contentStyle}>\r\n                            {ReactHtmlParser(subSection.content)}{\" \"}\r\n                          </div>\r\n                          {/* Use subSection.content here */}\r\n                        </motion.div>\r\n                      )\r\n                    )}\r\n                  </motion.div>\r\n                ))\r\n            )}\r\n\r\n          {selectedLesson.lessonAnimation && isShowQuiz && (\r\n            <motion.div\r\n              id=\"lessonExample\"\r\n              initial={{ scale: 0 }}\r\n              animate={{ scale: 1 }}\r\n              transition={{\r\n                type: \"spring\",\r\n                stiffness: 260,\r\n                damping: 10,\r\n              }}\r\n            >\r\n              <LessonExampleDemo\r\n                lessonNumber={selectedLesson.sectionNumber}\r\n                exampleDatafromBackEnd={exampleDatafromBackEnd}\r\n                // sectionExample={chooseRandomExample(\r\n                // selectedLesson.sectionNumber\r\n                // )}\r\n              ></LessonExampleDemo>\r\n            </motion.div>\r\n          )}\r\n          <div style={{ minHeight: \"1000px\", zIndex: 999 }}></div>\r\n        </div>\r\n        {/* Render a button to show the next section */}\r\n        {selectedLesson.lessonAnimation &&\r\n          currentSectionIndex < selectedLesson.lessonAnimation.length - 1 && (\r\n            <div className=\"forwardButton\" onClick={handleNextSection}></div>\r\n          )}\r\n        {selectedLesson.lessonAnimation &&\r\n          currentSectionIndex == selectedLesson.lessonAnimation.length - 1 &&\r\n          isShowQuiz == false && (\r\n            <div\r\n              className=\"forwardButton\"\r\n              onClick={handleShowLessonExample}\r\n            ></div>\r\n          )}\r\n\r\n        {currentSectionIndex == -1 && (\r\n          <motion.div\r\n            className={`${\r\n              isDarkMode\r\n                ? \"forwardButtonVisibleDark\"\r\n                : \"forwardButtonVisibleLight\"\r\n            }`}\r\n            onClick={handleNextSection}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{\r\n              duration: 0.5,\r\n              repeat: Infinity,\r\n              repeatType: \"reverse\",\r\n            }}\r\n          >\r\n            Tap anywhere\r\n          </motion.div>\r\n        )}\r\n        {selectedLesson.lessonAnimation &&\r\n          currentSectionIndex > -1 &&\r\n          currentSectionIndex < 1 &&\r\n          selectedLesson.lessonAnimation.length !== 1 &&\r\n          isButtonVisible && (\r\n            <motion.div\r\n              className={`${\r\n                isDarkMode\r\n                  ? \"forwardButtonVisibleDark\"\r\n                  : \"forwardButtonVisibleLight\"\r\n              }`}\r\n              onClick={handleNextSection}\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{\r\n                duration: 0.5,\r\n                repeat: Infinity,\r\n                repeatType: \"reverse\",\r\n              }}\r\n            >\r\n              Tap anywhere\r\n            </motion.div>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LessonDemo;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport LottieAnimation from \"../LottieAnimation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WelcomeMessageFive() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"WelcomeMessageImagesContainer\">\r\n        <div>\r\n          <LottieAnimation\r\n            lottieFile=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/LottieFiles/busyLife.json\"\r\n            style={{ width: \"800px\", marginTop: \"400px\" }}\r\n          ></LottieAnimation>\r\n        </div>\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"GetStartedHeader\" style={{ fontSize: \"4vh\" }}>\r\n            Just 5 minutes a day\r\n          </div>\r\n          <div className=\"WelcomeMessageText\" style={{ paddingTop: 0 }}>\r\n            We understand you're busy. <br />\r\n            So we designed the lessons to fit your schedule.\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/WelcomeMessageCourses\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Continue</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessageFive;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport LottieAnimation from \"../LottieAnimation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WelcomeMessageSix() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"WelcomeMessageImagesContainer\">\r\n        <div>\r\n          <LottieAnimation\r\n            lottieFile=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/LottieFiles/scheduleClean.json\"\r\n            style={{ width: \"800px\", marginTop: \"400px\" }}\r\n          ></LottieAnimation>\r\n        </div>\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"GetStartedHeader\" style={{ fontSize: \"4vh\" }}>\r\n            Turn on Notifications\r\n          </div>\r\n          <div className=\"WelcomeMessageText\" style={{ paddingTop: 0 }}>\r\n            We will remind you to learn so it becomes a habit!\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/WelcomeMessageSeven\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Enable Notifications</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessageSix;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"../landingPage/landingPage.css\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CourseIcon from \"../landingPage/CourseIcon\";\r\nimport CourseStats from \"../landingPage/CourseStats\";\r\nimport ColorThief from \"colorthief\";\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  position: relative;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  /* padding-left: 15px; */\r\n  /* padding-right: 15px; */\r\n  /* margin: 30px; */\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 1.4vh;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 20% 20% 20% 20% / 50% 50% 50% 50%;\r\n  background: none;\r\n  color: #dd6260;\r\n  height: 6vh;\r\n  text-decoration: underline;\r\n\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst StartButton = styled.button`\r\n  background: red;\r\n  position: relative;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  /* margin-bottom: 10px; */\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 1.8vh;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 20% 20% 20% 20% / 50% 50% 50% 50%;\r\n  background: none;\r\n  color: yellow;\r\n  height: 6vh;\r\n\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nfunction WelcomeCourseCard(props) {\r\n  const [dominantColor, setDominantColor] = useState(\"\");\r\n  const [textColor, setTextColor] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showGoals, setShowGoals] = useState(false);\r\n\r\n  const toggleGoals = () => {\r\n    setShowGoals(!showGoals);\r\n  };\r\n\r\n  const fetchAndExtractColorWithCache = async (imageUrl) => {\r\n    const cachedColor = localStorage.getItem(imageUrl);\r\n\r\n    if (cachedColor) {\r\n      handleColorExtraction(cachedColor);\r\n    } else {\r\n      try {\r\n        const response = await fetch(imageUrl, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Cache-Control\": \"no-cache\",\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const blob = await response.blob();\r\n          const reader = new FileReader();\r\n\r\n          reader.readAsDataURL(blob);\r\n          reader.onloadend = () => {\r\n            const base64data = reader.result;\r\n\r\n            const image = new Image();\r\n            image.src = base64data;\r\n\r\n            image.onload = () => {\r\n              const colorThief = new ColorThief();\r\n              const dominantColorRGB = colorThief.getColor(image);\r\n              const dominantColorCSS = `rgb(${dominantColorRGB[0]}, ${dominantColorRGB[1]}, ${dominantColorRGB[2]})`;\r\n\r\n              handleColorExtraction(dominantColorCSS);\r\n\r\n              // Store the color in local storage for caching\r\n              localStorage.setItem(imageUrl, dominantColorCSS);\r\n            };\r\n          };\r\n        } else {\r\n          console.error(\"Image fetch failed:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleColorExtraction = (color) => {\r\n    setDominantColor(color);\r\n    const luminance = calculateLuminance(color);\r\n    const textColor = luminance > 0.5 ? \"#000\" : \"#fff\";\r\n    setTextColor(textColor);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const calculateLuminance = (color) => {\r\n    const rgb = color.match(/\\d+/g);\r\n    const luminance = (0.299 * rgb[0] + 0.587 * rgb[1] + 0.114 * rgb[2]) / 255;\r\n    return luminance;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const imageUrl =\r\n      \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n      props.course.courseTitle.replace(/\\s/g, \"\") +\r\n      \"/courseImage/\" +\r\n      props.course.courseTitle.replace(/\\s/g, \"\") +\r\n      \".png\";\r\n\r\n    fetchAndExtractColorWithCache(imageUrl);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"courseFullDetails\"\r\n      style={{ backgroundColor: dominantColor }}\r\n    >\r\n      <div className=\"courseHeader\">\r\n        <CourseIcon\r\n          img={\r\n            \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n            props.course.courseTitle.replace(/\\s/g, \"\") +\r\n            \"/courseImage/\" +\r\n            props.course.courseTitle.replace(/\\s/g, \"\") +\r\n            \".png\"\r\n          }\r\n          title={props.course.courseTitle}\r\n          description={props.course.courseDescription}\r\n        ></CourseIcon>\r\n        <div className=\"courseDescriptionANDGoals\">\r\n          <CourseStats\r\n            courseDetails={props.course}\r\n            color={textColor}\r\n          ></CourseStats>\r\n        </div>\r\n      </div>\r\n      <h1 className=\"courseDescription\" style={{ color: textColor }}>\r\n        {props.course.courseDescription}\r\n        <br></br>\r\n        <ButtonH2 onClick={toggleGoals} style={{ color: textColor }}>\r\n          {showGoals ? \"Hide Course Details\" : \"Show Course Details\"}\r\n        </ButtonH2>\r\n        ​\r\n      </h1>\r\n\r\n      {showGoals && (\r\n        <div className=\"courseGoals\">\r\n          <div className=\"courseGoalsDescription\" style={{ color: textColor }}>\r\n            <div className=\"courseGoalsHeader\" style={{ color: textColor }}>\r\n              You will learn\r\n            </div>\r\n            {Object.entries(props.course).length === 0 ? ( //UseEffects need to fetch object details and hence object will be empty until useEffect gets data, until then this is empty\r\n              <div>Loading</div>\r\n            ) : (\r\n              props.course.courseGoals.map((goal, index) => {\r\n                return <p>{goal}</p>;\r\n              })\r\n            )}\r\n          </div>\r\n          <div className=\"courseReference\">\r\n            {props.course.courseTitle && (\r\n              <img\r\n                className=\"courseReferenceImage\"\r\n                src={\r\n                  \"https://qaleelo-assets.s3.us-east-2.amazonaws.com/\" +\r\n                  props.course.courseTitle.replace(/\\s/g, \"\") +\r\n                  \"/courseReferenceImage/\" +\r\n                  props.course.courseTitle.replace(/\\s/g, \"\") +\r\n                  \".png\"\r\n                }\r\n                alt=\"\"\r\n              ></img>\r\n            )}\r\n\r\n            <div\r\n              className=\"courseReferenceDescription\"\r\n              style={{ color: textColor }}\r\n            >\r\n              {props.course.courseReferenceDescription}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeCourseCard;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nimport WelcomeCourseCard from \"./WelcomeCourseCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logout from \"./Logout\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction WelcomeCourseMenuPage() {\r\n  const [coursesDisplayed, setCoursesDisplayed] = useState([]);\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      setCoursesDisplayed(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n  console.log(coursesDisplayed);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"courseCardsContainer\">\r\n        {coursesDisplayed.map((course, index) => {\r\n          return (\r\n            <>\r\n              {course.courseIsActive && (\r\n                <WelcomeCourseCard course={course}></WelcomeCourseCard>\r\n              )}\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeCourseMenuPage;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport LottieAnimation from \"../LottieAnimation\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CourseMenuPage from \"../landingPage/CourseMenuPage\";\r\nimport WelcomeCourseMenuPage from \"./WelcomeCourseMenuPage\";\r\n\r\nfunction WelcomeMessageCourses() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"WelcomeMessageImagesContainerScrollable\">\r\n        <div>\r\n          <WelcomeCourseMenuPage></WelcomeCourseMenuPage>\r\n        </div>\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"GetStartedHeader\" style={{ fontSize: \"4vh\" }}>\r\n            Many Courses\r\n          </div>\r\n          <div className=\"WelcomeMessageText\" style={{ paddingTop: 0 }}>\r\n            And we will keep adding more!\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/WelcomeMessageSeven\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Continue</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessageCourses;\r\n", "import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport LottieAnimation from \"../LottieAnimation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction WelcomeMessageSeven() {\r\n  return (\r\n    <div className=\"WelcomeMessageContainer\">\r\n      <div className=\"WelcomeMessageImagesContainer\">\r\n        <div>\r\n          <LottieAnimation\r\n            lottieFile=\"https://qaleelo-assets.s3.us-east-2.amazonaws.com/General/LottieFiles/MuslimWomen.json\"\r\n            style={{ width: \"800px\", marginTop: \"400px\" }}\r\n          ></LottieAnimation>\r\n        </div>\r\n      </div>\r\n      <div className=\"WelcomeMessageFooter\">\r\n        <div className=\"MessageTopSection\">\r\n          <div className=\"WelcomeMessageText\" style={{ fontStyle: \"Italic\" }}>\r\n            \"I felt I can do the courses longer than I would read the same\r\n            content in a book.\"\r\n            <br /> - User\r\n          </div>\r\n        </div>\r\n        <div className=\"MessageMiddleSection\">\r\n          <Link\r\n            to={\"/LoginPage\"}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <button className=\"GetStartedButton\">Continue</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"MessageBottomSection\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeMessageSeven;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useAmazonContext } from \"./Contexts/AmazonContext\";\r\nimport Footer from \"./components/Footer\";\r\nimport Topic from \"./components/Topic\";\r\nimport Quiz from \"./components/Quiz\";\r\nimport Button from \"./components/Button\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { BrowserRouter as Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainSideNav from \"./components/sidebar/MainSideNav\";\r\nimport CourseMenuPage from \"./components/landingPage/CourseMenuPage\";\r\nimport CourseLandingPage from \"./components/landingPage/CourseLandingPage\";\r\nimport CourseStats from \"./components/landingPage/CourseStats\";\r\nimport LoginPage from \"./components/userAuth/LoginPage\";\r\nimport Logout from \"./components/userAuth/Logout\";\r\nimport LogoutMessage from \"./components/userAuth/LogoutMessage\";\r\nimport Lesson from \"./components/Lesson\";\r\nimport GetStarted from \"./components/userAuth/GetStarted\";\r\nimport WelcomeMessageOne from \"./components/userAuth/WelcomeMessageOne\";\r\nimport WelcomeMessageTwo from \"./components/userAuth/WelcomeMessageTwo\";\r\nimport WelcomeMessageThree from \"./components/userAuth/WelcomeMessageThree\";\r\nimport WelcomeMessageFour from \"./components/userAuth/WelcomeMessageFour\";\r\nimport LessonDemo from \"./components/LessonDemo\";\r\nimport WelcomeMessageFive from \"./components/userAuth/WelcomeMessageFive\";\r\nimport WelcomeMessageNotifications from \"./components/userAuth/WelcomeMessageNotifications\";\r\nimport WelcomeMessageCourses from \"./components/userAuth/WelcomeMessageCourses\";\r\nimport WelcomeMessageSeven from \"./components/userAuth/WelcomeMessageSeven\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// PrivateRoute prevents accessibilty of contents if the user is not logged in\r\nconst PrivateRoute = ({ component: Component, isLoggedIn, isTokenExpired, renewSession, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn && !isTokenExpired ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  // Initialize states\r\n  // Contains code to check the state if user is logged in and to check for login expiration time\r\n  const { courseTitleUserIsOn, entryStore, isDarkMode, setIsDarkMode } =\r\n    useAmazonContext();\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [tokenExpiration, setTokenExpiration] = useState(null);\r\n  const history = useHistory();\r\n\r\n  // Function to check if the token is expired\r\n  const isTokenExpired = () => {\r\n      return tokenExpiration && Date.now() > tokenExpiration;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check localStorage for authentication state and expiration time\r\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\r\n    const storedTokenExpiration = localStorage.getItem('tokenExpiration');\r\n\r\n    if (storedIsLoggedIn && storedTokenExpiration) {\r\n      // If authentication state and expiration time are found, check if token is still valid\r\n      const expirationTime = parseInt(storedTokenExpiration);\r\n      if (expirationTime > Date.now()) {\r\n        setIsLoggedIn(true);\r\n        setTokenExpiration(expirationTime);\r\n      } else {\r\n        // Token has expired, clear localStorage\r\n        localStorage.removeItem('isLoggedIn');\r\n        localStorage.removeItem('tokenExpiration');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Add a class to the body element based on the dark mode state\r\n  document.body.className = isDarkMode ? \"darkbody\" : \"lightbody\";\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Router and routes */}\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={() => (isLoggedIn ? <CourseMenuPage /> : <GetStarted />)}\r\n          />\r\n          <Route\r\n            path=\"/LoginPage\"\r\n            exact\r\n            render={() =>\r\n              isLoggedIn ? (\r\n                <CourseMenuPage />\r\n              ) : (\r\n                <LoginPage setIsLoggedIn={setIsLoggedIn} setTokenExpiration={setTokenExpiration} />\r\n              )\r\n            }\r\n          />\r\n\r\n          <Route\r\n            path=\"/WelcomeMessageOne\"\r\n            exact\r\n            component={WelcomeMessageOne}\r\n          />\r\n          <Route\r\n            path=\"/WelcomeMessageTwo\"\r\n            exact\r\n            component={WelcomeMessageTwo}\r\n          />\r\n          <Route\r\n            path=\"/WelcomeMessageThree\"\r\n            exact\r\n            component={WelcomeMessageThree}\r\n          />\r\n          <Route\r\n            path=\"/WelcomeMessageFour\"\r\n            exact\r\n            component={WelcomeMessageFour}\r\n          />\r\n          <Route\r\n            path=\"/WelcomeMessageFive\"\r\n            exact\r\n            component={WelcomeMessageFive}\r\n          />\r\n          <Route\r\n            path=\"/WelcomeMessageNotifications\"\r\n            exact\r\n            component={WelcomeMessageNotifications}\r\n          />\r\n          <Route\r\n            path=\"/WelcomeMessageSeven\"\r\n            exact\r\n            component={WelcomeMessageSeven}\r\n          />\r\n          <Route\r\n            path=\"/WelcomeMessageCourses\"\r\n            exact\r\n            component={WelcomeMessageCourses}\r\n          />\r\n          <Route path=\"/LoginPage\" exact component={LoginPage} />\r\n          <Route path=\"/LessonDemo\" exact component={LessonDemo} />\r\n\r\n          {/* Protected Routes */}\r\n          <PrivateRoute\r\n            path=\"/CourseMenuPage\"\r\n            exact\r\n            component={CourseMenuPage}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/:courseTitle/topic/:topicNumber\"\r\n            component={Topic}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/:courseTitle/quiz/:topicNumber\"\r\n            component={Quiz}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/:courseTitle/start\"\r\n            component={CourseLandingPage}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/:courseTitle/lesson/:lessonNumber\"\r\n            component={Lesson}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n          <Route\r\n            path=\"/LogoutMessage\"\r\n            render={() => <LogoutMessage setIsLoggedIn={setIsLoggedIn} />}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n", "// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n", "import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { AmazonContextProvider } from \"./Contexts/AmazonContext\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <AmazonContextProvider>\r\n      <App />\r\n    </AmazonContextProvider>\r\n  </div>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n"],
    "sourceRoot": ""
}