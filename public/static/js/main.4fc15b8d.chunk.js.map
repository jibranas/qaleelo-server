{
    "version": 3,
    "sources": ["components/Buttons.module.css", "components/Footer.js", "components/sidebar/HHLogo.png", "components/sidebar/HamburgerButton.js", "Contexts/AmazonContext.js", "components/sidebar/SideNavRow.js", "components/sidebar/SideNavContent.js", "components/sidebar/SubContainer.js", "components/sidebar/Sidenav.js", "components/sidebar/BackgroundPage.js", "components/sidebar/MainSideNav.js", "components/Button.js", "components/Buttons.js", "components/Example.js", "components/Topic.js", "Contexts/ScoreContext.js", "components/QuizExample.js", "components/ScoreCard.js", "components/quiz sidebar/HHLogo.png", "components/quiz sidebar/QuizHamburgerButton.js", "components/quiz sidebar/QuizSideNavRow.js", "components/quiz sidebar/QuizSideNavContent.js", "components/quiz sidebar/QuizSubContainer.js", "components/quiz sidebar/QuizSidenav.js", "components/quiz sidebar/QuizBackgroundPage.js", "components/quiz sidebar/QuizMainSideNav.js", "components/Quiz.js", "components/landingPage/CourseIcon.js", "components/landingPage/CourseMenu.js", "components/landingPage/CourseConentRow.js", "components/landingPage/CourseContent.js", "components/landingPage/CourseStats.js", "components/landingPage/CourseLandingPage.js", "App.js", "index.js"],
    "names": ["module", "exports", "FooterContainer", "styled", "footer", "FooterText", "p", "IconContainer", "div", "IconLink", "a", "Footer", "currentYear", "Date", "getFullYear", "href", "icon", "faGlobe", "size", "faFacebook", "faYoutube", "faInstagram", "faTwitter", "solidEnvelope", "HamburgerButton", "props", "className", "onClick", "click", "AmazonContext", "React", "createContext", "useAmazonContext", "useContext", "AmazonContextProvider", "useState", "subContainer", "setSubContainer", "subContainerEntries", "setSubContainerEntries", "entryStore", "setEntryStore", "topicDatafromBackEnd", "setTopicDatafromBackEnd", "exampleDatafromBackEnd", "setExampleDatafromBackEnd", "topicNumbersListfromBackEnd", "setTopicNumbersListfromBackEnd", "courseTitleUserIsOn", "setCourseTitleUserIsOn", "console", "log", "courseDetails", "setCourseDetails", "useEffect", "axios", "then", "response", "data", "value", "Provider", "children", "SideNavRow", "style", "styleVariable", "entries", "number", "title", "class", "SearchBarContainer", "SearchBar", "input", "SearchIcon", "SideNavContent", "searchTerm", "setSearchTerm", "filteredEntries", "setFilteredEntries", "filtered", "map", "entry", "filteredSubEntries", "filter", "subEntry", "subEntryMatches", "toLowerCase", "includes", "nestedEntryMatches", "some", "nestedEntry", "section", "length", "currentUrl", "window", "location", "currentUrlArray", "split", "topicAndSection", "topicAndSectionArray", "currentTopicNumber", "state", "animation", "faSearch", "type", "placeholder", "onChange", "e", "target", "index", "topicHeaderNumber", "rows", "topicNumber", "background", "to", "closeNav", "minHeight", "SubContainer", "currentSectionNumberState", "setCurrentSectionNumberState", "currentSectionNumber", "transform", "superEntry", "sectionNumber", "Sidenav", "courseTitle", "Transition", "in", "timeout", "unmountOnExit", "mountOnEnter", "BackgroundPage", "Navbar", "nav", "navTop", "QuizMeButton", "button", "Logo", "img", "ButtonH2", "MainSideNav", "navOpen", "setNavOpen", "rowClicked", "setRowClicked", "courseTopicsCollectionName", "courseTopicsModelName", "setCurrentUrlState", "currentTopicNumberState", "setCurrentTopicNumberState", "nextTopicNumberState", "setNextTopicNumberState", "previousTopicNumberState", "setPreviousTopicNumberState", "setNavTop", "lastScrollY", "scrollY", "addEventListener", "setCurrentUrl", "forEach", "indexofCurrentTopicNumber", "findIndex", "indexofNextTopicNumber", "nextTopicNumber", "indexofPreviousTopicNumber", "previousTopicNumber", "display", "position", "top", "zIndex", "src", "HHLogo", "alt", "selectedTopic", "sections", "fontSize", "margin", "faArrowLeft", "faArrowRight", "opacity", "mouse", "answerWrongAnime", "keyframes", "answerCorrectAnime", "ExampleBox", "ExampleQuestion", "ExampleAnswer", "answerClicked", "answer", "answerColor", "css", "AnswerExplanation", "Example", "setAnswerColor", "setAnswerClicked", "setAnswerClickedToPractice", "sectionExample", "answers", "shuffledAnswersState", "setShuffledAnswersState", "shuffledAnswers", "array", "randomIndex", "currentIndex", "Math", "floor", "random", "shuffle", "selectedSectionExamples", "allSectionExamples", "example", "arr", "num", "res", "i", "push", "chooseRandom", "question", "answerItem", "isCorrect", "explanation", "color", "glowAnime", "TopicTitle", "TopicDescription", "SectionTitle", "SectionDescription", "currentUrlSectionID", "NoteTitle", "NoteDescription", "Topic", "match", "params", "courseChosen", "find", "o", "replace", "setSelectedTopic", "topicNumberFromSideBar", "topicNumberFromSideBarArray", "courseExamplesCollectionName", "courseExamplesModelName", "undefined", "scrollTo", "behavior", "element", "document", "getElementById", "scrollIntoView", "sectionList", "chooseRandomExample", "needtoSelect", "ceil", "selectedSectionExamplesPool", "newselectedSectionExamplesPool", "finalSetOfExamplesToDisplay", "concat", "id", "topicTitle", "topicYoutubeLink", "marginLeft", "rel", "text", "topicDescription", "navigator", "share", "url", "clipboard", "writeText", "marginTop", "marginBottom", "width", "backgroundColor", "height", "borderRadius", "border", "sectionTitle", "sectonYoutubeLink", "decodeURIComponent", "sectionDescription", "sectionNotes", "join", "sectionNote", "ScoreContext", "SubmitButtonContext", "submitted", "QuizExample", "sumCorrect", "setSumCorrect", "answerClickedToPractice", "selectedAnswer", "setSelectedAnswer", "checkAnswer", "newAnswerList", "pushCorrectAnswer", "exampleIndex", "pushWrongAnswer", "textAlign", "ScoreCardBorder", "scorePercentage", "ScoreCardText", "ScoreMessage", "ScoreCardButtons", "ScoreCard", "setSubmitted", "useLocation", "sum", "reduce", "b", "round", "morePracticeHashLinkPath", "goBackTo", "comingFrom", "constructor", "Array", "finalExamplesOutput", "apply", "pathname", "scoreCardSelectedQuizQuestons", "QuizHamburgerButton", "QuizSideNavContent", "QuizSubContainer", "QuizSidenav", "QuizBackgroundPage", "StudyModeButton", "QuizMainSideNav", "QuizTitle", "SubmitButton", "Quiz", "whereDidIComeFrom", "justifyContent", "CourseIcon", "CourseMenu", "coursesDisplayed", "setCoursesDisplayed", "course", "CourseContentRow", "subMenuOpen", "setSubMenuOpen", "topic", "CourseContentWrapper", "CourseContent", "CourseStats", "numberOfLessons", "numberOfVideos", "numberOfTopicsWithSections", "j", "numberOfQuizQuestions", "approxCourseDuration", "CourseLandingPage", "navBarHeight", "courseDescription", "Object", "courseGoals", "goal", "App", "path", "exact", "component", "ReactDOM", "render"],
    "mappings": "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",
    "file": "static/js/main.4fc15b8d.chunk.js",
    "sourcesContent": ["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SampleButton\":\"Buttons_SampleButton__1mfjJ\"};", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFacebook,\r\n  faYoutube,\r\n  faInstagram,\r\n  faTwitter,\r\n  faEnvelope,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faEnvelope as solidEnvelope,\r\n  faGlobe,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst FooterContainer = styled.footer`\r\n  background: #f2f2f2;\r\n  padding: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst FooterText = styled.p`\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #888;\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst IconLink = styled.a`\r\n  color: #888;\r\n  margin-right: 10px;\r\n  &:hover {\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  // Your app's content and components\r\n\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <div>\r\n      {/* Your app's content */}\r\n      <FooterContainer>\r\n        <FooterText>\r\n          Copyright © {currentYear} Here for the Hereafter.\r\n          <br />A 501(c)(3) nonprofit organization dedicated to spreading\r\n          Islamic education.\r\n        </FooterText>\r\n        <IconContainer>\r\n          <IconLink href=\"https://www.hereforthehereafter.com\">\r\n            <FontAwesomeIcon icon={faGlobe} size=\"2x\" />\r\n          </IconLink>\r\n\r\n          <IconLink href=\"https://www.facebook.com/hereforthehereafter\">\r\n            <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\r\n          </IconLink>\r\n          <IconLink href=\"https://www.youtube.com/hereforthehereafter\">\r\n            <FontAwesomeIcon icon={faYoutube} size=\"2x\" />\r\n          </IconLink>\r\n          <IconLink href=\"https://www.instagram.com/hereforthehereafter\">\r\n            <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\r\n          </IconLink>\r\n          <IconLink href=\"https://www.twitter.com/herehereafter\">\r\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n          </IconLink>\r\n          <IconLink href=\"mailto:hereforthehereafter@gmail.com\">\r\n            <FontAwesomeIcon icon={solidEnvelope} size=\"2x\" />\r\n          </IconLink>\r\n        </IconContainer>\r\n      </FooterContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n", "export default __webpack_public_path__ + \"static/media/HHLogo.a975645f.png\";", "import React from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nexport default function HamburgerButton(props) {\r\n  return (\r\n    <div className=\"hamburger-btn\" onClick={props.click}>\r\n      &#9776;\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useContext, useState, useEffect } from \"react\";\r\nimport SidebarData from \"../components/SidebarData\";\r\nimport axios from \"axios\";\r\n\r\nexport const AmazonContext = React.createContext();\r\n\r\nexport function useAmazonContext() {\r\n  return useContext(AmazonContext);\r\n}\r\n\r\nexport function AmazonContextProvider(props) {\r\n  //Responsible for opening and closing the sub container\r\n  const [subContainer, setSubContainer] = useState(false);\r\n  //Responsible for storing the subContainers entries\r\n  const [subContainerEntries, setSubContainerEntries] = useState(null);\r\n  //Responsible for holding all of the data that goes into the navbar\r\n  const [entryStore, setEntryStore] = useState(null);\r\n  //Topic Data from BackEnd\r\n  const [topicDatafromBackEnd, setTopicDatafromBackEnd] = useState([]);\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n  //TopicNumbers List from BackEnd\r\n  const [topicNumbersListfromBackEnd, setTopicNumbersListfromBackEnd] =\r\n    useState([]);\r\n  //Responsible for holding course Title\r\n  const [courseTitleUserIsOn, setCourseTitleUserIsOn] = useState(\"\");\r\n  console.log(courseTitleUserIsOn);\r\n  //Responsible for holding course Title\r\n  const [courseDetails, setCourseDetails] = useState({});\r\n  console.log(courseDetails);\r\n  //To call TopicsData from the backend which will return all topics to the front end\r\n  useEffect(() => {\r\n    api.get(`/${courseTitleUserIsOn}/topicsData`).then((response) => {\r\n      setTopicDatafromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  //To call ExamplesData from the backend which will return all topics to the front end\r\n  useEffect(() => {\r\n    axios(\"/examplesData\").then((response) => {\r\n      setExampleDatafromBackEnd(response.data);\r\n    });\r\n  }, []);\r\n\r\n  //To call ExamplesData from the backend which will return all examples to the front end\r\n  useEffect(() => {\r\n    api.get(`/${courseTitleUserIsOn}/sideBarData`).then((response) => {\r\n      setEntryStore(response.data);\r\n    });\r\n  }, []);\r\n\r\n  //To call TopicNumbers from the backend which will return all topics numbers to the front end\r\n  useEffect(() => {\r\n    api.get(`/${courseTitleUserIsOn}/topicNumbersList`).then((response) => {\r\n      setTopicNumbersListfromBackEnd(response.data);\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"https://amazon-navbar.herokuapp.com/fetch\")\r\n  //     .then((response) => response.json())\r\n  //     .then((response) => {\r\n  //       setEntryStore(response);\r\n  //       // console.log(response);\r\n  //     });\r\n  // }, []);\r\n\r\n  // New Code\r\n\r\n  // const SidebarData = [\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"1.1\",\r\n  //         title: \"The purpose of this course\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"1.2\",\r\n  //         title: \"Qalimah\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab69680a5705404d68d9f9\",\r\n  //     title: \"Why Arabic?\",\r\n  //     topicHeaderNumber: \"1\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a0659\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.1.1\",\r\n  //         title: \"Ism Muntharif\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.1.2\",\r\n  //         title: \"Gair Muntharif Asma\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.1.3\",\r\n  //         title: \"Mabni Asma\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab69ee0a5705404d68d9fc\",\r\n  //     title: \"I'araab\",\r\n  //     topicHeaderNumber: \"2.1\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065a\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.2.1\",\r\n  //         title: \"Mu’annath\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.2\",\r\n  //         title: \"Mu’anath Haqeeqi\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.3\",\r\n  //         title: \"Mu’anath Gair Haqeeqi\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"1.2.1.1\",\r\n  //         title: \"Mua’nath Alamati\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"1.2.1.1\",\r\n  //             title: \"Mua’nath Alamati\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.1\",\r\n  //                 title: \"Gol Ta ة\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.2\",\r\n  //                 title: \"Alif Mamdoodah اء\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.3\",\r\n  //                 title: \"Alif Maqthoorah اى\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.4\",\r\n  //         title: \"Mua’nath Samai\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.5\",\r\n  //         title: \"How to convert Muthakkar to Mu’anath\",\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Jins\",\r\n  //     topicHeaderNumber: \"2.2\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: false,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.3.1\",\r\n  //         title: \"Wahid\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.2\",\r\n  //         title: \"Muthanna\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.3\",\r\n  //         title: \"Jam’a\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.4\",\r\n  //         title: \"Jam’a Saalim\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.3.5\",\r\n  //             title: \"Jam’a Saalim\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.3.5.1\",\r\n  //                 title: \"Jam’a Saalim Muthakkar\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.3.5.2\",\r\n  //                 title: \"Jama’a Saalim Mu’annath\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.6\",\r\n  //         title: \"Jam’a Saalim Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.7\",\r\n  //         title: \"Jam’a Mukassar\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.8\",\r\n  //         title: \"Jam’a Mukassar Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Adad\",\r\n  //     topicHeaderNumber: \"2.3\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.4.1\",\r\n  //         title: \"Test Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"3.1.1.1\",\r\n  //         title: \"Mu’arifah\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"3.1.1.1\",\r\n  //             title: \"Mu’arifah\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.1\",\r\n  //                 title: \"Ism Alam\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.2\",\r\n  //                 title: \"Ism Zamaa’ir\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.3\",\r\n  //                 title: \"Ism Ishaari\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.4\",\r\n  //                 title: \"Ism Mawthoola\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.2\",\r\n  //         title: \"Nakirah\",\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.3\",\r\n  //         title: \"Mua’rifah billam (How to make nakirah to Mua’rifah)\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.4\",\r\n  //         title: \"How would Al react with different forms of Ism\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.4.4\",\r\n  //             title: \"How would Al react with different forms of Ism\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.1\",\r\n  //                 title: \"Gair Muntharif Asma reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.2\",\r\n  //                 title: \"Ism Muthanna reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.3\",\r\n  //                 title: \"Jam’a reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.4\",\r\n  //                 title: \"Jama’a Saalim reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.5\",\r\n  //                 title: \"Jama’a Mukassar reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.6\",\r\n  //                 title: \"Mabni Asma Reacting to Al\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.5\",\r\n  //         title: \"Some things about Al\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.4.5\",\r\n  //             title: \"Some things about Al\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.1\",\r\n  //                 title: \"Components of Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.2\",\r\n  //                 title: \"When to pronounce L (Kamri vs Shamsi Huruf)\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.3\",\r\n  //                 title: \"Arabs sometimes make an exception\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Wus’at\",\r\n  //     topicHeaderNumber: \"2.4\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: false,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  // ];\r\n\r\n  //Decide here which SidebarData to send to application:\r\n\r\n  // useEffect(() => {\r\n  //   setEntryStore(SidebarData);\r\n  // }, []);\r\n\r\n  // Sending all the important data above as values in other parts of the application:\r\n\r\n  const value = {\r\n    subContainer,\r\n    setSubContainer,\r\n    subContainerEntries,\r\n    setSubContainerEntries,\r\n    entryStore,\r\n    setEntryStore,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    topicNumbersListfromBackEnd,\r\n    setTopicNumbersListfromBackEnd,\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n  };\r\n\r\n  return (\r\n    <AmazonContext.Provider value={value}>\r\n      {props.children}\r\n    </AmazonContext.Provider>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\n\r\nexport default function SideNavRow(props) {\r\n  const { setSubContainer, setSubContainerEntries } = useAmazonContext();\r\n\r\n  const openRow = () => {\r\n    setSubContainer(true);\r\n    setSubContainerEntries(props.entries);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidenavRow\"\r\n      style={props.styleVariable}\r\n      onClick={() => props.entries && openRow()}\r\n    >\r\n      <div className=\"sidenavRowText\">\r\n        {props.number}\r\n        &nbsp; &nbsp;\r\n        {props.title}\r\n      </div>\r\n      <i class=\"fas fa-chevron-right\"></i>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport SideNavRow from \"./SideNavRow\";\r\nimport styled from \"styled-components\";\r\nimport DropDown from \"./DropDown\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CourseContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  height: 100%; /* Ensure the div takes full height */\r\n`;\r\n\r\nconst SearchBarContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 700px;\r\n  margin-bottom: 20px;\r\n  margin-right: 50px;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 10px;\r\n  padding-left: 70px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-size: 3vh;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst SearchIcon = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 10px;\r\n  font-size: 3vh;\r\n`;\r\n\r\nexport default function SideNavContent(props) {\r\n  const { courseTitleUserIsOn, entryStore } = useAmazonContext();\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State for the search term\r\n  const [filteredEntries, setFilteredEntries] = useState([]); // State for filtered entries\r\n\r\n  // Filter the entries based on the search term\r\n  useEffect(() => {\r\n    if (entryStore && searchTerm) {\r\n      const filtered = entryStore\r\n        .map((entry) => {\r\n          const filteredSubEntries = entry.entries.filter((subEntry) => {\r\n            const subEntryMatches = subEntry.title\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase());\r\n            const nestedEntryMatches =\r\n              subEntry.entries &&\r\n              subEntry.entries.some((nestedEntry) =>\r\n                nestedEntry.entries.some(\r\n                  (section) =>\r\n                    section.title &&\r\n                    section.title\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase())\r\n                )\r\n              );\r\n            return subEntryMatches || nestedEntryMatches;\r\n          });\r\n          return { ...entry, entries: filteredSubEntries };\r\n        })\r\n        .filter((entry) => entry.entries.length > 0);\r\n      setFilteredEntries(filtered);\r\n    } else {\r\n      setFilteredEntries(entryStore);\r\n    }\r\n  }, [entryStore, searchTerm]);\r\n\r\n  console.log(entryStore);\r\n  console.log(entryStore, courseTitleUserIsOn);\r\n  const [dropDownEntries, setDropDownEntries] = useState(null);\r\n\r\n  let currentUrl = window.location.href;\r\n  console.log(currentUrl);\r\n  // setCurrentUrlState(currentUrl);\r\n  let currentUrlArray = currentUrl.split(\"/\");\r\n  console.log(currentUrlArray);\r\n  let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n  console.log(topicAndSection);\r\n  //Handling%23 in URL\r\n  var topicAndSectionArray = [];\r\n\r\n  if (topicAndSection.includes(\"%\")) {\r\n    topicAndSectionArray = topicAndSection.split(\"%23\");\r\n  } else {\r\n    topicAndSectionArray = topicAndSection.split(\"#\");\r\n  }\r\n  console.log(topicAndSectionArray);\r\n  let currentTopicNumber = topicAndSectionArray[0];\r\n  let currentSectionNumber = topicAndSectionArray[1];\r\n  console.log(currentTopicNumber);\r\n\r\n  return (\r\n    <div\r\n      className=\"sideNavContainer\"\r\n      style={\r\n        props.state === \"exiting\"\r\n          ? { animation: \"moveMainContainer .3s forwards\" }\r\n          : props.state === \"entering\"\r\n          ? { animation: \"moveMainContainer .3s reverse backwards\" }\r\n          : null\r\n      }\r\n    >\r\n      <SearchBarContainer>\r\n        <SearchIcon>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n        </SearchIcon>\r\n        <SearchBar\r\n          type=\"text\"\r\n          placeholder=\"Search for a Topic\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        ></SearchBar>\r\n      </SearchBarContainer>\r\n      {filteredEntries &&\r\n        filteredEntries.map((entry, index) => {\r\n          return (\r\n            <div>\r\n              <div className=\"sidenavContentHeaderMainMenu\">\r\n                {entry.topicHeaderNumber && entry.topicHeaderNumber}\r\n                &nbsp; &nbsp;\r\n                {entry.title}\r\n              </div>\r\n              {entry.entries.map((subEntry, index) => {\r\n                return (\r\n                  <div>\r\n                    {subEntry.rows ? (\r\n                      <SideNavRow\r\n                        number={subEntry.topicNumber}\r\n                        title={subEntry.title}\r\n                        entries={subEntry.entries}\r\n                        styleVariable={\r\n                          subEntry.topicNumber == currentTopicNumber\r\n                            ? { background: \"#dfdfdf\" }\r\n                            : {}\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <Link\r\n                        to={`/${courseTitleUserIsOn}/topic/${subEntry.topicNumber}`}\r\n                      >\r\n                        <div\r\n                          className=\"sidenavContent\"\r\n                          onClick={props.closeNav}\r\n                          style={\r\n                            subEntry.topicNumber == currentTopicNumber\r\n                              ? { background: \"#dfdfdf\" }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          {subEntry.topicNumber && subEntry.topicNumber}\r\n                          &nbsp; &nbsp;\r\n                          {subEntry.title}\r\n                        </div>\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      <div style={{ minHeight: \"60px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useEffect, useState } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport SideNavRow from \"./SideNavRow\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nexport default function SubContainer(props) {\r\n  const { subContainerEntries, setSubContainer, courseTitleUserIsOn } =\r\n    useAmazonContext();\r\n  const [currentSectionNumberState, setCurrentSectionNumberState] =\r\n    useState(\"\");\r\n\r\n  //Code to set current section state so that it can be used to check which section was clicked to colour code it\r\n  useEffect(() => {\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n    console.log(topicAndSection);\r\n    //Handling%23 in URL\r\n    var topicAndSectionArray = [];\r\n\r\n    if (topicAndSection.includes(\"%\")) {\r\n      topicAndSectionArray = topicAndSection.split(\"%23\");\r\n    } else {\r\n      topicAndSectionArray = topicAndSection.split(\"#\");\r\n    }\r\n    console.log(topicAndSectionArray);\r\n    let currentSectionNumber = topicAndSectionArray[1];\r\n    console.log(currentSectionNumber);\r\n    setCurrentSectionNumberState(currentSectionNumber);\r\n  }, []);\r\n  //End\r\n\r\n  return (\r\n    <div\r\n      className=\"sub-container\"\r\n      style={\r\n        props.state === \"entering\"\r\n          ? { animation: \"moveSubContainer .3s forwards\" }\r\n          : props.state === \"entered\"\r\n          ? { transform: \"translateX(0px)\" }\r\n          : { animation: \"moveSubContainer .3s reverse backwards\" }\r\n      }\r\n    >\r\n      <div className=\"sub-header\" onClick={() => setSubContainer(false)}>\r\n        <i class=\"fas fa-chevron-left\"></i> MAIN MENU\r\n      </div>\r\n      {subContainerEntries.map((subEntry) => (\r\n        <>\r\n          <Link to={`/${courseTitleUserIsOn}/topic/${subEntry.topicNumber}`}>\r\n            <div\r\n              className=\"sidenavContentHeaderSubContainer\"\r\n              onClick={props.closeNav}\r\n            >\r\n              {subEntry.topicNumber}&nbsp;&nbsp;{subEntry.title}\r\n            </div>\r\n          </Link>\r\n          {subEntry.entries.map((superEntry) => (\r\n            <HashLink\r\n              to={`/${courseTitleUserIsOn}/topic/${subEntry.topicNumber}#${superEntry.sectionNumber}`}\r\n            >\r\n              <div onClick={props.closeNav}>\r\n                <SideNavRow\r\n                  number={superEntry.sectionNumber}\r\n                  title={superEntry.title}\r\n                  styleVariable={\r\n                    superEntry.sectionNumber == currentSectionNumberState\r\n                      ? { background: \"#ebebeb\" }\r\n                      : {}\r\n                  }\r\n                />\r\n              </div>\r\n            </HashLink>\r\n          ))}\r\n        </>\r\n      ))}\r\n      <div style={{ minHeight: \"60px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SideNavContent from \"./SideNavContent\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport SubContainer from \"./SubContainer\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\n\r\nexport default function Sidenav(props) {\r\n  let {\r\n    subContainer,\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    entryStore,\r\n    setEntryStore,\r\n  } = useAmazonContext();\r\n  return (\r\n    <div\r\n      className=\"sidenav\"\r\n      style={\r\n        props.state === \"entering\"\r\n          ? { animation: \"moveSideBar .3s forwards\" }\r\n          : props.state === \"entered\"\r\n          ? { transform: \"translateX(-0px)\" }\r\n          : { animation: \"moveSideBar .3s reverse backwards\" }\r\n      }\r\n    >\r\n      <div className=\"sidenavHeader\" style={{ background: \"#fcebeb\" }}>\r\n        {courseDetails.courseTitle}\r\n      </div>\r\n      <Transition in={!subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => <SideNavContent state={state} closeNav={props.click} />}\r\n      </Transition>\r\n      <Transition in={subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => <SubContainer state={state} closeNav={props.click} />}\r\n      </Transition>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction BackgroundPage(props) {\r\n  return (\r\n    <div>\r\n      <p></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackgroundPage;\r\n", "import React, { useEffect } from \"react\";\r\nimport HHLogo from \"./HHLogo.png\";\r\nimport HamburgerButton from \"./HamburgerButton\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport Sidenav from \"./Sidenav\";\r\nimport BackgroundPage from \"./BackgroundPage\";\r\nimport { useState } from \"react\";\r\nimport { Transition, TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  AmazonContextProvider,\r\n  useAmazonContext,\r\n} from \"../../Contexts/AmazonContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navbar = styled.nav`\r\n  background: #eb8381;\r\n  /* top: 80; */\r\n  height: 6vh;\r\n  transform: translateY(${(props) => props.navTop + \"vh\"});\r\n  transition: 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst QuizMeButton = styled.button`\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  /* margin: 20px; */\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2.5vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: white;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  height: 6vh;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 6vh; /* Adjust the width as needed */\r\n  height: 6vh; /* Adjust the height as needed */\r\n  margin-left: 70px; /* Adjust the margin as needed */\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  position: relative;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 4vh;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: #f8f6f0;\r\n  height: 6vh;\r\n\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ToggleButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-size: 1.5vh;\r\n  font-weight: bold;\r\n  color: #f8f6f0;\r\n  cursor: pointer;\r\n  outline: none;\r\n  position: relative;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 70px;\r\n  height: 35px;\r\n  background-color: #bbb;\r\n  border-radius: 35px;\r\n  transition: background-color 0.3s;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 2.5px;\r\n    left: 2.5px;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    background-color: white;\r\n    transition: left 0.3s;\r\n  }\r\n\r\n  &.study {\r\n    background-color: #eb8381;\r\n    &:after {\r\n      left: 37.5px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function MainSideNav(props) {\r\n  const [navOpen, setNavOpen] = useState(false);\r\n  const [topicNumbersListfromBackEnd, setTopicNumbersListfromBackEnd] =\r\n    useState([]);\r\n  // const [entryStore, setEntryStore] = useState([]);\r\n  const {\r\n    courseTitleUserIsOn,\r\n    entryStore,\r\n    setEntryStore,\r\n    courseDetails,\r\n    setSubContainerEntries,\r\n    subContainer,\r\n    setSubContainer,\r\n    rowClicked,\r\n    setRowClicked,\r\n  } = useAmazonContext();\r\n  console.log(courseTitleUserIsOn, courseDetails, entryStore);\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/topicNumbersList?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setTopicNumbersListfromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(topicNumbersListfromBackEnd);\r\n  //This use Effect is needed incase someone lands onto the topic page first, (we are loading sidebar data on the landing page, but need it for the topic page too)\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/sideBarData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setEntryStore(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(entryStore);\r\n\r\n  const [currentUrlState, setCurrentUrlState] = useState(\"0\");\r\n  const [currentTopicNumberState, setCurrentTopicNumberState] = useState(\"0\");\r\n  const [nextTopicNumberState, setNextTopicNumberState] = useState(\"0\");\r\n  const [previousTopicNumberState, setPreviousTopicNumberState] = useState(\"0\");\r\n\r\n  //Code for nav to hide scroll down and show on scroll up\r\n  const [navTop, setNavTop] = useState(0);\r\n  var lastScrollY = window.scrollY;\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (lastScrollY < window.scrollY) {\r\n      setNavTop(-6); //needs to be same as Nav Height defined above\r\n    } else {\r\n      setNavTop(0);\r\n    }\r\n    lastScrollY = window.scrollY;\r\n  });\r\n  //End\r\n\r\n  const openNav = () => {\r\n    setNavOpen(true);\r\n  };\r\n\r\n  const closeNav = () => {\r\n    setNavOpen(false);\r\n  };\r\n\r\n  //Logic for next and previous buttons\r\n  console.log(topicNumbersListfromBackEnd);\r\n  // Step 0.1 I needed this for this component to re-render any time the currentUrl changed, so that re-render would run the useEffect below:\r\n  const setCurrentUrl = () => {\r\n    var currentUrl = window.location.href;\r\n    setCurrentUrlState(currentUrl);\r\n    console.log(currentUrl);\r\n\r\n    if (entryStore) {\r\n      entryStore.forEach(function (entry) {\r\n        entry.entries.forEach(function (subEntry) {\r\n          if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == true\r\n          ) {\r\n            console.log(currentTopicNumberState);\r\n            console.log(subEntry.entries);\r\n            setSubContainer(true);\r\n            setSubContainerEntries(subEntry.entries);\r\n          } else if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == false &&\r\n            subContainer == true\r\n          ) {\r\n            console.log(subEntry.entries);\r\n            setSubContainer(false);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Step 1 obtain current topic:\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n    console.log(topicAndSection);\r\n    //Handling%23 in URL\r\n    var topicAndSectionArray = [];\r\n\r\n    if (topicAndSection.includes(\"%\")) {\r\n      topicAndSectionArray = topicAndSection.split(\"%23\");\r\n    } else {\r\n      topicAndSectionArray = topicAndSection.split(\"#\");\r\n    }\r\n    console.log(topicAndSectionArray);\r\n    let currentTopicNumber = topicAndSectionArray[0];\r\n    console.log(currentTopicNumber);\r\n    setCurrentTopicNumberState(currentTopicNumber);\r\n    //Step 2 Find the index of the currentTopicNumber in list of topic numbers from back end\r\n\r\n    let indexofCurrentTopicNumber = topicNumbersListfromBackEnd.findIndex(\r\n      (topicNumber) => topicNumber == currentTopicNumber\r\n    );\r\n    console.log(indexofCurrentTopicNumber);\r\n\r\n    //Step 3 Derive next topic number in list with catch error for out of bound index\r\n    let indexofNextTopicNumber = indexofCurrentTopicNumber + 1;\r\n    if (indexofNextTopicNumber > topicNumbersListfromBackEnd.length - 1) {\r\n      //if next index great then lenght of array set index number to 0 so you go back to beginning\r\n      indexofNextTopicNumber = 0;\r\n    }\r\n    console.log(indexofNextTopicNumber);\r\n    let nextTopicNumber = topicNumbersListfromBackEnd[indexofNextTopicNumber];\r\n    console.log(nextTopicNumber);\r\n    setNextTopicNumberState(nextTopicNumber);\r\n\r\n    //Step 4 Derive previous topic number in list with catch error for out of bound index\r\n    let indexofPreviousTopicNumber = indexofCurrentTopicNumber - 1;\r\n    if (indexofPreviousTopicNumber < 0) {\r\n      //if next index less then 0 set index number to last so you go back to ending\r\n      indexofPreviousTopicNumber = topicNumbersListfromBackEnd.length - 1;\r\n    }\r\n    console.log(indexofPreviousTopicNumber);\r\n    let previousTopicNumber =\r\n      topicNumbersListfromBackEnd[indexofPreviousTopicNumber];\r\n    console.log(previousTopicNumber);\r\n    setPreviousTopicNumberState(previousTopicNumber);\r\n\r\n    //Step 5 - Change sidebar to show menu based on current topic\r\n    console.log(entryStore); // when code below uncommetned it is saying entrystroe has no properties\r\n\r\n    // if (entryStore) {\r\n    //   entryStore.forEach(function (entry) {\r\n    //     entry.entries.forEach(function (subEntry) {\r\n    //       if (\r\n    //         subEntry.topicNumber == currentTopicNumberState &&\r\n    //         subEntry.rows == true\r\n    //       ) {\r\n    //         console.log(subEntry.entries);\r\n    //         setSubContainerEntries(subEntry.entries);\r\n    //         // setSubContainer(true);\r\n    //       }\r\n    //       // else if (\r\n    //       //   subEntry.topicNumber == currentTopicNumberState &&\r\n    //       //   subEntry.rows == false &&\r\n    //       //   subContainer == true\r\n    //       // ) {\r\n    //       //   console.log(subEntry.entries);\r\n    //       //   setSubContainer(false);\r\n    //       // }\r\n    //     });\r\n    //   });\r\n    // }\r\n\r\n    //End\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"unset\" }}>\r\n      <Navbar\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 1,\r\n        }}\r\n        navTop={navTop}\r\n      >\r\n        <div>\r\n          <HamburgerButton click={openNav}></HamburgerButton>{\" \"}\r\n          <Logo src={HHLogo} alt=\"Logo\" />{\" \"}\r\n        </div>\r\n        <Link\r\n          to={`/${courseTitleUserIsOn}/quiz/` + props.selectedTopic.topicNumber}\r\n        >\r\n          {props.selectedTopic.sections.length !== 0 && (\r\n            <QuizMeButton>\r\n              <p style={{ fontSize: \"1.5vh\", margin: \"0px\" }}>Switch to</p>\r\n              <b>Quiz Mode</b>\r\n            </QuizMeButton>\r\n          )}\r\n        </Link>\r\n        <div>\r\n          <Link\r\n            to={`/${courseTitleUserIsOn}/topic/${previousTopicNumberState}`}\r\n          >\r\n            <ButtonH2 onClick={setCurrentUrl}>\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n            </ButtonH2>\r\n          </Link>\r\n\r\n          <Link to={`/${courseTitleUserIsOn}/topic/${nextTopicNumberState}`}>\r\n            <ButtonH2 onClick={setCurrentUrl}>\r\n              {\" \"}\r\n              <FontAwesomeIcon icon={faArrowRight} />\r\n            </ButtonH2>\r\n          </Link>\r\n        </div>\r\n      </Navbar>\r\n\r\n      <Transition\r\n        in={navOpen && entryStore}\r\n        timeout={300}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        {(state) => {\r\n          {\r\n            /* if (state === \"exited\") setSubContainer(false); */\r\n          } //Code for NavBar to reset to main menu every time it closes\r\n          return (\r\n            <>\r\n              <Sidenav state={state} click={closeNav} />\r\n              <div\r\n                className=\"overlay\"\r\n                style={\r\n                  state === \"entering\"\r\n                    ? { animation: \"show .3s forwards\" }\r\n                    : state === \"entered\"\r\n                    ? { opacity: \"1\" }\r\n                    : { animation: \"show .3s backwards reverse\" }\r\n                }\r\n                onClick={closeNav}\r\n              ></div>\r\n              {\r\n                <div\r\n                  className=\"closeBtn\"\r\n                  style={\r\n                    state === \"entering\"\r\n                      ? { animation: \"show .3s forwards\" }\r\n                      : state === \"entered\"\r\n                      ? { opacity: \"1\" }\r\n                      : { animation: \"show .3s backwards reverse\" }\r\n                  }\r\n                  onClick={closeNav}\r\n                >\r\n                  &times;\r\n                </div> //This is code for a close button\r\n              }\r\n            </>\r\n          );\r\n        }}\r\n      </Transition>\r\n\r\n      <BackgroundPage></BackgroundPage>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport styles from \"./Buttons.module.css\";\r\n//Random comment\r\nconst Buttonn = styled.button`\r\n  font-family: \"Century Gothic\", serif;\r\n  padding: 10px 50px;\r\n  color: ${(props) => (props.mouse ? \"red\" : \"blue\")};\r\n  font-size: 50px;\r\n`;\r\n\r\nfunction Button() {\r\n  const [mouse, setMouse] = useState(false);\r\n\r\n  const mouseDown = () => setMouse(!mouse);\r\n  const Share = () => {\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        text: \"Sharing for first time\",\r\n        url: \"/#/topic/2.2#2.2.1\",\r\n        title: \"The Number of Pillars\",\r\n      });\r\n    } else {\r\n      navigator.clipboard.writeText(\"Copied to Clipboard\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Buttonn className={styles.SampleButton} onClick={Share}>\r\n      Share\r\n    </Buttonn>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n", "import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonH2c = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ButtonH1c = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 25px;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nexport const ButtonH2 = (props) => {\r\n  return <ButtonH2c>{props.children}</ButtonH2c>;\r\n};\r\n\r\nexport const ButtonH1 = (props) => {\r\n  return <ButtonH1c>{props.children}</ButtonH1c>;\r\n};\r\n\r\nexport default ButtonH2;\r\n", "import React, { useState, useContext, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport ButtonH2 from \"./Buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { allExampleData } from \"./TopicData\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\n\r\nconst answerWrongAnime = keyframes`\r\n0%{transform: scale(1)}\r\n20%{transform: scale(1.2)}\r\n50%{transform: scale(1)}\r\n75%{transform: scale(1.2)}\r\n100%{transform: scale(1)}\r\n`;\r\n\r\nconst answerCorrectAnime = keyframes`\r\n0%{transform: scale(1)}\r\n50%{transform: scale(2)}\r\n100%{transform: scale(1)}\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n0%{opacity: 0}\r\n100%{opacity: 1}\r\n`;\r\n\r\nconst ExampleBox = styled.div`\r\n  /* box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2); */\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  /* background: #252525; */\r\n  margin-top: 40px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst ExampleQuestion = styled.div`\r\n  /* font-size: 17px; */\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #eb8381;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ExampleAnswer = styled.div`\r\n  font-size: 2.2vh;\r\n  text-align: center;\r\n  font-family: Quicksand;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  color: #252525;\r\n  display: flex;\r\n  background: ${(props) =>\r\n    props.answerClicked == props.answer ? props.answerColor : \"#fcebeb\"};\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  transition: transform 300ms;\r\n  justify-content: center;\r\n  animation: ${(props) =>\r\n    props.answerClicked == props.answer && props.answerColor == \"#DAF7A6\"\r\n      ? css`\r\n          ${answerCorrectAnime} 1s cubic-bezier(1,-0.74,.42,.57)\r\n        `\r\n      : props.answerClicked == props.answer && props.answerColor == \"#ff726f\"\r\n      ? css`\r\n          ${answerWrongAnime} 400ms\r\n        `\r\n      : \"none\"};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst AnswerExplanation = styled.div`\r\n  font-size: 2vh;\r\n  display: ${(props) =>\r\n    props.answerClicked == props.answer ? \"flex\" : \"none\"};\r\n  align-items: center;\r\n  justify-content: center;\r\n  animation: ${(props) =>\r\n    props.answerClicked == props.answer && props.answerColor == \"#DAF7A6\"\r\n      ? css`\r\n          shakeY 1s\r\n        `\r\n      : props.answerClicked == props.answer && props.answerColor == \"#ff726f\"\r\n      ? css`\r\n          fadeIn 1s\r\n        `\r\n      : \"none\"};\r\n`;\r\n\r\nconst Example = (props) => {\r\n  console.log(props);\r\n  //Obtain Example Data from back end\r\n  const { exampleDatafromBackEnd, courseTitleUserIsOn } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  const [answerColor, setAnswerColor] = useState(\"#fcebeb\");\r\n  const [answerClicked, setAnswerClicked] = useState(\"NoAnswer\");\r\n  const [answerClickedToPractice, setAnswerClickedToPractice] = useState(false);\r\n\r\n  //Shuffling the answers start - note this seems to be also changing shuffled answers in eg quiz\r\n\r\n  function shuffle(array) {\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex != 0) {\r\n      // Pick a remaining element.\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n\r\n    return array;\r\n  }\r\n  const [shuffledAnswersState, setShuffledAnswersState] = useState(\r\n    props.sectionExample && props.sectionExample.answers\r\n  );\r\n  useEffect(() => {\r\n    let shuffledAnswers =\r\n      props.sectionExample && shuffle(props.sectionExample.answers);\r\n    setShuffledAnswersState(shuffledAnswers);\r\n  }, [props.sectionExample]);\r\n\r\n  console.log(props.sectionExample && props.sectionExample.answers);\r\n\r\n  // Shuffle Answers end\r\n\r\n  const checkAnswer = (isCorrect, answer) => {\r\n    setAnswerClicked(answer);\r\n    setAnswerClickedToPractice(true);\r\n    console.log(answerClicked);\r\n\r\n    if (isCorrect == true) {\r\n      setAnswerColor(\"#DAF7A6\");\r\n\r\n      console.log(answerColor);\r\n    } else {\r\n      setAnswerColor(\"#ff726f\");\r\n    }\r\n  };\r\n\r\n  // Randomiser function to create quiz for section\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n\r\n  let needToDisplay = 3;\r\n  let selectedSectionExamples = []; //(Will be displayed on the Quiz page for this section)\r\n\r\n  // Algorithm for obtaining questions from this section (Will be displayed on the Quiz page for this section):\r\n  let allSectionExamples = exampleDatafromBackEnd.filter(\r\n    (example) => example.sectionNumber == props.section\r\n  );\r\n  if (allSectionExamples.length > needToDisplay) {\r\n    selectedSectionExamples = chooseRandom(allSectionExamples, needToDisplay);\r\n  } else {\r\n    selectedSectionExamples = allSectionExamples;\r\n  }\r\n\r\n  console.log(selectedSectionExamples);\r\n\r\n  return (\r\n    <ExampleBox>\r\n      <ExampleQuestion>\r\n        {props.sectionExample && props.sectionExample.question}\r\n      </ExampleQuestion>\r\n      {shuffledAnswersState &&\r\n        shuffledAnswersState.map((answerItem) => {\r\n          return (\r\n            <>\r\n              <ExampleAnswer\r\n                onClick={() =>\r\n                  checkAnswer(answerItem.isCorrect, answerItem.answer)\r\n                }\r\n                answerColor={answerColor}\r\n                answer={answerItem.answer}\r\n                answerClicked={answerClicked}\r\n              >\r\n                <p>{answerItem.answer}</p>\r\n              </ExampleAnswer>\r\n              {\r\n                <AnswerExplanation\r\n                  answerClicked={answerClicked}\r\n                  answer={answerItem.answer}\r\n                  answerColor={answerColor}\r\n                >\r\n                  {answerItem.explanation ? (\r\n                    <>\r\n                      <p\r\n                        style={{\r\n                          color: \"red\",\r\n                          display: \"inline\",\r\n                          fontSize: \"25px\",\r\n                          margin: \"0 10px\",\r\n                        }}\r\n                      >\r\n                        ✖\r\n                      </p>\r\n                      <p\r\n                        style={{\r\n                          display: \"inline\",\r\n                        }}\r\n                      >\r\n                        {answerItem.explanation}\r\n                      </p>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <p\r\n                        style={{\r\n                          color: \"green\",\r\n                          display: \"inline\",\r\n                          fontSize: \"25px\",\r\n                          margin: \"0 10px 0 0\",\r\n                        }}\r\n                      >\r\n                        ✓\r\n                      </p>{\" \"}\r\n                      <p>Correct!</p>\r\n                    </>\r\n                  )}\r\n                </AnswerExplanation>\r\n              }\r\n            </>\r\n          );\r\n        })}\r\n      {/* <div\r\n        style={\r\n          answerClickedToPractice\r\n            ? { display: \"block\", marginTop: \"30px\", textAlign: \"center\" }\r\n            : { display: \"none\" }\r\n        }\r\n      >\r\n        <Link\r\n          to={{\r\n            pathname:\r\n              `/${courseTitleUserIsOn}/quiz/` +\r\n              props.topicNumber +\r\n              \"/\" +\r\n              props.section,\r\n            state: {\r\n              comingFrom: \"Section\",\r\n              sectionSelectedQuizQuestions: selectedSectionExamples,\r\n              section: props.section, //Section number that came from Topic page, could have also used selectionExample's section number\r\n            },\r\n          }}\r\n        >\r\n          <ButtonH2>\r\n            <b style={{ fontSize: \"2vh\" }}>Practice</b> <br></br>\r\n            <p style={{ fontSize: \"1.5vh\", margin: \"0px\" }}>\r\n              {props.sectionTitle}\r\n            </p>\r\n          </ButtonH2>\r\n        </Link>\r\n      </div> */}\r\n    </ExampleBox>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport TopicData, { allExampleData } from \"./TopicData\";\r\nimport MainSideNav from \"./sidebar/MainSideNav\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\n// import ButtonH2 from \"./Buttons\";\r\nimport Example from \"./Example.js\";\r\n\r\n//This is how you write a comment\r\n\r\nconst glowAnime = keyframes`\r\n0%{transform: scale(1); box-shadow: 0 0 0px rgba(0,0,0,0);}\r\n20%{transform: scale(1.01); background: #fcebeb; box-shadow: 0 0 20px #eb8381;}\r\n50%{transform: scale(1); box-shadow: 0 0 0px rgba(0,0,0,0);}\r\n`;\r\nconsole.log(\"Rendered\");\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  margin-right: \"20px\";\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #fcebeb;\r\n  color: #252525;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #fcebeb;\r\n  }\r\n`;\r\n\r\nconst QuizMeButton = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  margin: 20px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 3vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: white;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst TopicTitle = styled.div`\r\n  color: #eb8381;\r\n  /* font-size: 1rem; */\r\n  /* font-size: clamp(4vh, 30px, 30px); */\r\n  /* font-size: min(2rem, 4vh); */\r\n  font-size: 4vh;\r\n  display: block;\r\n  margin: 30px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n\r\n  /* @media (max-width: 40em) {\r\n    font-size: 5vh;\r\n  } */\r\n\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst TopicDescription = styled.div`\r\n  background: #f8f6f0;\r\n  color: #252525;\r\n  /* height: 30vh; */\r\n  /* font-size: 1.2rem; */\r\n  font-size: 2.2vh;\r\n\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n  padding: 20px;\r\n  box-shadow: 0 0.1rem 0.1rem rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  position: relative;\r\n\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  /* padding: 20px; */\r\n`;\r\n\r\nconst SectionTitle = styled.p`\r\n  color: #eb8381;\r\n  /* font-size: 20px; */\r\n  /* font-size: clamp(3vh, 20px, 20px); */\r\n  font-size: 3vh;\r\n  display: block;\r\n  margin-bottom: 50px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst SectionDescription = styled.div`\r\n  /* height: 30vh; */\r\n  /* font-size: 20px; */\r\n  background: #252525;\r\n  color: #f8f6f0;\r\n  font-size: 2vh;\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n  padding: 20px;\r\n  box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.5);\r\n  display: block;\r\n  position: relative;\r\n  align-items: center;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  /* padding: 20px; */\r\n  animation: ${(props) =>\r\n    props.sectionNumber == props.currentUrlSectionID\r\n      ? css`\r\n          ${glowAnime} 2s\r\n        `\r\n      : \"none\"};\r\n`;\r\n\r\nconst NoteTitle = styled.p`\r\n  background: #eb8381;\r\n  align-items: center;\r\n  color: #252525;\r\n  /* font-size: 18px; */\r\n  font-size: 2vh;\r\n  display: inline-block;\r\n  margin-bottom: 10px;\r\n  padding-right: 10px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst NoteDescription = styled.p`\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  margin-left: 30px;\r\n`;\r\n\r\nexport const Topic = (props) => {\r\n  //set the courseTitle for whatever course the User is on here as well as course landing page in case a user is lands onto a topic page directly\r\n  let {\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n  } = useAmazonContext();\r\n\r\n  console.log(courseDetails);\r\n  useEffect(() => {\r\n    setCourseTitleUserIsOn(props.match.params.courseTitle);\r\n  }, []);\r\n  console.log(courseTitleUserIsOn);\r\n  console.log(props.match.params.courseTitle);\r\n  //set the course Details\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      console.log(response.data);\r\n      let allCourses = response.data;\r\n      let courseChosen = allCourses.find(\r\n        (o) =>\r\n          o.courseTitle.replace(/\\s/g, \"\") === props.match.params.courseTitle\r\n      );\r\n      setCourseDetails(courseChosen);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(courseDetails);\r\n\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n\r\n  //Obtain Topic Data from back end\r\n\r\n  //Topic Data from BackEnd\r\n  const [selectedTopic, setSelectedTopic] = useState([]);\r\n\r\n  // let { topicDatafromBackEnd } = useAmazonContext();\r\n  // console.log(topicDatafromBackEnd);\r\n\r\n  //Topic to be displayed\r\n  console.log(props.match);\r\n  console.log(props.match.params.topicNumber);\r\n\r\n  let topicNumberFromSideBar = props.match.params.topicNumber;\r\n  //Handling%23 in URL\r\n  if (topicNumberFromSideBar.includes(\"%\")) {\r\n    let topicNumberFromSideBarArray = topicNumberFromSideBar.split(\"%\");\r\n    topicNumberFromSideBar = topicNumberFromSideBarArray[0];\r\n  }\r\n  console.log(topicNumberFromSideBar);\r\n\r\n  //Set the selected topic\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/topicRESTCAll/${topicNumberFromSideBar}?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setSelectedTopic(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [topicNumberFromSideBar, courseDetails]);\r\n\r\n  // let selectedTopic = topicDatafromBackEnd.find(\r\n  //   (o) => o.topicNumber === topicNumberFromSideBar\r\n  // );\r\n\r\n  console.log(selectedTopic);\r\n  //End\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/examplesData?collectionName=${courseDetails.courseExamplesCollectionName}&modelName=${courseDetails.courseExamplesModelName}`\r\n    ).then((response) => {\r\n      setExampleDatafromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [topicNumberFromSideBar, courseDetails]);\r\n\r\n  // let { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  //Obtain Example Data from back end\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\r\n  //     \"topicDatafromBackEnd\",\r\n  //     JSON.stringify(topicDatafromBackEnd)\r\n  //   );\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\r\n  //     \"exampleDatafromBackEnd\",\r\n  //     JSON.stringify(exampleDatafromBackEnd)\r\n  //   );\r\n  // });\r\n\r\n  // if (topicDatafromBackEnd.length == 0) {\r\n  //   topicDatafromBackEnd = JSON.parse(\r\n  //     localStorage.getItem(\"topicDatafromBackEnd\")\r\n  //   );\r\n  // }\r\n\r\n  // if (exampleDatafromBackEnd.length == 0) {\r\n  //   exampleDatafromBackEnd = JSON.parse(\r\n  //     localStorage.getItem(\"exampleDatafromBackEnd\")\r\n  //   );\r\n  // }\r\n\r\n  //For page refresh\r\n  //End\r\n\r\n  //Code to make a particular section glow\r\n  let currentUrl = window.location.href;\r\n  console.log(currentUrl);\r\n  // setCurrentUrlState(currentUrl);\r\n  let currentUrlArray = currentUrl.split(\"/\");\r\n  console.log(currentUrlArray);\r\n  let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n  console.log(topicAndSection);\r\n  //Handling%23 in URL\r\n  var topicAndSectionArray = [];\r\n\r\n  if (topicAndSection.includes(\"%\")) {\r\n    topicAndSectionArray = topicAndSection.split(\"%23\");\r\n  } else {\r\n    topicAndSectionArray = topicAndSection.split(\"#\");\r\n  }\r\n\r\n  console.log(topicAndSectionArray);\r\n  let currentUrlSectionID = topicAndSectionArray[1];\r\n  console.log(currentUrlSectionID);\r\n\r\n  // console.log(topicNumberFromSideBar);\r\n  //End\r\n\r\n  //To scroll to the top on change of url or scroll to section\r\n  useEffect(() => {\r\n    if (currentUrlSectionID === undefined) {\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }\r\n  }, [currentUrl]);\r\n\r\n  useEffect(() => {\r\n    if (currentUrlSectionID) {\r\n      const element = document.getElementById(currentUrlSectionID);\r\n      element && element.scrollIntoView();\r\n    }\r\n  });\r\n  console.log(currentUrl);\r\n  //End\r\n\r\n  const sectionList = []; //Creates a list of all the sectionNumbers on this topic\r\n  selectedTopic.sections &&\r\n    selectedTopic.sections.map((section) => {\r\n      return sectionList.push(section.sectionNumber);\r\n    });\r\n\r\n  console.log(sectionList);\r\n\r\n  // Randomiser function to choose an example for a particular section\r\n\r\n  const chooseRandomExample = (sectionNumber) => {\r\n    let allSectionExamples =\r\n      exampleDatafromBackEnd.length !== 0 &&\r\n      exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n    const random = Math.floor(Math.random() * allSectionExamples.length);\r\n    let selectedExample = allSectionExamples[random];\r\n    return selectedExample;\r\n  };\r\n\r\n  // Randomiser function to create quiz for all topics\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n\r\n  let needToDisplay = 100;\r\n  let needtoSelect = Math.ceil(needToDisplay / sectionList.length);\r\n  console.log(needtoSelect);\r\n\r\n  let selectedSectionExamples = []; //List of selected examples from each section\r\n  let selectedSectionExamplesPool = []; //List of all selected examples from all sections\r\n  let newselectedSectionExamplesPool = []; //Needed this to use the concat logic because concat requires you to store the concatenation into a new variable\r\n  let finalSetOfExamplesToDisplay = []; //final list of examples to display\r\n\r\n  // Algorithm for obtaining questions from each section:\r\n  sectionList.map((sectionNumber) => {\r\n    //Mapping through the list of sections that from the Topic\r\n    let allSectionExamples =\r\n      exampleDatafromBackEnd.length !== 0 &&\r\n      exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n    console.log(allSectionExamples);\r\n    if (allSectionExamples.length > needtoSelect) {\r\n      selectedSectionExamples = chooseRandom(allSectionExamples, needtoSelect);\r\n      console.log(selectedSectionExamples);\r\n      newselectedSectionExamplesPool = selectedSectionExamplesPool.concat(\r\n        newselectedSectionExamplesPool,\r\n        selectedSectionExamples\r\n      );\r\n    } else {\r\n      newselectedSectionExamplesPool = selectedSectionExamplesPool.concat(\r\n        newselectedSectionExamplesPool,\r\n        allSectionExamples\r\n      );\r\n    }\r\n    console.log(selectedSectionExamplesPool);\r\n    console.log(newselectedSectionExamplesPool);\r\n  });\r\n  console.log(selectedSectionExamplesPool);\r\n  console.log(newselectedSectionExamplesPool);\r\n  if (newselectedSectionExamplesPool.length > needToDisplay) {\r\n    finalSetOfExamplesToDisplay = chooseRandom(\r\n      newselectedSectionExamplesPool,\r\n      needToDisplay\r\n    );\r\n  } else {\r\n    finalSetOfExamplesToDisplay = newselectedSectionExamplesPool;\r\n  }\r\n\r\n  console.log(finalSetOfExamplesToDisplay);\r\n\r\n  return selectedTopic === \"undefined\" ||\r\n    selectedTopic === null ||\r\n    selectedTopic.length === 0 ? ( //Needed to add condition because without it, component was rendering and not waiting on selectedTopic from useEffect\r\n    <div>Loading</div>\r\n  ) : (\r\n    <div>\r\n      <MainSideNav\r\n        courseTitleUserIsOn={courseTitleUserIsOn}\r\n        courseDetails={courseDetails}\r\n        selectedTopic={selectedTopic}\r\n      ></MainSideNav>\r\n      <TopicTitle id=\"Topic\">\r\n        {selectedTopic.topicNumber} &nbsp; {selectedTopic.topicTitle}\r\n        {selectedTopic.topicYoutubeLink && (\r\n          <a\r\n            href={selectedTopic.topicYoutubeLink}\r\n            style={{ fontSize: 25, marginLeft: \"20px\" }}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <ButtonH2>\r\n              <b>Watch</b>\r\n            </ButtonH2>\r\n          </a>\r\n        )}\r\n        &nbsp; &nbsp;\r\n        <ButtonH2\r\n          onClick={() => {\r\n            let title =\r\n              courseDetails.courseTitle +\r\n              \"\\nTopic \" +\r\n              selectedTopic.topicNumber +\r\n              \" - \" +\r\n              selectedTopic.topicTitle;\r\n            let text =\r\n              courseDetails.courseTitle +\r\n              \"\\nTopic \" +\r\n              selectedTopic.topicNumber +\r\n              \" - \" +\r\n              selectedTopic.topicTitle +\r\n              \"\\n\\n\" +\r\n              selectedTopic.topicDescription;\r\n            if (navigator.share) {\r\n              navigator.share({\r\n                title: title,\r\n                text: text,\r\n                url: `/#/${courseTitleUserIsOn}/topic/${selectedTopic.topicNumber}`,\r\n              });\r\n            } else {\r\n              navigator.clipboard.writeText(\r\n                `/#/${courseTitleUserIsOn}/topic/${selectedTopic.topicNumber}`\r\n              );\r\n            }\r\n          }}\r\n        >\r\n          <b>share</b>\r\n        </ButtonH2>\r\n      </TopicTitle>\r\n      <TopicDescription>\r\n        <p>{selectedTopic.topicDescription}</p>\r\n        {/* <div style={{ alignSelf: \"center\" }}>\r\n          <Link\r\n            to={{\r\n              pathname:\r\n                `/${courseTitleUserIsOn}/quiz/` + selectedTopic.topicNumber,\r\n              state: {\r\n                comingFrom: \"Topic\",\r\n                topicSelectedQuizQuestions: finalSetOfExamplesToDisplay,\r\n                sectionList: sectionList,\r\n              },\r\n            }}\r\n          >\r\n            {selectedTopic.sections.length !== 0 && (\r\n              <QuizMeButton>\r\n                <p style={{ fontSize: \"2vh\", margin: \"0px\" }}>Switch to</p>\r\n                <b>Quiz Mode</b>\r\n              </QuizMeButton>\r\n            )}\r\n          </Link>\r\n        </div> */}\r\n      </TopicDescription>\r\n      <hr\r\n        style={{\r\n          marginTop: 50,\r\n          marginBottom: 50,\r\n          width: \"70vw\",\r\n          backgroundColor: \"#eb8381\",\r\n          height: 2,\r\n          borderRadius: 20,\r\n          border: 0,\r\n        }}\r\n      ></hr>\r\n\r\n      {selectedTopic.sections &&\r\n        selectedTopic.sections.map((section) => {\r\n          return (\r\n            <div>\r\n              <SectionDescription\r\n                currentUrlSectionID={currentUrlSectionID}\r\n                sectionNumber={section.sectionNumber}\r\n              >\r\n                <SectionTitle id={section.sectionNumber}>\r\n                  <b>\r\n                    {section.sectionNumber} &nbsp; {section.sectionTitle}\r\n                  </b>\r\n                  {section.sectonYoutubeLink && (\r\n                    <a\r\n                      href={section.sectonYoutubeLink}\r\n                      style={{ marginLeft: \"20px\" }}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <ButtonH2>\r\n                        <b>Watch</b>\r\n                      </ButtonH2>\r\n                    </a>\r\n                  )}\r\n                  &nbsp; &nbsp;\r\n                  <ButtonH2\r\n                    onClick={() => {\r\n                      let url = decodeURIComponent(\r\n                        `/#/${courseTitleUserIsOn}/topic/${selectedTopic.topicNumber}%23${section.sectionNumber}`\r\n                      );\r\n                      let text =\r\n                        courseDetails.courseTitle +\r\n                        \"\\nSection \" +\r\n                        section.sectionNumber +\r\n                        \" - \" +\r\n                        section.sectionTitle +\r\n                        \"\\n\\n\" +\r\n                        section.sectionDescription +\r\n                        \"\\n\\n\" +\r\n                        section.sectionNotes.join(\" \");\r\n                      let title =\r\n                        courseDetails.courseTitle +\r\n                        \"\\nSection \" +\r\n                        section.sectionNumber +\r\n                        \" - \" +\r\n                        section.sectionTitle;\r\n                      if (navigator.share) {\r\n                        navigator.share({\r\n                          title: title,\r\n                          text: text,\r\n                          url: url,\r\n                        });\r\n                      } else {\r\n                        navigator.clipboard.writeText(\r\n                          `/#/${courseTitleUserIsOn}/topic/${selectedTopic.topicNumber}#${section.sectionNumber}`\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    <b>share</b>\r\n                  </ButtonH2>\r\n                </SectionTitle>\r\n                <div>\r\n                  <p>{section.sectionDescription}</p>\r\n                </div>\r\n                {\r\n                  /* { Start from here to add notes */\r\n                  section.sectionNotes &&\r\n                    section.sectionNotes.map((sectionNote, index) => {\r\n                      return (\r\n                        <div>\r\n                          <NoteTitle>\r\n                            <div>\r\n                              <b>&nbsp; Note {index + 1}</b>\r\n                            </div>\r\n                          </NoteTitle>\r\n                          <NoteDescription>{sectionNote}</NoteDescription>\r\n                        </div>\r\n                      );\r\n                    })\r\n                }\r\n                <Example\r\n                  topicNumber={topicNumberFromSideBar}\r\n                  section={section.sectionNumber}\r\n                  sectionTitle={section.sectionTitle}\r\n                  sectionExample={chooseRandomExample(section.sectionNumber)}\r\n                ></Example>\r\n              </SectionDescription>\r\n              <hr\r\n                style={{\r\n                  marginTop: 50,\r\n                  marginBottom: 50,\r\n                  width: \"70vw\",\r\n                  backgroundColor: \"#eb8381\",\r\n                  height: 2,\r\n                  borderRadius: 20,\r\n                  border: 0,\r\n                }}\r\n              ></hr>\r\n            </div>\r\n          );\r\n        })}\r\n      {/* <div>\r\n        <Link\r\n          to={{\r\n            pathname:\r\n              `/${courseTitleUserIsOn}/quiz/` + selectedTopic.topicNumber,\r\n            state: {\r\n              comingFrom: \"Topic\",\r\n              topicSelectedQuizQuestions: finalSetOfExamplesToDisplay,\r\n              sectionList: sectionList,\r\n            },\r\n          }}\r\n        >\r\n          {selectedTopic.sections.length !== 0 && (\r\n            <QuizMeButton\r\n              style={{\r\n                margin: \"0 auto\",\r\n                marginBottom: \"50px\",\r\n                display: \"block\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              <b>Take a Quiz</b>\r\n            </QuizMeButton>\r\n          )}\r\n        </Link>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topic;\r\n", "import React, { useState, createContext } from \"react\";\r\n\r\nexport const ScoreContext = createContext();\r\n\r\nexport const SubmitButtonContext = createContext();\r\n", "import React, { useState, useContext, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\n\r\nimport { ScoreContext, SubmitButtonContext } from \"../Contexts/ScoreContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\n\r\nconst fadeIn = keyframes`\r\n0%{opacity: 0}\r\n100%{opacity: 1}\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ExampleBox = styled.div`\r\n  box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  background: #252525;\r\n  margin-left: 50px;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst ExampleQuestion = styled.div`\r\n  /* font-size: 17px; */\r\n  font-size: 2.5vh;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #d0bad9;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ExampleAnswer = styled.div`\r\n  font-size: 2.2vh;\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  display: flex;\r\n  background: ${(props) =>\r\n    props.answerClicked == props.answer && props.submitted\r\n      ? props.answerColor\r\n      : props.answerClicked == props.answer\r\n      ? \"#b8b8b8\"\r\n      : \"#e8e2ef\"};\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  transition: transform 300ms;\r\n  justify-content: center;\r\n  pointer-events: ${(props) => (props.submitted ? \"none\" : \"auto\")};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst AnswerExplanation = styled.div`\r\n  font-size: 2vh;\r\n  color: #f8f6f0;\r\n  display: ${(props) =>\r\n    props.answerClicked == props.answer && props.submitted ? \"flex\" : \"none\"};\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst QuizExample = (props) => {\r\n  const { courseTitleUserIsOn } = useAmazonContext();\r\n  const [sumCorrect, setSumCorrect] = useContext(ScoreContext);\r\n  const [submitted, setSubmitted] = useContext(SubmitButtonContext);\r\n\r\n  const [answerColor, setAnswerColor] = useState(\"#e8e2ef\");\r\n  const [answerClicked, setAnswerClicked] = useState(\"NoAnswer\");\r\n  const [answerClickedToPractice, setAnswerClickedToPractice] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(\"noSelection\");\r\n\r\n  // Issue: when i click on try again, if the same quiz example came up after re-render, it would show as already clicked due to code : props.answerClicked == props.answer\r\n  //  ? \"#DFDFDF\". In order to tackle it, this logic says, when try again is clicked\r\n  //(indicatied by sumCorrect becoming 0) AND when value of submitted changes (in this case from true to false when try agian button is clicked)  only then should the code set all answers to no answer and prevent any highlight logic to take place.\r\n  // Both conditons were needed, else didnt produced required result as can be seen if you tried to remove length==0 logic\r\n\r\n  useEffect(() => {\r\n    if (sumCorrect.length == 0) {\r\n      setAnswerClicked(\"NoAnswer\");\r\n    }\r\n  }, [submitted]);\r\n\r\n  const checkAnswer = (isCorrect, answer) => {\r\n    setAnswerClicked(answer);\r\n    setAnswerClickedToPractice(true);\r\n\r\n    if (isCorrect == true) {\r\n      setAnswerColor(\"#DAF7A6\");\r\n      setSelectedAnswer(true);\r\n      pushCorrectAnswer(props.exampleIndex);\r\n      console.log(props.exampleIndex);\r\n    } else {\r\n      setAnswerColor(\"#ff726f\");\r\n      setSelectedAnswer(false);\r\n      pushWrongAnswer(props.exampleIndex);\r\n    }\r\n  };\r\n\r\n  function pushCorrectAnswer(index) {\r\n    const newAnswerList = [...sumCorrect];\r\n    newAnswerList[index] = 1;\r\n    setSumCorrect(newAnswerList);\r\n    console.log(sumCorrect);\r\n  }\r\n\r\n  function pushWrongAnswer(index) {\r\n    const newAnswerList = [...sumCorrect];\r\n    newAnswerList[index] = 0;\r\n    setSumCorrect(newAnswerList);\r\n    console.log(sumCorrect);\r\n  }\r\n\r\n  return (\r\n    <ExampleBox>\r\n      <ExampleQuestion>{props.example.question}</ExampleQuestion>\r\n      {props.example &&\r\n        props.example.answers.map((answerItem) => {\r\n          return (\r\n            <>\r\n              <ExampleAnswer\r\n                onClick={() =>\r\n                  checkAnswer(answerItem.isCorrect, answerItem.answer)\r\n                }\r\n                answerColor={answerColor}\r\n                answer={answerItem.answer}\r\n                answerClicked={answerClicked}\r\n                submitted={submitted}\r\n                sumCorrect={sumCorrect}\r\n              >\r\n                <p>{answerItem.answer}</p>\r\n              </ExampleAnswer>\r\n              {\r\n                <AnswerExplanation\r\n                  answerClicked={answerClicked}\r\n                  answer={answerItem.answer}\r\n                  answerColor={answerColor}\r\n                  selectedAnswer={selectedAnswer}\r\n                  submitted={submitted}\r\n                >\r\n                  {answerItem.explanation ? (\r\n                    <>\r\n                      <p\r\n                        style={{\r\n                          color: \"red\",\r\n                          display: \"inline\",\r\n                          fontSize: \"25px\",\r\n                          margin: \"0 10px\",\r\n                        }}\r\n                      >\r\n                        ✖\r\n                      </p>\r\n                      <p\r\n                        style={{\r\n                          display: \"inline\",\r\n                        }}\r\n                      >\r\n                        {answerItem.explanation}\r\n                      </p>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <p\r\n                        style={{\r\n                          color: \"green\",\r\n                          display: \"inline\",\r\n                          fontSize: \"25px\",\r\n                          margin: \"0 10px 0 0\",\r\n                        }}\r\n                      >\r\n                        ✓\r\n                      </p>{\" \"}\r\n                      <p>Correct!</p>\r\n                    </>\r\n                  )}\r\n                </AnswerExplanation>\r\n              }\r\n            </>\r\n          );\r\n        })}\r\n      <div\r\n        style={\r\n          answerClickedToPractice && submitted\r\n            ? { display: \"block\", marginTop: \"30px\", textAlign: \"center\" }\r\n            : { display: \"none\" }\r\n        }\r\n      >\r\n        <HashLink\r\n          to={`/${courseTitleUserIsOn}/topic/${props.topicNumber}#${props.example.sectionNumber}`}\r\n        >\r\n          {\" \"}\r\n          {/* Hashlink to go back to the specific Section on the Topic page*/}\r\n          <ButtonH2>Study this Lesson</ButtonH2>\r\n        </HashLink>\r\n      </div>\r\n    </ExampleBox>\r\n  );\r\n};\r\n\r\nexport default QuizExample;\r\n", "import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  QuizState,\r\n  ScoreContext,\r\n  SubmitButtonContext,\r\n} from \"../Contexts/ScoreContext\";\r\nimport styled, { css } from \"styled-components\";\r\n// import { ButtonH2 } from \"./Buttons\";\r\nimport \"./Quiz.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { allExampleData } from \"./TopicData\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 100px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ScoreCardBorder = styled.div`\r\n  background: ${(props) =>\r\n    props.scorePercentage == 100 ? \"#f6ffe6\" : \"#e8c6c5\"};\r\n  font-size: 40px;\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n  padding: 10px;\r\n  box-shadow: 0 0.1rem 0.1rem rgba(0, 0, 0, 0.2);\r\n  display: ${(props) =>\r\n    props.submitted\r\n      ? \"flex\"\r\n      : \"none\"}; /* Display score card only when button is clicked, ie. when submitted state is true */\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ScoreCardText = styled.p`\r\n  font-size: 3vh;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  text-align: center;\r\n  font-weight: 900;\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst ScoreMessage = styled.div`\r\n  font-size: 3vh;\r\n  text-align: center;\r\n  font-weight: 900;\r\n  margin: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${(props) =>\r\n    props.submitted && props.scorePercentage == 100\r\n      ? css`\r\n          shakeY 1s 1s\r\n        `\r\n      : props.submitted && props.scorePercentage < 100\r\n      ? css`\r\n          shakeX 1s 1s\r\n        `\r\n      : \"none\"};\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-basis: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst ScoreCardButtons = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-basis: 100%;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst ScoreCard = (props) => {\r\n  //Obtain Example Data from back end\r\n  const { exampleDatafromBackEnd, courseTitleUserIsOn } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  const [sumCorrect, setSumCorrect] = useContext(ScoreContext);\r\n  const [scoreCardColour, setScoreCardColour] = useState(\"#f8f8f8\");\r\n  const [submitted, setSubmitted] = useContext(SubmitButtonContext);\r\n  const location = useLocation(); //Props obtained from Router Link\r\n\r\n  const sum = sumCorrect.reduce(function (a, b) {\r\n    return a + b;\r\n  }, 0);\r\n\r\n  const scorePercentage = Math.round((sum / sumCorrect.length) * 100);\r\n\r\n  let sectionID = props.goBackTo; //depricated, now using backToStudiesHashLinkPath\r\n  let backToStudiesHashLinkPath =\r\n    props.comingFrom == \"Topic\"\r\n      ? `/${courseTitleUserIsOn}/topic/${props.topicNumber}`\r\n      : props.comingFrom == \"Section\"\r\n      ? `/${courseTitleUserIsOn}/topic/${props.topicNumber}#${props.sectionNumber}`\r\n      : props.comingFrom == \"ScoreCard\" && props.sections.constructor == Array //Same logic as used in the quiz algorithm to figure out if it needs to go back to a topic or section\r\n      ? `/${courseTitleUserIsOn}/topic/${props.topicNumber}`\r\n      : props.comingFrom == \"ScoreCard\"\r\n      ? `/${courseTitleUserIsOn}/topic/${props.topicNumber}#${location.state.sectionNumber}`\r\n      : `/${courseTitleUserIsOn}/topic/${props.topicNumber}`;\r\n  let morePracticeHashLinkPath =\r\n    props.comingFrom == \"Topic\"\r\n      ? `/${courseTitleUserIsOn}/quiz/${props.topicNumber}`\r\n      : props.comingFrom == \"Section\"\r\n      ? `/${courseTitleUserIsOn}/quiz/${props.topicNumber}/${props.sectionNumber}`\r\n      : props.comingFrom == \"ScoreCard\" && props.sections.constructor == Array\r\n      ? `/${courseTitleUserIsOn}/quiz/${props.topicNumber}`\r\n      : props.comingFrom == \"ScoreCard\"\r\n      ? `/${courseTitleUserIsOn}/quiz/${props.topicNumber}/${location.state.sectionNumber}`\r\n      : `/${courseTitleUserIsOn}/quiz/${props.topicNumber}`;\r\n\r\n  // if (scorePercentage == 100) {\r\n  //   setScoreCardColour(\"#ff726f\");\r\n  // } else {\r\n  //   setScoreCardColour(\"#DAF7A6\");\r\n  // }\r\n\r\n  //Keeping the quiz ready if a user hits try again , same algorithm to find questions if coming from the Topic or a Section.\r\n\r\n  // Randomiser function to create quiz for all topics\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n  console.log(props.comingFrom);\r\n  console.log(props.sections);\r\n  console.log(props.topicNumber);\r\n  console.log(props.sectionNumber);\r\n  let needToDisplay = 5;\r\n  let needtoSelect = Math.ceil(needToDisplay / props.sections.length);\r\n\r\n  let selectedSectionExamples = []; //List of selected examples from each section\r\n  let selectedSectionExamplesPool = []; //List of all selected examples from all sections\r\n  let finalSetOfExamplesToDisplay = []; //final list of examples to display\r\n  let finalExamplesOutput = []; //finalOutput of examples\r\n\r\n  // Algorithm for obtaining questions from each section:\r\n  if (props.comingFrom == \"Topic\") {\r\n    props.sections.map((sectionNumber) => {\r\n      //Mapping through the list of sections that from the Topic\r\n      let allSectionExamples = exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n      if (allSectionExamples.length > needtoSelect) {\r\n        selectedSectionExamples = chooseRandom(\r\n          allSectionExamples,\r\n          needtoSelect\r\n        );\r\n        selectedSectionExamplesPool.push.apply(\r\n          selectedSectionExamplesPool,\r\n          selectedSectionExamples\r\n        );\r\n      } else {\r\n        selectedSectionExamplesPool.push.apply(\r\n          selectedSectionExamplesPool,\r\n          allSectionExamples\r\n        );\r\n      }\r\n    });\r\n    if (selectedSectionExamplesPool.length > needToDisplay) {\r\n      finalSetOfExamplesToDisplay = chooseRandom(\r\n        selectedSectionExamplesPool,\r\n        needToDisplay\r\n      );\r\n      finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n    } else {\r\n      finalSetOfExamplesToDisplay = selectedSectionExamplesPool;\r\n      finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n    }\r\n  } else if (props.comingFrom == \"Section\") {\r\n    let allSectionExamples = exampleDatafromBackEnd.filter(\r\n      (example) => example.sectionNumber == props.sections\r\n    );\r\n    if (allSectionExamples.length > needToDisplay) {\r\n      selectedSectionExamples = chooseRandom(allSectionExamples, needToDisplay);\r\n      finalExamplesOutput = selectedSectionExamples;\r\n    } else {\r\n      selectedSectionExamples = allSectionExamples;\r\n      finalExamplesOutput = selectedSectionExamples;\r\n    }\r\n  } else if (props.comingFrom == \"ScoreCard\") {\r\n    //If someone were to click Try Again from the score card, I was having a hard time trying to make the code determine which of the two logic above (Topic or Section) to run.\r\n    //If the quiz is rerun by clicking try again from score card, i need to determine whether the quiz is Topic or Section. Because Topic and Section have their own logic of running the quiz randomniser, I know that if its coming from Topic it will be an array and if it is coming form sections it is a list therefore i will run my logic based on that\r\n    if (props.sections.constructor == Array) {\r\n      props.sections.map((sectionNumber) => {\r\n        //Mapping through the list of sections that from the Topic\r\n        let allSectionExamples = exampleDatafromBackEnd.filter(\r\n          //list of ALL examples for a particular section in the database\r\n          (example) => example.sectionNumber == sectionNumber\r\n        );\r\n        if (allSectionExamples.length > needtoSelect) {\r\n          selectedSectionExamples = chooseRandom(\r\n            allSectionExamples,\r\n            needtoSelect\r\n          );\r\n          selectedSectionExamplesPool.push.apply(\r\n            selectedSectionExamplesPool,\r\n            selectedSectionExamples\r\n          );\r\n        } else {\r\n          selectedSectionExamplesPool.push.apply(\r\n            selectedSectionExamplesPool,\r\n            allSectionExamples\r\n          );\r\n        }\r\n      });\r\n      if (selectedSectionExamplesPool.length > needToDisplay) {\r\n        finalSetOfExamplesToDisplay = chooseRandom(\r\n          selectedSectionExamplesPool,\r\n          needToDisplay\r\n        );\r\n        finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n      } else {\r\n        finalSetOfExamplesToDisplay = selectedSectionExamplesPool;\r\n        finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n      }\r\n    } else {\r\n      let allSectionExamples = exampleDatafromBackEnd.filter(\r\n        (example) => example.sectionNumber == props.sections\r\n      );\r\n      if (allSectionExamples.length > needToDisplay) {\r\n        selectedSectionExamples = chooseRandom(\r\n          allSectionExamples,\r\n          needToDisplay\r\n        );\r\n        finalExamplesOutput = selectedSectionExamples;\r\n      } else {\r\n        selectedSectionExamples = allSectionExamples;\r\n        finalExamplesOutput = selectedSectionExamples;\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(finalSetOfExamplesToDisplay);\r\n  console.log(selectedSectionExamples);\r\n\r\n  const restartQuiz = () => {\r\n    setSubmitted(false);\r\n    setSumCorrect([]);\r\n  };\r\n\r\n  // //When user changes quiz then set submitted back to false\r\n\r\n  // useEffect(() => {\r\n  //   setSubmitted(false);\r\n  //   setSumCorrect([]);\r\n  // }, [props.topicNumber]);\r\n\r\n  // //End\r\n\r\n  return (\r\n    <ScoreCardBorder submitted={submitted} scorePercentage={scorePercentage}>\r\n      {scorePercentage == 100 ? (\r\n        <ScoreMessage submitted={submitted} scorePercentage={scorePercentage}>\r\n          <p\r\n            style={{\r\n              color: \"green\",\r\n              display: \"inline\",\r\n              fontSize: \"50px\",\r\n              margin: \"0 10px 0 0\",\r\n            }}\r\n          >\r\n            ✓\r\n          </p>\r\n          <p>Congratulations you got them all right!</p>\r\n        </ScoreMessage>\r\n      ) : (\r\n        <ScoreMessage submitted={submitted} scorePercentage={scorePercentage}>\r\n          <p\r\n            style={{\r\n              color: \"#ff726f\",\r\n              display: \"inline\",\r\n              fontSize: \"50px\",\r\n              margin: \"0 10px\",\r\n            }}\r\n          >\r\n            ✖\r\n          </p>\r\n          <p>Not quite there yet!</p>\r\n        </ScoreMessage>\r\n      )}\r\n\r\n      <div>\r\n        <ScoreCardText>Score</ScoreCardText>\r\n        {sum}/{sumCorrect.length}\r\n      </div>\r\n      <div>\r\n        <ScoreCardText>Percentage</ScoreCardText>\r\n        {scorePercentage}%\r\n      </div>\r\n      <ScoreCardButtons>\r\n        <Link\r\n          to={{\r\n            pathname: morePracticeHashLinkPath,\r\n            state: {\r\n              comingFrom: \"ScoreCard\",\r\n              sections: props.sections,\r\n              scoreCardSelectedQuizQuestons: finalExamplesOutput,\r\n              sectionNumber: props.sectionNumber, //Retains the section number to pass where needed\r\n            },\r\n          }}\r\n        >\r\n          <ButtonH2 style={{ marginBottom: 20 }} onClick={restartQuiz}>\r\n            More Practice\r\n          </ButtonH2>\r\n        </Link>\r\n\r\n        {/* <HashLink to={backToStudiesHashLinkPath}>\r\n          <ButtonH2>Back to Studies</ButtonH2>\r\n        </HashLink> */}\r\n      </ScoreCardButtons>\r\n    </ScoreCardBorder>\r\n  );\r\n};\r\n\r\nexport default ScoreCard;\r\n", "export default __webpack_public_path__ + \"static/media/HHLogo.a975645f.png\";", "import React from \"react\";\r\nimport \"./QuizSidebar.css\";\r\n\r\nexport default function QuizHamburgerButton(props) {\r\n  return (\r\n    <div className=\"hamburger-btn\" onClick={props.click}>\r\n      &#9776;\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\n\r\nexport default function SideNavRow(props) {\r\n  const { setSubContainer, setSubContainerEntries } = useAmazonContext();\r\n\r\n  const openRow = () => {\r\n    setSubContainer(true);\r\n    setSubContainerEntries(props.entries);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidenavRow\"\r\n      style={props.styleVariable}\r\n      onClick={() => props.entries && openRow()}\r\n    >\r\n      <div className=\"sidenavRowText\">\r\n        {props.number}\r\n        &nbsp; &nbsp;\r\n        {props.title}\r\n      </div>\r\n      <i class=\"fas fa-chevron-right\"></i>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport QuizSideNavRow from \"./QuizSideNavRow\";\r\nimport styled from \"styled-components\";\r\nimport QuizDropDown from \"./QuizDropDown\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CourseContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  height: 100%; /* Ensure the div takes full height */\r\n`;\r\n\r\nconst SearchBarContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 700px;\r\n  margin-bottom: 20px;\r\n  margin-right: 50px;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 10px;\r\n  padding-left: 70px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-size: 3vh;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst SearchIcon = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 10px;\r\n  font-size: 3vh;\r\n`;\r\n\r\nexport default function QuizSideNavContent(props) {\r\n  const { courseTitleUserIsOn, entryStore } = useAmazonContext();\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State for the search term\r\n  const [filteredEntries, setFilteredEntries] = useState([]); // State for filtered entries\r\n\r\n  // Filter the entries based on the search term\r\n  useEffect(() => {\r\n    if (entryStore && searchTerm) {\r\n      const filtered = entryStore\r\n        .map((entry) => {\r\n          const filteredSubEntries = entry.entries.filter((subEntry) => {\r\n            const subEntryMatches = subEntry.title\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase());\r\n            const nestedEntryMatches =\r\n              subEntry.entries &&\r\n              subEntry.entries.some((nestedEntry) =>\r\n                nestedEntry.entries.some(\r\n                  (section) =>\r\n                    section.title &&\r\n                    section.title\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase())\r\n                )\r\n              );\r\n            return subEntryMatches || nestedEntryMatches;\r\n          });\r\n          return { ...entry, entries: filteredSubEntries };\r\n        })\r\n        .filter((entry) => entry.entries.length > 0);\r\n      setFilteredEntries(filtered);\r\n    } else {\r\n      setFilteredEntries(entryStore);\r\n    }\r\n  }, [entryStore, searchTerm]);\r\n\r\n  console.log(entryStore);\r\n  console.log(entryStore, courseTitleUserIsOn);\r\n  const [dropDownEntries, setDropDownEntries] = useState(null);\r\n\r\n  let currentUrl = window.location.href;\r\n  console.log(currentUrl);\r\n  // setCurrentUrlState(currentUrl);\r\n  let currentUrlArray = currentUrl.split(\"/\");\r\n  console.log(currentUrlArray);\r\n  let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n  console.log(topicAndSection);\r\n  //Handling%23 in URL\r\n  var topicAndSectionArray = [];\r\n\r\n  if (topicAndSection.includes(\"%\")) {\r\n    topicAndSectionArray = topicAndSection.split(\"%23\");\r\n  } else {\r\n    topicAndSectionArray = topicAndSection.split(\"#\");\r\n  }\r\n  console.log(topicAndSectionArray);\r\n  let currentTopicNumber = topicAndSectionArray[0];\r\n  let currentSectionNumber = topicAndSectionArray[1];\r\n  console.log(currentTopicNumber);\r\n\r\n  return (\r\n    <div\r\n      className=\"sideNavContainer\"\r\n      style={\r\n        props.state === \"exiting\"\r\n          ? { animation: \"moveMainContainer .3s forwards\" }\r\n          : props.state === \"entering\"\r\n          ? { animation: \"moveMainContainer .3s reverse backwards\" }\r\n          : null\r\n      }\r\n    >\r\n      <SearchBarContainer>\r\n        <SearchIcon>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n        </SearchIcon>\r\n        <SearchBar\r\n          type=\"text\"\r\n          placeholder=\"Search for a Topic\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        ></SearchBar>\r\n      </SearchBarContainer>\r\n      {filteredEntries &&\r\n        filteredEntries.map((entry, index) => {\r\n          return (\r\n            <div>\r\n              <div className=\"sidenavContentHeaderMainMenu\">\r\n                {entry.topicHeaderNumber && entry.topicHeaderNumber}\r\n                &nbsp; &nbsp;\r\n                {entry.title}\r\n              </div>\r\n              {entry.entries.map((subEntry, index) => {\r\n                return (\r\n                  <div>\r\n                    {/* Renable below when ready for section quiz */}\r\n                    {/* {subEntry.rows ? (\r\n                      <QuizSideNavRow\r\n                        number={subEntry.topicNumber}\r\n                        title={subEntry.title}\r\n                        entries={subEntry.entries}\r\n                        styleVariable={\r\n                          subEntry.topicNumber == currentTopicNumber\r\n                            ? { background: \"#ebebeb\" }\r\n                            : {}\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <Link\r\n                        to={`/${courseTitleUserIsOn}/quiz/${subEntry.topicNumber}`}\r\n                      >\r\n                        <div\r\n                          className=\"sidenavContent\"\r\n                          onClick={props.closeNav}\r\n                          style={\r\n                            subEntry.topicNumber == currentTopicNumber\r\n                              ? { background: \"#ebebeb\" }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          {subEntry.topicNumber && subEntry.topicNumber}\r\n                          &nbsp; &nbsp;\r\n                          {subEntry.title}\r\n                        </div>\r\n                      </Link>\r\n                    )} */}\r\n\r\n                    <Link\r\n                      to={`/${courseTitleUserIsOn}/quiz/${subEntry.topicNumber}`}\r\n                    >\r\n                      <div\r\n                        className=\"sidenavContent\"\r\n                        onClick={props.closeNav}\r\n                        style={\r\n                          subEntry.topicNumber == currentTopicNumber\r\n                            ? { background: \"#dfdfdf\" }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        {subEntry.topicNumber && subEntry.topicNumber}\r\n                        &nbsp; &nbsp;\r\n                        {subEntry.title}\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      <div style={{ minHeight: \"60px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useEffect, useState } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport QuizSideNavRow from \"./QuizSideNavRow\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nexport default function QuizSubContainer(props) {\r\n  const { subContainerEntries, setSubContainer, courseTitleUserIsOn } =\r\n    useAmazonContext();\r\n  const [currentSectionNumberState, setCurrentSectionNumberState] =\r\n    useState(\"\");\r\n\r\n  //Code to set current section state so that it can be used to check which section was clicked to colour code it\r\n  useEffect(() => {\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n    console.log(topicAndSection);\r\n    //Handling%23 in URL\r\n    var topicAndSectionArray = [];\r\n\r\n    if (topicAndSection.includes(\"%\")) {\r\n      topicAndSectionArray = topicAndSection.split(\"%23\");\r\n    } else {\r\n      topicAndSectionArray = topicAndSection.split(\"#\");\r\n    }\r\n    console.log(topicAndSectionArray);\r\n    let currentSectionNumber = topicAndSectionArray[1];\r\n    console.log(currentSectionNumber);\r\n    setCurrentSectionNumberState(currentSectionNumber);\r\n  }, []);\r\n  //End\r\n\r\n  return (\r\n    <div\r\n      className=\"sub-container\"\r\n      style={\r\n        props.state === \"entering\"\r\n          ? { animation: \"moveSubContainer .3s forwards\" }\r\n          : props.state === \"entered\"\r\n          ? { transform: \"translateX(0px)\" }\r\n          : { animation: \"moveSubContainer .3s reverse backwards\" }\r\n      }\r\n    >\r\n      <div className=\"sub-header\" onClick={() => setSubContainer(false)}>\r\n        <i class=\"fas fa-chevron-left\"></i> MAIN MENU\r\n      </div>\r\n      {subContainerEntries.map((subEntry) => (\r\n        <>\r\n          <Link to={`/${courseTitleUserIsOn}/quiz/${subEntry.topicNumber}`}>\r\n            <div\r\n              className=\"sidenavContentHeaderSubContainer\"\r\n              onClick={props.closeNav}\r\n            >\r\n              {subEntry.topicNumber}&nbsp;&nbsp;{subEntry.title}\r\n            </div>\r\n          </Link>\r\n          {subEntry.entries.map((superEntry) => (\r\n            <HashLink\r\n              to={`/${courseTitleUserIsOn}/quiz/${subEntry.topicNumber}#${superEntry.sectionNumber}`}\r\n            >\r\n              <div onClick={props.closeNav}>\r\n                <QuizSideNavRow\r\n                  number={superEntry.sectionNumber}\r\n                  title={superEntry.title}\r\n                  styleVariable={\r\n                    superEntry.sectionNumber == currentSectionNumberState\r\n                      ? { background: \"#ebebeb\" }\r\n                      : {}\r\n                  }\r\n                />\r\n              </div>\r\n            </HashLink>\r\n          ))}\r\n        </>\r\n      ))}\r\n      <div style={{ minHeight: \"60px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport \"./QuizSidebar.css\";\r\nimport QuizSideNavContent from \"./QuizSideNavContent\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport QuizSubContainer from \"./QuizSubContainer\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\n\r\nexport default function QuizSidenav(props) {\r\n  let {\r\n    subContainer,\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    entryStore,\r\n    setEntryStore,\r\n  } = useAmazonContext();\r\n  return (\r\n    <div\r\n      className=\"sidenav\"\r\n      style={\r\n        props.state === \"entering\"\r\n          ? { animation: \"moveSideBar .3s forwards\" }\r\n          : props.state === \"entered\"\r\n          ? { transform: \"translateX(-0px)\" }\r\n          : { animation: \"moveSideBar .3s reverse backwards\" }\r\n      }\r\n    >\r\n      <div className=\"sidenavHeader\" style={{ background: \"#e8e2ef\" }}>\r\n        {courseDetails.courseTitle}\r\n      </div>\r\n      <Transition in={!subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => <QuizSideNavContent state={state} closeNav={props.click} />}\r\n      </Transition>\r\n      <Transition in={subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => <QuizSubContainer state={state} closeNav={props.click} />}\r\n      </Transition>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport \"./QuizSidebar.css\";\r\n\r\nfunction QuizBackgroundPage(props) {\r\n  return (\r\n    <div>\r\n      <p></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizBackgroundPage;\r\n", "import React, { useEffect } from \"react\";\r\nimport HHLogo from \"./HHLogo.png\";\r\nimport QuizHamburgerButton from \"./QuizHamburgerButton\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport QuizSidenav from \"./QuizSidenav\";\r\nimport QuizBackgroundPage from \"./QuizBackgroundPage\";\r\nimport { useState } from \"react\";\r\nimport { Transition, TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  AmazonContextProvider,\r\n  useAmazonContext,\r\n} from \"../../Contexts/AmazonContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navbar = styled.nav`\r\n  background: #d0bad9;\r\n  /* top: 80; */\r\n  height: 6vh;\r\n  transform: translateY(${(props) => props.navTop + \"vh\"});\r\n  transition: 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 6vh; /* Adjust the width as needed */\r\n  height: 6vh; /* Adjust the height as needed */\r\n  margin-left: 70px; /* Adjust the margin as needed */\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  position: relative;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 4vh;\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: #f8f6f0;\r\n  height: 6vh;\r\n\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst StudyModeButton = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  /* margin: 20px; */\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2.5vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  height: 6vh;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nexport default function QuizMainSideNav(props) {\r\n  const [navOpen, setNavOpen] = useState(false);\r\n\r\n  // const [entryStore, setEntryStore] = useState([]);\r\n  const {\r\n    courseTitleUserIsOn,\r\n\r\n    courseDetails,\r\n    setSubContainerEntries,\r\n    subContainer,\r\n    setSubContainer,\r\n    rowClicked,\r\n    setRowClicked,\r\n  } = useAmazonContext();\r\n\r\n  console.log(courseTitleUserIsOn, courseDetails, props.entryStore);\r\n\r\n  const [currentUrlState, setCurrentUrlState] = useState(\"0\");\r\n  const [currentTopicNumberState, setCurrentTopicNumberState] = useState(\"0\");\r\n  const [nextTopicNumberState, setNextTopicNumberState] = useState(\"0\");\r\n  const [previousTopicNumberState, setPreviousTopicNumberState] = useState(\"0\");\r\n\r\n  //Code for nav to hide scroll down and show on scroll up\r\n  const [navTop, setNavTop] = useState(0);\r\n  var lastScrollY = window.scrollY;\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (lastScrollY < window.scrollY) {\r\n      setNavTop(-6); //needs to be same as Nav Height defined above\r\n    } else {\r\n      setNavTop(0);\r\n    }\r\n    lastScrollY = window.scrollY;\r\n  });\r\n  //End\r\n\r\n  const openNav = () => {\r\n    setNavOpen(true);\r\n  };\r\n\r\n  const closeNav = () => {\r\n    setNavOpen(false);\r\n  };\r\n\r\n  //Logic for next and previous buttons\r\n  console.log(props.topicNumbersListfromBackEnd);\r\n  // Step 0.1 I needed this for this component to re-render any time the currentUrl changed, so that re-render would run the useEffect below:\r\n  const setCurrentUrl = () => {\r\n    var currentUrl = window.location.href;\r\n    setCurrentUrlState(currentUrl);\r\n    console.log(currentUrl);\r\n\r\n    if (props.entryStore) {\r\n      props.entryStore.forEach(function (entry) {\r\n        entry.entries.forEach(function (subEntry) {\r\n          if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == true\r\n          ) {\r\n            console.log(currentTopicNumberState);\r\n            console.log(subEntry.entries);\r\n            setSubContainer(true);\r\n            setSubContainerEntries(subEntry.entries);\r\n          } else if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == false &&\r\n            subContainer == true\r\n          ) {\r\n            console.log(subEntry.entries);\r\n            setSubContainer(false);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Step 1 obtain current topic:\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray[currentUrlArray.length - 1];\r\n    console.log(topicAndSection);\r\n    //Handling%23 in URL\r\n    var topicAndSectionArray = [];\r\n\r\n    if (topicAndSection.includes(\"%\")) {\r\n      topicAndSectionArray = topicAndSection.split(\"%23\");\r\n    } else {\r\n      topicAndSectionArray = topicAndSection.split(\"#\");\r\n    }\r\n    console.log(topicAndSectionArray);\r\n    let currentTopicNumber = topicAndSectionArray[0];\r\n    console.log(currentTopicNumber);\r\n    setCurrentTopicNumberState(currentTopicNumber);\r\n    //Step 2 Find the index of the currentTopicNumber in list of topic numbers from back end\r\n\r\n    let indexofCurrentTopicNumber = props.topicNumbersListfromBackEnd.findIndex(\r\n      (topicNumber) => topicNumber == currentTopicNumber\r\n    );\r\n    console.log(indexofCurrentTopicNumber);\r\n\r\n    //Step 3 Derive next topic number in list with catch error for out of bound index\r\n    let indexofNextTopicNumber = indexofCurrentTopicNumber + 1;\r\n    if (indexofNextTopicNumber > props.topicNumbersListfromBackEnd.length - 1) {\r\n      //if next index great then lenght of array set index number to 0 so you go back to beginning\r\n      indexofNextTopicNumber = 0;\r\n    }\r\n    console.log(indexofNextTopicNumber);\r\n    let nextTopicNumber =\r\n      props.topicNumbersListfromBackEnd[indexofNextTopicNumber];\r\n    console.log(nextTopicNumber);\r\n    setNextTopicNumberState(nextTopicNumber);\r\n\r\n    //Step 4 Derive previous topic number in list with catch error for out of bound index\r\n    let indexofPreviousTopicNumber = indexofCurrentTopicNumber - 1;\r\n    if (indexofPreviousTopicNumber < 0) {\r\n      //if next index less then 0 set index number to last so you go back to ending\r\n      indexofPreviousTopicNumber = props.topicNumbersListfromBackEnd.length - 1;\r\n    }\r\n    console.log(indexofPreviousTopicNumber);\r\n    let previousTopicNumber =\r\n      props.topicNumbersListfromBackEnd[indexofPreviousTopicNumber];\r\n    console.log(previousTopicNumber);\r\n    setPreviousTopicNumberState(previousTopicNumber);\r\n\r\n    //Step 5 - Change sidebar to show menu based on current topic\r\n    console.log(props.entryStore); // when code below uncommetned it is saying entrystroe has no properties\r\n\r\n    // if (entryStore) {\r\n    //   entryStore.forEach(function (entry) {\r\n    //     entry.entries.forEach(function (subEntry) {\r\n    //       if (\r\n    //         subEntry.topicNumber == currentTopicNumberState &&\r\n    //         subEntry.rows == true\r\n    //       ) {\r\n    //         console.log(subEntry.entries);\r\n    //         setSubContainerEntries(subEntry.entries);\r\n    //         // setSubContainer(true);\r\n    //       }\r\n    //       // else if (\r\n    //       //   subEntry.topicNumber == currentTopicNumberState &&\r\n    //       //   subEntry.rows == false &&\r\n    //       //   subContainer == true\r\n    //       // ) {\r\n    //       //   console.log(subEntry.entries);\r\n    //       //   setSubContainer(false);\r\n    //       // }\r\n    //     });\r\n    //   });\r\n    // }\r\n\r\n    //End\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"unset\" }}>\r\n      <Navbar\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 1,\r\n        }}\r\n        navTop={navTop}\r\n      >\r\n        <div>\r\n          <QuizHamburgerButton click={openNav}></QuizHamburgerButton>{\" \"}\r\n          <Logo src={HHLogo} alt=\"Logo\" />{\" \"}\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <Link\r\n            to={\r\n              `/${courseTitleUserIsOn}/topic/` + props.selectedTopic.topicNumber\r\n            }\r\n          >\r\n            <StudyModeButton>\r\n              <p style={{ fontSize: \"1.5vh\", margin: \"0px\" }}>Switch to</p>\r\n              <b>Study Mode</b>\r\n            </StudyModeButton>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Link to={`/${courseTitleUserIsOn}/quiz/${previousTopicNumberState}`}>\r\n            <ButtonH2 onClick={setCurrentUrl}>\r\n              {\" \"}\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n            </ButtonH2>\r\n          </Link>\r\n\r\n          <Link to={`/${courseTitleUserIsOn}/quiz/${nextTopicNumberState}`}>\r\n            <ButtonH2 onClick={setCurrentUrl}>\r\n              <FontAwesomeIcon icon={faArrowRight} />\r\n            </ButtonH2>\r\n          </Link>\r\n        </div>\r\n      </Navbar>\r\n\r\n      <Transition\r\n        in={navOpen && props.entryStore}\r\n        timeout={300}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        {(state) => {\r\n          {\r\n            /* if (state === \"exited\") setSubContainer(false); */\r\n          } //Code for NavBar to reset to main menu every time it closes\r\n          return (\r\n            <>\r\n              <QuizSidenav state={state} click={closeNav} />\r\n              <div\r\n                className=\"overlay\"\r\n                style={\r\n                  state === \"entering\"\r\n                    ? { animation: \"show .3s forwards\" }\r\n                    : state === \"entered\"\r\n                    ? { opacity: \"1\" }\r\n                    : { animation: \"show .3s backwards reverse\" }\r\n                }\r\n                onClick={closeNav}\r\n              ></div>\r\n              {\r\n                <div\r\n                  className=\"closeBtn\"\r\n                  style={\r\n                    state === \"entering\"\r\n                      ? { animation: \"show .3s forwards\" }\r\n                      : state === \"entered\"\r\n                      ? { opacity: \"1\" }\r\n                      : { animation: \"show .3s backwards reverse\" }\r\n                  }\r\n                  onClick={closeNav}\r\n                >\r\n                  &times;\r\n                </div> //This is code for a close button\r\n              }\r\n            </>\r\n          );\r\n        }}\r\n      </Transition>\r\n\r\n      <QuizBackgroundPage></QuizBackgroundPage>\r\n    </div>\r\n  );\r\n}\r\n", "import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TopicData, { allExampleData } from \"./TopicData\";\r\nimport QuizExample from \"./QuizExample\";\r\nimport ScoreCard from \"./ScoreCard\";\r\nimport { ScoreContext, SubmitButtonContext } from \"../Contexts/ScoreContext\";\r\nimport { ButtonH1 } from \"./Buttons\";\r\nimport styled from \"styled-components\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport QuizMainSideNav from \"./quiz sidebar/QuizMainSideNav\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst QuizTitle = styled.p`\r\n  color: #eb8381;\r\n  /* font-size: 3vh; */\r\n  font-family: \"Quicksand\", sans-serif;\r\n  justify-content: center;\r\n  text-align: center;\r\n  /* margin: 30px 30px; */\r\n  display: flex;\r\n\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst CenteredButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StudyModeButton = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  margin: 20px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 3vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 3vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #967bb6;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  margin-right: \"20px\";\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #e8e2ef;\r\n  color: #252525;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #e8e2ef;\r\n  }\r\n`;\r\n\r\nconst TopicTitle = styled.div`\r\n  color: #9589be;\r\n  /* font-size: 1rem; */\r\n  /* font-size: clamp(4vh, 30px, 30px); */\r\n  /* font-size: min(2rem, 4vh); */\r\n  font-size: 4vh;\r\n  display: block;\r\n  margin: 30px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n\r\n  /* @media (max-width: 40em) {\r\n    font-size: 5vh;\r\n  } */\r\n\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst Quiz = (props) => {\r\n  //set the courseTitle for whatever course the User is on here as well as course landing page in case a user is lands onto a topic page directly\r\n  let {\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    entryStore,\r\n    setEntryStore,\r\n  } = useAmazonContext();\r\n\r\n  console.log(courseDetails);\r\n  useEffect(() => {\r\n    setCourseTitleUserIsOn(props.match.params.courseTitle);\r\n  }, []);\r\n  console.log(courseTitleUserIsOn);\r\n  console.log(props.match.params.courseTitle);\r\n\r\n  console.log(courseDetails);\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [sumCorrect, setSumCorrect] = useState([]);\r\n  const [whereDidIComeFrom, setWhereDidIComeFrom] = useState(\"none\");\r\n  const location = useLocation(); //Props obtained from Router Link\r\n\r\n  const checkSubmission = () => setSubmitted(true);\r\n\r\n  useEffect(() => window.scrollTo({ top: 0, behavior: \"smooth\" }), [submitted]);\r\n\r\n  // console.log(sumCorrect);\r\n\r\n  console.log(whereDidIComeFrom);\r\n  console.log(location);\r\n  console.log(location.state);\r\n  // console.log(location.state.comingFrom);\r\n\r\n  //set the course Details\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      console.log(response.data);\r\n      let allCourses = response.data;\r\n      let courseChosen = allCourses.find(\r\n        (o) =>\r\n          o.courseTitle.replace(/\\s/g, \"\") === props.match.params.courseTitle\r\n      );\r\n      setCourseDetails(courseChosen);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(courseDetails);\r\n\r\n  //Topic to be displayed\r\n  console.log(props.match);\r\n  console.log(props.match.params.topicNumber);\r\n\r\n  let topicNumberFromSideBar = props.match.params.topicNumber;\r\n  console.log(topicNumberFromSideBar);\r\n  console.log(courseDetails);\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `/examplesData?collectionName=${courseDetails.courseExamplesCollectionName}&modelName=${courseDetails.courseExamplesModelName}`\r\n    ).then((response) => {\r\n      setExampleDatafromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [courseDetails]);\r\n\r\n  // let { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  // // Finding quiz questions algorithm starts here\r\n\r\n  //Topic Data from BackEnd\r\n  const [selectedTopic, setSelectedTopic] = useState([]);\r\n\r\n  console.log(courseTitleUserIsOn);\r\n\r\n  //Set the selected topic\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/topicRESTCAll/${topicNumberFromSideBar}?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setSelectedTopic(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [topicNumberFromSideBar, courseDetails]);\r\n\r\n  // let selectedTopic = topicDatafromBackEnd.find(\r\n  //   (o) => o.topicNumber === topicNumberFromSideBar\r\n  // );\r\n\r\n  console.log(selectedTopic);\r\n  //End\r\n\r\n  //This use Effect is needed incase someone lands onto the topic page first, (we are loading sidebar data on the landing page, but need it for the topic page too)\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/sideBarData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setEntryStore(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [selectedTopic.topicNumber]);\r\n  console.log(entryStore);\r\n\r\n  const [topicNumbersListfromBackEnd, setTopicNumbersListfromBackEnd] =\r\n    useState([]);\r\n  useEffect(() => {\r\n    axios(\r\n      `/${courseTitleUserIsOn}/topicNumbersList?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n    ).then((response) => {\r\n      setTopicNumbersListfromBackEnd(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, [selectedTopic.topicNumber]);\r\n  console.log(topicNumbersListfromBackEnd);\r\n\r\n  const sectionList = []; //Creates a list of all the sectionNumbers on this topic\r\n  selectedTopic.sections &&\r\n    selectedTopic.sections.map((section) => {\r\n      return sectionList.push(section.sectionNumber);\r\n    });\r\n\r\n  console.log(sectionList);\r\n\r\n  // Number of questions display properties\r\n\r\n  let needToDisplay = 100;\r\n  let needtoSelect = Math.ceil(needToDisplay / sectionList.length);\r\n  console.log(needtoSelect);\r\n\r\n  let selectedSectionExamples = []; //List of selected examples from each section\r\n  let selectedSectionExamplesPool = []; //List of all selected examples from all sections\r\n  let newselectedSectionExamplesPool = []; //Needed this to use the concat logic because concat requires you to store the concatenation into a new variable\r\n  let finalSetOfExamplesToDisplay = []; //final list of examples to display\r\n\r\n  // Algorithm for obtaining questions from each section:\r\n\r\n  // Randomiser function to create quiz for all topics\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  sectionList.map((sectionNumber) => {\r\n    //Mapping through the list of sections that from the Topic\r\n    let allSectionExamples =\r\n      exampleDatafromBackEnd &&\r\n      exampleDatafromBackEnd.length !== 0 &&\r\n      exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n    console.log(allSectionExamples);\r\n    if (allSectionExamples.length > needtoSelect) {\r\n      selectedSectionExamples = chooseRandom(allSectionExamples, needtoSelect);\r\n      console.log(selectedSectionExamples);\r\n      newselectedSectionExamplesPool = selectedSectionExamplesPool.concat(\r\n        newselectedSectionExamplesPool,\r\n        selectedSectionExamples\r\n      );\r\n    } else {\r\n      newselectedSectionExamplesPool = selectedSectionExamplesPool.concat(\r\n        newselectedSectionExamplesPool,\r\n        allSectionExamples\r\n      );\r\n    }\r\n    console.log(selectedSectionExamplesPool);\r\n    console.log(newselectedSectionExamplesPool);\r\n  });\r\n  console.log(selectedSectionExamplesPool);\r\n  console.log(newselectedSectionExamplesPool);\r\n  if (newselectedSectionExamplesPool.length > needToDisplay) {\r\n    finalSetOfExamplesToDisplay = chooseRandom(\r\n      newselectedSectionExamplesPool,\r\n      needToDisplay\r\n    );\r\n  } else {\r\n    finalSetOfExamplesToDisplay = newselectedSectionExamplesPool;\r\n  }\r\n\r\n  console.log(finalSetOfExamplesToDisplay);\r\n\r\n  // let selectedQuizQuestions = [];\r\n\r\n  // // if (location.state.comingFrom == \"Topic\") {\r\n  // //   selectedQuizQuestions = location.state.topicSelectedQuizQuestions;\r\n  // // } else if (location.state.comingFrom == \"Section\") {\r\n  // //   selectedQuizQuestions = location.state.sectionSelectedQuizQuestions;\r\n  // // } else if (location.state.comingFrom == \"ScoreCard\") {\r\n  // //   selectedQuizQuestions = location.state.scoreCardSelectedQuizQuestons;\r\n  // // }\r\n\r\n  // console.log(selectedQuizQuestions);\r\n\r\n  // //When user changes quiz then set submitted back to false\r\n\r\n  useEffect(() => {\r\n    setSubmitted(false);\r\n    setSumCorrect([]);\r\n  }, [selectedTopic.topicNumber]);\r\n\r\n  //End\r\n\r\n  return (\r\n    <ScoreContext.Provider value={[sumCorrect, setSumCorrect]}>\r\n      <SubmitButtonContext.Provider value={[submitted, setSubmitted]}>\r\n        <>\r\n          <QuizMainSideNav\r\n            entryStore={entryStore}\r\n            topicNumbersListfromBackEnd={topicNumbersListfromBackEnd}\r\n            selectedTopic={selectedTopic}\r\n          ></QuizMainSideNav>\r\n          <TopicTitle id=\"Topic\">\r\n            {selectedTopic.topicNumber} &nbsp; {selectedTopic.topicTitle}\r\n            {/* {selectedTopic.topicYoutubeLink && (\r\n              <a\r\n                href={selectedTopic.topicYoutubeLink}\r\n                style={{ fontSize: 25, marginLeft: \"20px\" }}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <ButtonH2>\r\n                  <b>Watch</b>\r\n                </ButtonH2>\r\n              </a>\r\n            )} */}\r\n            &nbsp; &nbsp;\r\n            <ButtonH2\r\n              onClick={() => {\r\n                let title =\r\n                  \"Quiz on \" +\r\n                  selectedTopic.topicTitle +\r\n                  \"\\n\" +\r\n                  \"From the course: \" +\r\n                  courseDetails.courseTitle;\r\n                let text =\r\n                  \"Quiz on \" +\r\n                  selectedTopic.topicTitle +\r\n                  \"\\n\" +\r\n                  \"From the course: \" +\r\n                  courseDetails.courseTitle;\r\n                if (navigator.share) {\r\n                  navigator.share({\r\n                    title: title,\r\n                    text: text,\r\n                    url: `/#/${courseTitleUserIsOn}/quiz/${selectedTopic.topicNumber}`,\r\n                  });\r\n                } else {\r\n                  navigator.clipboard.writeText(\r\n                    `/#/${courseTitleUserIsOn}/quiz/${selectedTopic.topicNumber}`\r\n                  );\r\n                }\r\n              }}\r\n            >\r\n              <b>share quiz</b>\r\n            </ButtonH2>\r\n          </TopicTitle>\r\n          {/* <CenteredButtonContainer>\r\n            <Link\r\n              to={`/${courseTitleUserIsOn}/topic/` + selectedTopic.topicNumber}\r\n            >\r\n              <StudyModeButton>\r\n                <p style={{ fontSize: \"2vh\", margin: \"0px\" }}>Switch to</p>\r\n                <b>Study Mode</b>\r\n              </StudyModeButton>\r\n            </Link>\r\n          </CenteredButtonContainer> */}\r\n          {submitted ? (\r\n            <ScoreCard\r\n              // goBackTo={\r\n              //   location.state.comingFrom == \"Topic\"\r\n              //     ? \"Topic\"\r\n              //     : location.state.section\r\n              // } //Used to send section to HashLink\r\n              sections={\r\n                location.state\r\n                  ? location.state.comingFrom == \"Topic\"\r\n                    ? location.state.sectionList\r\n                    : location.state.comingFrom == \"Section\"\r\n                    ? location.state.section\r\n                    : location.state.comingFrom == \"ScoreCard\"\r\n                    ? location.state.sections\r\n                    : \"none\"\r\n                  : sectionList\r\n              }\r\n              comingFrom={\r\n                location.state &&\r\n                (location.state.comingFrom == \"Topic\"\r\n                  ? \"Topic\"\r\n                  : location.state.comingFrom == \"Section\"\r\n                  ? \"Section\"\r\n                  : location.state.comingFrom == \"ScoreCard\"\r\n                  ? \"ScoreCard\"\r\n                  : \"none\")\r\n              }\r\n              whereDidIComeFrom={whereDidIComeFrom}\r\n              topicNumber={props.match.params.topicNumber}\r\n              sectionNumber={\r\n                location.state &&\r\n                (location.state.comingFrom == \"Section\"\r\n                  ? location.state.section\r\n                  : location.state.comingFrom == \"ScoreCard\"\r\n                  ? location.state.sectionNumber\r\n                  : \"none\")\r\n              }\r\n            ></ScoreCard>\r\n          ) : (\r\n            <QuizTitle></QuizTitle>\r\n          )}\r\n\r\n          {finalSetOfExamplesToDisplay.map((example, index) => {\r\n            return (\r\n              <div>\r\n                <QuizExample\r\n                  topicNumber={props.match.params.topicNumber} //Passed from the 'Link' id substitute which is the topicNumber obtained from the Sidebar\r\n                  example={example}\r\n                  exampleIndex={index}\r\n                ></QuizExample>\r\n                <hr\r\n                  style={{\r\n                    width: \"70vw\",\r\n                    backgroundColor: \"#9589be\",\r\n                    height: 2,\r\n                    borderRadius: 20,\r\n                    border: 0,\r\n                  }}\r\n                ></hr>\r\n              </div>\r\n            );\r\n          })}\r\n          {sumCorrect.includes(undefined) == false && //When User has clicked all answers, show button, list of answers should not contain undefined\r\n          sumCorrect.length == finalSetOfExamplesToDisplay.length &&\r\n          submitted == false ? ( //Button will dissappear when submitted == true\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: \"30px 0px\",\r\n              }}\r\n            >\r\n              <SubmitButton onClick={checkSubmission}>\r\n                <b>Submit</b>\r\n              </SubmitButton>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      </SubmitButtonContext.Provider>\r\n    </ScoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n", "import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./landingPage.css\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CourseIcon(props) {\r\n  return (\r\n    <div className=\"courseIconAndTitle\">\r\n      <img className=\"courseImage\" src={props.img} alt=\"\"></img>\r\n      <Link to={`/${props.title.replace(/\\s/g, \"\")}/start`}>\r\n        {\" \"}\r\n        <h3>{props.title}</h3>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseIcon;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport CourseIcon from \"./CourseIcon\";\r\n\r\nfunction CourseMenu() {\r\n  const [coursesDisplayed, setCoursesDisplayed] = useState([]);\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      setCoursesDisplayed(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n  console.log(coursesDisplayed);\r\n\r\n  return (\r\n    <div>\r\n      {coursesDisplayed.map((course, index) => {\r\n        return (\r\n          <CourseIcon\r\n            img=\"https://www.fluentu.com/blog/arabic/wp-content/uploads/sites/21/2016/09/arabic-apps-1.png\"\r\n            title={course.courseTitle}\r\n          ></CourseIcon>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseMenu;\r\n", "import \"./landingPageCourseContent.css\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CourseContentRow(props) {\r\n  const { entryStore, courseTitleUserIsOn } = useAmazonContext();\r\n  console.log(entryStore);\r\n  const [subMenuOpen, setSubMenuOpen] = useState(false);\r\n  // console.log(props.match);\r\n  return props.topic.rows ? (\r\n    <div onClick={() => setSubMenuOpen(!subMenuOpen)}>\r\n      <div className=\"sidenavContentCC\">\r\n        {props.topic.topicNumber}\r\n        &nbsp; &nbsp;\r\n        {props.topic.title}\r\n        <i\r\n          class={\r\n            subMenuOpen\r\n              ? \"fas fa-chevron-up toggle-btn\"\r\n              : \"fas fa-chevron-up toggle-btn-down\"\r\n          }\r\n        ></i>\r\n      </div>\r\n      <div\r\n        className={\r\n          subMenuOpen ? \"sidenavRow-submenu\" : \"sidenavRow-submenu-notOpen\"\r\n        }\r\n      >\r\n        <Link to={`/${courseTitleUserIsOn}/topic/${props.topic.topicNumber}`}>\r\n          <div className=\"sidenavRowCC\">\r\n            {props.topic.topicNumber}\r\n            &nbsp; &nbsp; Introduction\r\n          </div>\r\n        </Link>\r\n        {props.topic.entries.map((superEntry, index) => {\r\n          return (\r\n            <div>\r\n              {superEntry.entries.map((section, index) => {\r\n                return (\r\n                  <div>\r\n                    <HashLink\r\n                      to={`/${courseTitleUserIsOn}/topic/${props.topic.topicNumber}#${section.sectionNumber}`}\r\n                    >\r\n                      <div className=\"sidenavRowCC\">\r\n                        <div className=\"sidenavRowTextCC\">\r\n                          {section.sectionNumber}\r\n                          &nbsp; &nbsp;\r\n                          {section.title}\r\n                        </div>\r\n                      </div>\r\n                    </HashLink>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Link to={`/${courseTitleUserIsOn}/topic/${props.topic.topicNumber}`}>\r\n      <div className=\"sidenavContentCC\">\r\n        {props.topic.topicNumber}\r\n        &nbsp; &nbsp;\r\n        {props.topic.title}\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default CourseContentRow;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CourseContentRow from \"./CourseConentRow\";\r\nimport axios from \"axios\";\r\n\r\nconst CourseContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  height: 100%; /* Ensure the div takes full height */\r\n`;\r\n\r\nconst SearchBarContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 700px;\r\n  margin-bottom: 20px;\r\n  margin-right: 90px;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 10px;\r\n  padding-left: 100px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-size: 3vh;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst SearchIcon = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  left: 10px;\r\n  font-size: 3vh;\r\n`;\r\n\r\nfunction CourseContent() {\r\n  const { courseTitleUserIsOn, courseDetails, entryStore } = useAmazonContext();\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State for the search term\r\n  const [filteredEntries, setFilteredEntries] = useState([]); // State for filtered entries\r\n\r\n  // Filter the entries based on the search term\r\n  useEffect(() => {\r\n    if (entryStore && searchTerm) {\r\n      const filtered = entryStore\r\n        .map((entry) => {\r\n          const filteredSubEntries = entry.entries.filter((subEntry) => {\r\n            const subEntryMatches = subEntry.title\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase());\r\n            const nestedEntryMatches =\r\n              subEntry.entries &&\r\n              subEntry.entries.some((nestedEntry) =>\r\n                nestedEntry.entries.some(\r\n                  (section) =>\r\n                    section.title &&\r\n                    section.title\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase())\r\n                )\r\n              );\r\n            return subEntryMatches || nestedEntryMatches;\r\n          });\r\n          return { ...entry, entries: filteredSubEntries };\r\n        })\r\n        .filter((entry) => entry.entries.length > 0);\r\n      setFilteredEntries(filtered);\r\n    } else {\r\n      setFilteredEntries(entryStore);\r\n    }\r\n  }, [entryStore, searchTerm]);\r\n\r\n  return (\r\n    <div className=\"courseContent\">\r\n      <CourseContentWrapper>\r\n        <div className=\"courseContentHeader\">Course Content</div>\r\n        <SearchBarContainer>\r\n          <SearchBar\r\n            type=\"text\"\r\n            placeholder=\"Search for a topic\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <SearchIcon>\r\n            <FontAwesomeIcon icon={faSearch} />\r\n          </SearchIcon>\r\n        </SearchBarContainer>\r\n      </CourseContentWrapper>\r\n      {filteredEntries &&\r\n        filteredEntries.map((entry, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <div className=\"sidenavContentHeaderMainMenuCC\">\r\n                {entry.title}\r\n              </div>\r\n              {entry.entries.map((subEntry, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <CourseContentRow topic={subEntry}></CourseContentRow>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseContent;\r\n", "import \"./landingPageCourseContent.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CourseContentRow from \"./CourseConentRow\";\r\nimport axios from \"axios\";\r\n\r\n/* Before coding it is important to agree on what each of the stats mean:\r\nnumberOfLessons = count of Sections\r\nnumberOfVideos = count of Sections that have a youTubeLink\r\nnumberOfQuizQuestions = count of examples data set\r\napproxCourseDuration = (timeToCompleteEachLesson*numberOfLessons) + \r\n                       (timeToCompleteEachTopicQuiz*numberOfTopicsWithSections) + \r\n                       (addedBufferTime*numberOfTopicsWithSections)\r\n    where timeToCompleteEachLesson = time it takes to complete a Section\r\n    timeToCompleteEachTopicQuiz = time it takes to Complete a Topic Quiz [I am assuming this is the same time for each topic regardless of the number of sections in each Topic because the count of questions in the Topic Quiz is the same regardless of count of sections]\r\n    numberOfTopicsWithSections = count of Topics with Sections\r\n    addedBufferTime = added Time a user might spend on a Topic if a user makes mistakes in sections or Topics\r\n*/\r\n\r\nfunction CourseStats() {\r\n  const { topicDatafromBackEnd, exampleDatafromBackEnd } = useAmazonContext();\r\n\r\n  let numberOfLessons = 0;\r\n  let numberOfVideos = 0;\r\n  let numberOfTopicsWithSections = 0;\r\n\r\n  for (let i = 0; i < topicDatafromBackEnd.length; i++) {\r\n    numberOfLessons += topicDatafromBackEnd[i].sections.length;\r\n    if (topicDatafromBackEnd[i].sections.length !== 0) {\r\n      //if the topic has a section\r\n      numberOfTopicsWithSections += 1;\r\n      for (let j = 0; j < topicDatafromBackEnd[i].sections.length; j++) {\r\n        if (topicDatafromBackEnd[i].sections[j].sectonYoutubeLink) {\r\n          //count the sections with videos\r\n          numberOfVideos += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(numberOfLessons);\r\n  console.log(numberOfVideos);\r\n  console.log(numberOfTopicsWithSections);\r\n\r\n  console.log(topicDatafromBackEnd);\r\n\r\n  let numberOfQuizQuestions = exampleDatafromBackEnd.length;\r\n\r\n  console.log(numberOfQuizQuestions);\r\n\r\n  let timeToCompleteEachLesson = 2;\r\n  let timeToCompleteEachTopicQuiz = 2;\r\n  let addedBufferTime = 1;\r\n\r\n  let approxCourseDuration =\r\n    timeToCompleteEachLesson * numberOfLessons +\r\n    timeToCompleteEachTopicQuiz * numberOfTopicsWithSections +\r\n    addedBufferTime * numberOfTopicsWithSections;\r\n\r\n  console.log(approxCourseDuration);\r\n\r\n  return (\r\n    <div className=\"courseStatBanner\">\r\n      <div className=\"courseStat\">\r\n        <div className=\"courseStatImage\">\r\n          <img src=\"https://img.icons8.com/external-outline-wichaiwi/100/1A1A1A/external-questionnaire-statistical-analysis-outline-wichaiwi.png\" />\r\n        </div>\r\n        <div className=\"courseStatDescription\">\r\n          <div className=\"courseStatNumber\">{numberOfQuizQuestions}</div>{\" \"}\r\n          <div className=\"courseStatName\">Quiz Questions</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"courseStat\">\r\n        <div className=\"courseStatImage\">\r\n          <img src=\"https://img.icons8.com/dotty/100/1A1A1A/saving-book.png\" />\r\n        </div>\r\n        <div className=\"courseStatDescription\">\r\n          <div className=\"courseStatNumber\">{numberOfLessons}</div>{\" \"}\r\n          <div className=\"courseStatName\">Lessons</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"courseStat\">\r\n        <div className=\"courseStatImage\">\r\n          <img src=\"https://img.icons8.com/ios/100/1A1A1A/video.png\" />\r\n        </div>\r\n        <div className=\"courseStatDescription\">\r\n          <div className=\"courseStatNumber\">{numberOfVideos}</div>{\" \"}\r\n          <div className=\"courseStatName\">Videos</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"courseStat\">\r\n        <div className=\"courseStatImage\">\r\n          <img src=\"https://img.icons8.com/external-others-iconmarket/100/1A1A1A/external-clock-essential-others-iconmarket-3.png\" />{\" \"}\r\n        </div>\r\n        <div className=\"courseStatDescription\">\r\n          <div className=\"courseStatNumber\">{approxCourseDuration} mins</div>{\" \"}\r\n          <div className=\"courseStatName\">Approx Course Duration</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseStats;\r\n", "import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MainSideNav from \"../sidebar/MainSideNav\";\r\nimport Sidenav from \"../sidebar/Sidenav\";\r\nimport SideNavContent from \"../sidebar/SideNavContent\";\r\nimport CourseIcon from \"./CourseIcon\";\r\nimport \"./landingPage.css\";\r\nimport \"../sidebar/Sidebar.css\";\r\nimport CourseContent from \"./CourseContent\";\r\nimport CourseStats from \"./CourseStats\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst navBarHeight = 10;\r\n\r\nconst Navbar = styled.nav`\r\n  background: #eb8381;\r\n  /* top: 80; */\r\n  /* height: ${navBarHeight}vh; */\r\n  transform: translateY(${(props) => props.navTop + \"vh\"});\r\n  transition: 0.2s;\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-family: Quicksand;\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  padding: 7px 12px;\r\n  /* margin-right: \"20px\"; */\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 5vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb3535;\r\n  color: white;\r\n  /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5); */\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  display: block;\r\n  margin: 0 auto;\r\n  /* margin-top: 40px; */\r\n  display: block;\r\n  textdecoration: none;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nfunction CourseLandingPage(props) {\r\n  //set the courseTitle and courseDetails for whatever course the User is on and store in AmazonContext to be used across app\r\n  let {\r\n    courseTitleUserIsOn,\r\n    setCourseTitleUserIsOn,\r\n    courseDetails,\r\n    setCourseDetails,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    entryStore,\r\n    setEntryStore,\r\n  } = useAmazonContext();\r\n  useEffect(() => {\r\n    //set courseTitle\r\n    setCourseTitleUserIsOn(props.match.params.courseTitle);\r\n  }, []);\r\n  console.log(courseTitleUserIsOn);\r\n  //set the course Details\r\n  useEffect(() => {\r\n    api.get(`/coursesData`).then((response) => {\r\n      console.log(response.data);\r\n      let allCourses = response.data;\r\n      let courseChosen = allCourses.find(\r\n        (o) => o.courseTitle.replace(/\\s/g, \"\") === courseTitleUserIsOn\r\n      );\r\n      setCourseDetails(courseChosen);\r\n    });\r\n  }, [courseTitleUserIsOn]);\r\n  console.log(courseDetails);\r\n  // Fetch data for contents as well as stats based on course clicked\r\n  useEffect(() => {\r\n    courseDetails &&\r\n      axios(\r\n        `/${courseTitleUserIsOn}/sideBarData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n      ).then((response) => {\r\n        setEntryStore(response.data);\r\n        console.log(response.data);\r\n      });\r\n    courseDetails &&\r\n      axios(\r\n        `/${courseTitleUserIsOn}/topicsData?collectionName=${courseDetails.courseTopicsCollectionName}&modelName=${courseDetails.courseTopicsModelName}`\r\n      ).then((response) => {\r\n        setTopicDatafromBackEnd(response.data);\r\n        console.log(response.data);\r\n      });\r\n    courseDetails &&\r\n      axios(\r\n        `/examplesData?collectionName=${courseDetails.courseExamplesCollectionName}&modelName=${courseDetails.courseExamplesModelName}`\r\n      ).then((response) => {\r\n        setExampleDatafromBackEnd(response.data);\r\n        console.log(response.data);\r\n      });\r\n  }, [courseDetails]);\r\n  console.log(entryStore, topicDatafromBackEnd, exampleDatafromBackEnd);\r\n\r\n  //Code for nav to hide scroll down and show on scroll up\r\n  const [navTop, setNavTop] = useState(0);\r\n  var lastScrollY = window.scrollY;\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (lastScrollY < window.scrollY) {\r\n      setNavTop(-{ navBarHeight }); //needs to be same as Nav Height defined above\r\n    } else {\r\n      setNavTop(0);\r\n    }\r\n    lastScrollY = window.scrollY;\r\n  });\r\n  //End\r\n\r\n  return courseDetails ? (\r\n    <div>\r\n      <Navbar\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 1,\r\n        }}\r\n        navTop={navTop}\r\n      >\r\n        <div className=\"navHeader\">{courseDetails.courseTitle}</div>\r\n        <Link\r\n          to={`/${courseTitleUserIsOn}/topic/1.1`}\r\n          style={{ margin: \"60px\" }}\r\n        >\r\n          <ButtonH2> Start</ButtonH2>\r\n        </Link>\r\n      </Navbar>\r\n      <h1 className=\"courseDescription\">{courseDetails.courseDescription}​</h1>\r\n\r\n      <div className=\"courseGoals\">\r\n        <div className=\"courseGoalsHeader\">What you get</div>\r\n        <div className=\"courseGoalsDescription\">\r\n          {Object.entries(courseDetails).length === 0 ? ( //UseEffects need to fetch object details and hence object will be empty until useEffect gets data, until then this is empty\r\n            <div>Loading</div>\r\n          ) : (\r\n            courseDetails.courseGoals.map((goal, index) => {\r\n              return <p>{goal}</p>;\r\n            })\r\n          )}\r\n          {/* <p>Understanding of the most important pillar of Islam</p>\r\n          <p>A path to help you achieve Paradise by the Permission of Allah</p>\r\n          <p>A path to help you protect yourself from the Hell Fire</p> */}\r\n        </div>\r\n      </div>\r\n      <CourseStats courseDetails={courseDetails}></CourseStats>\r\n      <CourseContent></CourseContent>\r\n\r\n      {/* <img\r\n        style={{ opacity: 0.2 }}\r\n        className=\"courseImage\"\r\n        src=\"https://www.fluentu.com/blog/arabic/wp-content/uploads/sites/21/2016/09/arabic-apps-1.png\"\r\n        alt=\"\"\r\n      ></img> */}\r\n    </div>\r\n  ) : (\r\n    <div>Loading</div>\r\n  );\r\n}\r\n\r\nexport default CourseLandingPage;\r\n", "import React, { useState } from \"react\";\r\n// import Button from './components/Button.js'\r\n// import Header from './components/Header.js'\r\n// import Sidebar from './components/Sidebar.js'\r\n// import \"./components/sidebar/Sidebar.css\";\r\nimport Footer from \"./components/Footer\";\r\nimport Topic from \"./components/Topic\";\r\nimport Quiz from \"./components/Quiz\";\r\nimport Button from \"./components/Button\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainSideNav from \"./components/sidebar/MainSideNav\";\r\nimport CourseMenu from \"./components/landingPage/CourseMenu\";\r\nimport CourseLandingPage from \"./components/landingPage/CourseLandingPage\";\r\nimport CourseContent from \"./components/landingPage/CourseContent\";\r\nimport CourseStats from \"./components/landingPage/CourseStats\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      {/* <MainSideNav></MainSideNav> */}\r\n\r\n      <Switch>\r\n        <Route path=\"/\" exact component={CourseMenu} />\r\n        <Route path=\"/:courseTitle/topic/:topicNumber\" component={Topic} />\r\n        <Route path=\"/:courseTitle/quiz/:topicNumber\" component={Quiz} />\r\n        <Route path=\"/:courseTitle/start\" component={CourseLandingPage} />\r\n      </Switch>\r\n      <Footer></Footer>\r\n    </Router>\r\n  );\r\n\r\n  // return (\r\n  //     <>\r\n  //     <div>\r\n  //     <Router>\r\n  //     <Sidebar></Sidebar>\r\n  //     </Router>\r\n\r\n  //     </div>\r\n  //     </>\r\n  // )\r\n}\r\n\r\nexport default App;\r\n", "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AmazonContextProvider } from \"./Contexts/AmazonContext\";\n\nReactDOM.render(\n  <div>\n    <AmazonContextProvider>\n      <App />\n    </AmazonContextProvider>\n  </div>,\n  document.getElementById(\"root\")\n);\n"],
    "sourceRoot": ""
}