{"version":3,"sources":["components/Buttons.module.css","Contexts/AmazonContext.js","components/Button.js","components/Buttons.js","components/Example.js","components/Topic.js","Contexts/ScoreContext.js","components/QuizExample.js","components/ScoreCard.js","components/Quiz.js","components/sidebar/HamburgerButton.js","components/sidebar/SideNavRow.js","components/sidebar/SideNavContent.js","components/sidebar/SubContainer.js","components/sidebar/Sidenav.js","components/sidebar/BackgroundPage.js","components/sidebar/MainSideNav.js","App.js","index.js"],"names":["module","exports","AmazonContext","React","createContext","useAmazonContext","useContext","AmazonContextProvider","props","useState","subContainer","setSubContainer","subContainerEntries","setSubContainerEntries","entryStore","setEntryStore","topicDatafromBackEnd","setTopicDatafromBackEnd","exampleDatafromBackEnd","setExampleDatafromBackEnd","topicNumbersListfromBackEnd","setTopicNumbersListfromBackEnd","useEffect","axios","then","response","data","value","Provider","children","Buttonn","styled","button","mouse","Button","className","styles","SampleButton","ButtonH2c","ButtonH2","answerWrongAnime","keyframes","answerCorrectAnime","ExampleBox","div","ExampleQuestion","h3","ExampleAnswer","answerClicked","answer","answerColor","css","AnswerExplanation","Example","console","log","setAnswerColor","setAnswerClicked","answerClickedToPractice","setAnswerClickedToPractice","selectedSectionExamples","allSectionExamples","filter","example","sectionNumber","section","length","arr","num","res","i","random","Math","floor","includes","push","chooseRandom","sectionExample","question","answers","map","answerItem","onClick","isCorrect","explanation","style","color","display","fontSize","margin","marginTop","textAlign","to","pathname","topicNumber","state","comingFrom","sectionSelectedQuizQuestions","sectionTitle","glowAnime","TopicTitle","p","TopicDescription","SectionTitle","SectionDescription","currentUrlSectionID","NoteTitle","NoteDescription","Topic","localStorage","setItem","JSON","stringify","parse","getItem","match","params","topicNumberFromSideBar","selectedTopic","find","o","currentUrl","window","location","href","split","undefined","scrollTo","top","behavior","sectionList","sections","chooseRandomExample","needtoSelect","ceil","selectedSectionExamplesPool","finalSetOfExamplesToDisplay","apply","id","topicTitle","topicYoutubeLink","marginLeft","target","rel","topicDescription","alignSelf","topicSelectedQuizQuestions","marginBottom","width","backgroundColor","height","borderRadius","border","sectonYoutubeLink","sectionDescription","sectionNotes","sectionNote","index","textDecoration","ScoreContext","SubmitButtonContext","submitted","QuizExample","sumCorrect","setSumCorrect","selectedAnswer","setSelectedAnswer","checkAnswer","newAnswerList","pushCorrectAnswer","exampleIndex","pushWrongAnswer","ScoreCardBorder","scorePercentage","ScoreCardText","ScoreMessage","ScoreCardButtons","ScoreCard","setSubmitted","useLocation","sum","reduce","a","b","round","backToStudiesHashLinkPath","goBackTo","constructor","Array","morePracticeHashLinkPath","finalExamplesOutput","scoreCardSelectedQuizQuestons","QuizTitle","SubmitButton","Quiz","whereDidIComeFrom","selectedQuizQuestions","justifyContent","HamburgerButton","click","SideNavRow","styleVariable","entries","number","title","class","SideNavContent","currentUrlArray","topicAndSection","at","topicAndSectionArray","currentTopicNumber","animation","entry","topicHeaderNumber","subEntry","rows","background","closeNav","minHeight","SubContainer","currentSectionNumberState","setCurrentSectionNumberState","currentSectionNumber","transform","superEntry","Sidenav","Transition","in","timeout","unmountOnExit","mountOnEnter","BackgroundPage","Navbar","nav","navTop","MainSideNav","navOpen","setNavOpen","rowClicked","setRowClicked","setCurrentUrlState","currentTopicNumberState","setCurrentTopicNumberState","nextTopicNumberState","setNextTopicNumberState","previousTopicNumberState","setPreviousTopicNumberState","setCurrentUrl","forEach","indexofCurrentTopicNumber","findIndex","indexofNextTopicNumber","nextTopicNumber","indexofPreviousTopicNumber","previousTopicNumber","position","zIndex","opacity","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6b742d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SampleButton\":\"Buttons_SampleButton__1mfjJ\"};","import React, { useContext, useState, useEffect } from \"react\";\r\nimport SidebarData from \"../components/SidebarData\";\r\nimport axios from \"axios\";\r\n\r\nexport const AmazonContext = React.createContext();\r\n\r\nexport function useAmazonContext() {\r\n  return useContext(AmazonContext);\r\n}\r\n\r\nexport function AmazonContextProvider(props) {\r\n  //Responsible for opening and closing the sub container\r\n  const [subContainer, setSubContainer] = useState(false);\r\n  //Responsible for storing the subContainers entries\r\n  const [subContainerEntries, setSubContainerEntries] = useState(null);\r\n  //Responsible for holding all of the data that goes into the navbar\r\n  const [entryStore, setEntryStore] = useState(null);\r\n  //Topic Data from BackEnd\r\n  const [topicDatafromBackEnd, setTopicDatafromBackEnd] = useState([]);\r\n  //Examples Data from BackEnd\r\n  const [exampleDatafromBackEnd, setExampleDatafromBackEnd] = useState([]);\r\n  //TopicNumbers List from BackEnd\r\n  const [topicNumbersListfromBackEnd, setTopicNumbersListfromBackEnd] =\r\n    useState([]);\r\n\r\n  //To call TopicsData from the backend which will return all topics to the front end\r\n  useEffect(() => {\r\n    axios(\"/topicsData\").then((response) => {\r\n      setTopicDatafromBackEnd(response.data);\r\n    });\r\n  }, []);\r\n\r\n  //To call ExamplesData from the backend which will return all topics to the front end\r\n  useEffect(() => {\r\n    axios(\"/examplesData\").then((response) => {\r\n      setExampleDatafromBackEnd(response.data);\r\n    });\r\n  }, []);\r\n\r\n  //To call ExamplesData from the backend which will return all examples to the front end\r\n  useEffect(() => {\r\n    axios(\"/sideBarData\").then((response) => {\r\n      setEntryStore(response.data);\r\n    });\r\n  }, []);\r\n\r\n  //To call TopicNumbers from the backend which will return all topics numbers to the front end\r\n  useEffect(() => {\r\n    axios(\"/topicNumbersList\").then((response) => {\r\n      setTopicNumbersListfromBackEnd(response.data);\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"https://amazon-navbar.herokuapp.com/fetch\")\r\n  //     .then((response) => response.json())\r\n  //     .then((response) => {\r\n  //       setEntryStore(response);\r\n  //       // console.log(response);\r\n  //     });\r\n  // }, []);\r\n\r\n  // New Code\r\n\r\n  // const SidebarData = [\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"1.1\",\r\n  //         title: \"The purpose of this course\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"1.2\",\r\n  //         title: \"Qalimah\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab69680a5705404d68d9f9\",\r\n  //     title: \"Why Arabic?\",\r\n  //     topicHeaderNumber: \"1\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a0659\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.1.1\",\r\n  //         title: \"Ism Muntharif\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.1.2\",\r\n  //         title: \"Gair Muntharif Asma\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.1.3\",\r\n  //         title: \"Mabni Asma\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab69ee0a5705404d68d9fc\",\r\n  //     title: \"I'araab\",\r\n  //     topicHeaderNumber: \"2.1\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065a\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.2.1\",\r\n  //         title: \"Mu’annath\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.2\",\r\n  //         title: \"Mu’anath Haqeeqi\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.3\",\r\n  //         title: \"Mu’anath Gair Haqeeqi\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"1.2.1.1\",\r\n  //         title: \"Mua’nath Alamati\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"1.2.1.1\",\r\n  //             title: \"Mua’nath Alamati\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.1\",\r\n  //                 title: \"Gol Ta ة\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.2\",\r\n  //                 title: \"Alif Mamdoodah اء\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"1.2.1.1.3\",\r\n  //                 title: \"Alif Maqthoorah اى\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.4\",\r\n  //         title: \"Mua’nath Samai\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.2.5\",\r\n  //         title: \"How to convert Muthakkar to Mu’anath\",\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Jins\",\r\n  //     topicHeaderNumber: \"2.2\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: false,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.3.1\",\r\n  //         title: \"Wahid\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.2\",\r\n  //         title: \"Muthanna\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.3\",\r\n  //         title: \"Jam’a\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.4\",\r\n  //         title: \"Jam’a Saalim\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.3.5\",\r\n  //             title: \"Jam’a Saalim\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.3.5.1\",\r\n  //                 title: \"Jam’a Saalim Muthakkar\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.3.5.2\",\r\n  //                 title: \"Jama’a Saalim Mu’annath\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.6\",\r\n  //         title: \"Jam’a Saalim Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.7\",\r\n  //         title: \"Jam’a Mukassar\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.3.8\",\r\n  //         title: \"Jam’a Mukassar Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Adad\",\r\n  //     topicHeaderNumber: \"2.3\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: true,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     entries: [\r\n  //       {\r\n  //         topicNumber: \"2.4.1\",\r\n  //         title: \"Test Chart\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"3.1.1.1\",\r\n  //         title: \"Mu’arifah\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"3.1.1.1\",\r\n  //             title: \"Mu’arifah\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.1\",\r\n  //                 title: \"Ism Alam\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.2\",\r\n  //                 title: \"Ism Zamaa’ir\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.3\",\r\n  //                 title: \"Ism Ishaari\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"3.1.1.1.4\",\r\n  //                 title: \"Ism Mawthoola\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.2\",\r\n  //         title: \"Nakirah\",\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.3\",\r\n  //         title: \"Mua’rifah billam (How to make nakirah to Mua’rifah)\",\r\n  //         rows: false,\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.4\",\r\n  //         title: \"How would Al react with different forms of Ism\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.4.4\",\r\n  //             title: \"How would Al react with different forms of Ism\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.1\",\r\n  //                 title: \"Gair Muntharif Asma reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.2\",\r\n  //                 title: \"Ism Muthanna reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.3\",\r\n  //                 title: \"Jam’a reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.4\",\r\n  //                 title: \"Jama’a Saalim reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.5\",\r\n  //                 title: \"Jama’a Mukassar reacting to Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.4.6\",\r\n  //                 title: \"Mabni Asma Reacting to Al\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //       {\r\n  //         topicNumber: \"2.4.5\",\r\n  //         title: \"Some things about Al\",\r\n  //         rows: true,\r\n  //         entries: [\r\n  //           {\r\n  //             topicNumber: \"2.4.5\",\r\n  //             title: \"Some things about Al\",\r\n  //             entries: [\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.1\",\r\n  //                 title: \"Components of Al\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.2\",\r\n  //                 title: \"When to pronounce L (Kamri vs Shamsi Huruf)\",\r\n  //               },\r\n  //               {\r\n  //                 sectionNumber: \"2.4.5.3\",\r\n  //                 title: \"Arabs sometimes make an exception\",\r\n  //               },\r\n  //             ],\r\n  //           },\r\n  //         ],\r\n  //       },\r\n  //     ],\r\n  //     _id: \"60ab6a260a5705404d68d9fd\",\r\n  //     title: \"Wus’at\",\r\n  //     topicHeaderNumber: \"2.4\",\r\n  //     type: {\r\n  //       _id: \"61a049aaad966900153a065b\",\r\n  //       rows: false,\r\n  //       dropDown: false,\r\n  //     },\r\n  //   },\r\n  // ];\r\n\r\n  //Decide here which SidebarData to send to application:\r\n\r\n  // useEffect(() => {\r\n  //   setEntryStore(SidebarData);\r\n  // }, []);\r\n\r\n  // Sending all the important data above as values in other parts of the application:\r\n\r\n  const value = {\r\n    subContainer,\r\n    setSubContainer,\r\n    subContainerEntries,\r\n    setSubContainerEntries,\r\n    entryStore,\r\n    setEntryStore,\r\n    topicDatafromBackEnd,\r\n    setTopicDatafromBackEnd,\r\n    exampleDatafromBackEnd,\r\n    setExampleDatafromBackEnd,\r\n    topicNumbersListfromBackEnd,\r\n    setTopicNumbersListfromBackEnd,\r\n  };\r\n\r\n  return (\r\n    <AmazonContext.Provider value={value}>\r\n      {props.children}\r\n    </AmazonContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport styles from \"./Buttons.module.css\";\r\n\r\nconst Buttonn = styled.button`\r\n  font-family: \"Century Gothic\", serif;\r\n  padding: 10px 50px;\r\n  color: ${(props) => (props.mouse ? \"red\" : \"blue\")};\r\n  font-size: 50px;\r\n`;\r\n\r\nfunction Button() {\r\n  const [mouse, setMouse] = useState(false);\r\n\r\n  const mouseDown = () => setMouse(!mouse);\r\n\r\n  return <Buttonn className={styles.SampleButton}>Start</Buttonn>;\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ButtonH2c = styled.button`\r\n  background: red;\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb8381;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ButtonH1c = styled.button`\r\n  background: red;\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 25px;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb8381;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nexport const ButtonH2 = (props) => {\r\n  return <ButtonH2c>{props.children}</ButtonH2c>;\r\n};\r\n\r\nexport const ButtonH1 = (props) => {\r\n  return <ButtonH1c>{props.children}</ButtonH1c>;\r\n};\r\n\r\nexport default ButtonH2;\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport ButtonH2 from \"./Buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { allExampleData } from \"./TopicData\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\n\r\nconst answerWrongAnime = keyframes`\r\n0%{transform: scale(1)}\r\n20%{transform: scale(1.2)}\r\n50%{transform: scale(1)}\r\n75%{transform: scale(1.2)}\r\n100%{transform: scale(1)}\r\n`;\r\n\r\nconst answerCorrectAnime = keyframes`\r\n0%{transform: scale(1)}\r\n50%{transform: scale(2)}\r\n100%{transform: scale(1)}\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n0%{opacity: 0}\r\n100%{opacity: 1}\r\n`;\r\n\r\nconst ExampleBox = styled.div`\r\n  box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  background: #f8f8f8;\r\n  margin-top: 40px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst ExampleQuestion = styled.h3`\r\n  /* font-size: 17px; */\r\n  font-size: 2.2vh;\r\n  text-align: center;\r\n`;\r\n\r\nconst ExampleAnswer = styled.div`\r\n  font-size: 2.2vh;\r\n  display: flex;\r\n  background: ${(props) =>\r\n    props.answerClicked == props.answer ? props.answerColor : \"#fcebeb\"};\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  transition: transform 300ms;\r\n  justify-content: center;\r\n  animation: ${(props) =>\r\n    props.answerClicked == props.answer && props.answerColor == \"#DAF7A6\"\r\n      ? css`\r\n          ${answerCorrectAnime} 1s cubic-bezier(1,-0.74,.42,.57)\r\n        `\r\n      : props.answerClicked == props.answer && props.answerColor == \"#ff726f\"\r\n      ? css`\r\n          ${answerWrongAnime} 400ms\r\n        `\r\n      : \"none\"};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst AnswerExplanation = styled.div`\r\n  font-size: 2vh;\r\n  display: ${(props) =>\r\n    props.answerClicked == props.answer ? \"flex\" : \"none\"};\r\n  align-items: center;\r\n  justify-content: center;\r\n  animation: ${(props) =>\r\n    props.answerClicked == props.answer && props.answerColor == \"#DAF7A6\"\r\n      ? css`\r\n          shakeY 1s\r\n        `\r\n      : props.answerClicked == props.answer && props.answerColor == \"#ff726f\"\r\n      ? css`\r\n          fadeIn 1s\r\n        `\r\n      : \"none\"};\r\n`;\r\n\r\nconst Example = (props) => {\r\n  //Obtain Example Data from back end\r\n  const { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  const [answerColor, setAnswerColor] = useState(\"#fcebeb\");\r\n  const [answerClicked, setAnswerClicked] = useState(\"NoAnswer\");\r\n  const [answerClickedToPractice, setAnswerClickedToPractice] = useState(false);\r\n\r\n  const checkAnswer = (isCorrect, answer) => {\r\n    setAnswerClicked(answer);\r\n    setAnswerClickedToPractice(true);\r\n    console.log(answerClicked);\r\n\r\n    if (isCorrect == true) {\r\n      setAnswerColor(\"#DAF7A6\");\r\n\r\n      console.log(answerColor);\r\n    } else {\r\n      setAnswerColor(\"#ff726f\");\r\n    }\r\n  };\r\n\r\n  // Randomiser function to create quiz for section\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n\r\n  let needToDisplay = 3;\r\n  let selectedSectionExamples = []; //(Will be displayed on the Quiz page for this section)\r\n\r\n  // Algorithm for obtaining questions from this section (Will be displayed on the Quiz page for this section):\r\n  let allSectionExamples = exampleDatafromBackEnd.filter(\r\n    (example) => example.sectionNumber == props.section\r\n  );\r\n  if (allSectionExamples.length > needToDisplay) {\r\n    selectedSectionExamples = chooseRandom(allSectionExamples, needToDisplay);\r\n  } else {\r\n    selectedSectionExamples = allSectionExamples;\r\n  }\r\n\r\n  console.log(selectedSectionExamples);\r\n\r\n  return (\r\n    <ExampleBox>\r\n      <ExampleQuestion>{props.sectionExample.question}</ExampleQuestion>\r\n      {props.sectionExample.answers.map((answerItem) => {\r\n        return (\r\n          <>\r\n            <ExampleAnswer\r\n              onClick={() =>\r\n                checkAnswer(answerItem.isCorrect, answerItem.answer)\r\n              }\r\n              answerColor={answerColor}\r\n              answer={answerItem.answer}\r\n              answerClicked={answerClicked}\r\n            >\r\n              <p>{answerItem.answer}</p>\r\n            </ExampleAnswer>\r\n            {\r\n              <AnswerExplanation\r\n                answerClicked={answerClicked}\r\n                answer={answerItem.answer}\r\n                answerColor={answerColor}\r\n              >\r\n                {answerItem.explanation ? (\r\n                  <>\r\n                    <p\r\n                      style={{\r\n                        color: \"red\",\r\n                        display: \"inline\",\r\n                        fontSize: \"25px\",\r\n                        margin: \"0 10px\",\r\n                      }}\r\n                    >\r\n                      ✖\r\n                    </p>\r\n                    <p\r\n                      style={{\r\n                        display: \"inline\",\r\n                      }}\r\n                    >\r\n                      {answerItem.explanation}\r\n                    </p>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <p\r\n                      style={{\r\n                        color: \"green\",\r\n                        display: \"inline\",\r\n                        fontSize: \"25px\",\r\n                        margin: \"0 10px 0 0\",\r\n                      }}\r\n                    >\r\n                      ✓\r\n                    </p>{\" \"}\r\n                    <p>Correct!</p>\r\n                  </>\r\n                )}\r\n              </AnswerExplanation>\r\n            }\r\n          </>\r\n        );\r\n      })}\r\n      <div\r\n        style={\r\n          answerClickedToPractice\r\n            ? { display: \"block\", marginTop: \"30px\", textAlign: \"center\" }\r\n            : { display: \"none\" }\r\n        }\r\n      >\r\n        <Link\r\n          to={{\r\n            pathname: \"/quiz/\" + props.topicNumber + \"/\" + props.section,\r\n            state: {\r\n              comingFrom: \"Section\",\r\n              sectionSelectedQuizQuestions: selectedSectionExamples,\r\n              section: props.section, //Section number that came from Topic page, could have also used selectionExample's section number\r\n            },\r\n          }}\r\n        >\r\n          <ButtonH2>\r\n            <b style={{ fontSize: \"2vh\" }}>Practice</b> <br></br>\r\n            <p style={{ fontSize: \"1.5vh\", margin: \"0px\" }}>\r\n              '{props.sectionTitle}'\r\n            </p>\r\n          </ButtonH2>\r\n        </Link>\r\n      </div>\r\n    </ExampleBox>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport TopicData, { allExampleData } from \"./TopicData\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\n// import ButtonH2 from \"./Buttons\";\r\nimport Example from \"./Example.js\";\r\n\r\nconst glowAnime = keyframes`\r\n0%{transform: scale(1); box-shadow: 0 0 0px rgba(0,0,0,0);}\r\n20%{transform: scale(1.01); background: #fcebeb; box-shadow: 0 0 20px #eb8381;}\r\n50%{transform: scale(1); box-shadow: 0 0 0px rgba(0,0,0,0);}\r\n`;\r\nconsole.log(\"Rendered\");\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb8381;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst TopicTitle = styled.p`\r\n  color: #eb8381;\r\n  /* font-size: 1rem; */\r\n  /* font-size: clamp(4vh, 30px, 30px); */\r\n  /* font-size: min(2rem, 4vh); */\r\n  font-size: 4vh;\r\n  display: block;\r\n  margin-left: 30px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n\r\n  /* @media (max-width: 40em) {\r\n    font-size: 5vh;\r\n  } */\r\n\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst TopicDescription = styled.div`\r\n  background: #f8f8f8;\r\n  /* height: 30vh; */\r\n  /* font-size: 1.2rem; */\r\n  font-size: 2.2vh;\r\n\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n  padding: 10px;\r\n  box-shadow: 0 0.1rem 0.1rem rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  position: relative;\r\n\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  padding: 20px;\r\n`;\r\n\r\nconst SectionTitle = styled.p`\r\n  color: #eb8381;\r\n  /* font-size: 20px; */\r\n  /* font-size: clamp(3vh, 20px, 20px); */\r\n  font-size: 3vh;\r\n  display: block;\r\n  margin-left: 30px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst SectionDescription = styled.div`\r\n  /* height: 30vh; */\r\n  /* font-size: 20px; */\r\n  font-size: 2vh;\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n  padding: 10px;\r\n  box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n  display: block;\r\n  position: relative;\r\n  align-items: center;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  padding: 20px;\r\n  animation: ${(props) =>\r\n    props.sectionNumber == props.currentUrlSectionID\r\n      ? css`\r\n          ${glowAnime} 2s\r\n        `\r\n      : \"none\"};\r\n`;\r\n\r\nconst NoteTitle = styled.p`\r\n  background: #e8adac;\r\n  color: white;\r\n  /* font-size: 18px; */\r\n  font-size: 2vh;\r\n  display: inline-block;\r\n  margin-bottom: 10px;\r\n  padding-right: 100px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst NoteDescription = styled.p`\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  margin-left: 30px;\r\n`;\r\n\r\nexport const Topic = (props) => {\r\n  //Obtain Topic Data from back end\r\n  let { topicDatafromBackEnd } = useAmazonContext();\r\n  console.log(topicDatafromBackEnd);\r\n\r\n  //Obtain Example Data from back end\r\n  let { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"topicDatafromBackEnd\",\r\n      JSON.stringify(topicDatafromBackEnd)\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"exampleDatafromBackEnd\",\r\n      JSON.stringify(exampleDatafromBackEnd)\r\n    );\r\n  });\r\n\r\n  if (topicDatafromBackEnd.length == 0) {\r\n    topicDatafromBackEnd = JSON.parse(\r\n      localStorage.getItem(\"topicDatafromBackEnd\")\r\n    );\r\n  }\r\n\r\n  if (exampleDatafromBackEnd.length == 0) {\r\n    exampleDatafromBackEnd = JSON.parse(\r\n      localStorage.getItem(\"exampleDatafromBackEnd\")\r\n    );\r\n  }\r\n\r\n  //Topic to be displayed\r\n  console.log(props.match);\r\n  console.log(props.match.params.topicNumber);\r\n\r\n  const topicNumberFromSideBar = props.match.params.topicNumber;\r\n  let selectedTopic = topicDatafromBackEnd.find(\r\n    (o) => o.topicNumber === topicNumberFromSideBar\r\n  );\r\n\r\n  console.log(selectedTopic);\r\n  //End\r\n\r\n  //For page refresh\r\n  //End\r\n\r\n  //Code to make a particular section glow\r\n  let currentUrl = window.location.href;\r\n  let currentUrlArray = currentUrl.split(\"#\");\r\n  let currentUrlSectionID = currentUrlArray[1];\r\n  console.log(topicNumberFromSideBar);\r\n  //End\r\n\r\n  //To scroll to the top on change of url\r\n  useEffect(() => {\r\n    if (currentUrlSectionID === undefined) {\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }\r\n  }, [currentUrl]);\r\n  console.log(currentUrl);\r\n  //End\r\n\r\n  const sectionList = []; //Creates a list of all the sectionNumbers on this topic\r\n  selectedTopic.sections &&\r\n    selectedTopic.sections.map((section) => {\r\n      return sectionList.push(section.sectionNumber);\r\n    });\r\n\r\n  console.log(sectionList);\r\n\r\n  // Randomiser function to choose an example for a particular section\r\n\r\n  const chooseRandomExample = (sectionNumber) => {\r\n    let allSectionExamples = exampleDatafromBackEnd.filter(\r\n      //list of ALL examples for a particular section in the database\r\n      (example) => example.sectionNumber == sectionNumber\r\n    );\r\n    const random = Math.floor(Math.random() * allSectionExamples.length);\r\n    let selectedExample = allSectionExamples[random];\r\n    return selectedExample;\r\n  };\r\n\r\n  // Randomiser function to create quiz for all topics\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n\r\n  let needToDisplay = 3;\r\n  let needtoSelect = Math.ceil(needToDisplay / sectionList.length);\r\n\r\n  let selectedSectionExamples = []; //List of selected examples from each section\r\n  let selectedSectionExamplesPool = []; //List of all selected examples from all sections\r\n  let finalSetOfExamplesToDisplay = []; //final list of examples to display\r\n\r\n  // Algorithm for obtaining questions from each section:\r\n  sectionList.map((sectionNumber) => {\r\n    //Mapping through the list of sections that from the Topic\r\n    let allSectionExamples = exampleDatafromBackEnd.filter(\r\n      //list of ALL examples for a particular section in the database\r\n      (example) => example.sectionNumber == sectionNumber\r\n    );\r\n    if (allSectionExamples.length > needtoSelect) {\r\n      selectedSectionExamples = chooseRandom(allSectionExamples, needtoSelect);\r\n      selectedSectionExamplesPool.push.apply(\r\n        selectedSectionExamplesPool,\r\n        selectedSectionExamples\r\n      );\r\n    } else {\r\n      selectedSectionExamplesPool.push.apply(\r\n        selectedSectionExamplesPool,\r\n        allSectionExamples\r\n      );\r\n    }\r\n  });\r\n  if (selectedSectionExamplesPool.length > needToDisplay) {\r\n    finalSetOfExamplesToDisplay = chooseRandom(\r\n      selectedSectionExamplesPool,\r\n      needToDisplay\r\n    );\r\n  } else {\r\n    finalSetOfExamplesToDisplay = selectedSectionExamplesPool;\r\n  }\r\n\r\n  console.log(finalSetOfExamplesToDisplay);\r\n\r\n  return (\r\n    <div>\r\n      <TopicTitle id=\"Topic\">\r\n        {selectedTopic.topicNumber} &nbsp; {selectedTopic.topicTitle}\r\n        {selectedTopic.topicYoutubeLink && (\r\n          <a\r\n            href={selectedTopic.topicYoutubeLink}\r\n            style={{ fontSize: 25, marginLeft: \"20px\" }}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <ButtonH2>\r\n              <b>Watch</b>\r\n            </ButtonH2>\r\n          </a>\r\n        )}\r\n      </TopicTitle>\r\n      <TopicDescription>\r\n        <p>{selectedTopic.topicDescription}</p>\r\n        <div style={{ alignSelf: \"center\" }}>\r\n          <Link\r\n            to={{\r\n              pathname: \"/quiz/\" + selectedTopic.topicNumber,\r\n              state: {\r\n                comingFrom: \"Topic\",\r\n                topicSelectedQuizQuestions: finalSetOfExamplesToDisplay,\r\n                sectionList: sectionList,\r\n              },\r\n            }}\r\n          >\r\n            {selectedTopic.sections.length !== 0 && (\r\n              <ButtonH2>\r\n                <b>Quiz me!</b>\r\n              </ButtonH2>\r\n            )}\r\n          </Link>\r\n        </div>\r\n      </TopicDescription>\r\n      <hr\r\n        style={{\r\n          marginTop: 50,\r\n          marginBottom: 50,\r\n          width: \"70vw\",\r\n          backgroundColor: \"#eb8381\",\r\n          height: 2,\r\n          borderRadius: 20,\r\n          border: 0,\r\n        }}\r\n      ></hr>\r\n\r\n      {selectedTopic.sections &&\r\n        selectedTopic.sections.map((section) => {\r\n          return (\r\n            <div>\r\n              <SectionTitle id={section.sectionNumber}>\r\n                <b>\r\n                  {section.sectionNumber} &nbsp; {section.sectionTitle}\r\n                </b>\r\n                {section.sectonYoutubeLink && (\r\n                  <a\r\n                    href={section.sectonYoutubeLink}\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <ButtonH2>\r\n                      <b>Watch</b>\r\n                    </ButtonH2>\r\n                  </a>\r\n                )}\r\n              </SectionTitle>\r\n              <SectionDescription\r\n                currentUrlSectionID={currentUrlSectionID}\r\n                sectionNumber={section.sectionNumber}\r\n              >\r\n                <div>\r\n                  <p>{section.sectionDescription}</p>\r\n                </div>\r\n                {\r\n                  /* { Start from here to add notes */\r\n                  section.sectionNotes &&\r\n                    section.sectionNotes.map((sectionNote, index) => {\r\n                      return (\r\n                        <div>\r\n                          <NoteTitle>\r\n                            <b>&nbsp; Note {index + 1}</b>\r\n                          </NoteTitle>\r\n                          <NoteDescription>{sectionNote}</NoteDescription>\r\n                        </div>\r\n                      );\r\n                    })\r\n                }\r\n                <Example\r\n                  topicNumber={topicNumberFromSideBar}\r\n                  section={section.sectionNumber}\r\n                  sectionTitle={section.sectionTitle}\r\n                  sectionExample={chooseRandomExample(section.sectionNumber)}\r\n                ></Example>\r\n              </SectionDescription>\r\n              <hr\r\n                style={{\r\n                  marginTop: 50,\r\n                  marginBottom: 50,\r\n                  width: \"70vw\",\r\n                  backgroundColor: \"#eb8381\",\r\n                  height: 2,\r\n                  borderRadius: 20,\r\n                  border: 0,\r\n                }}\r\n              ></hr>\r\n            </div>\r\n          );\r\n        })}\r\n      <div>\r\n        <Link\r\n          to={{\r\n            pathname: \"/quiz/\" + selectedTopic.topicNumber,\r\n            state: {\r\n              comingFrom: \"Topic\",\r\n              topicSelectedQuizQuestions: finalSetOfExamplesToDisplay,\r\n              sectionList: sectionList,\r\n            },\r\n          }}\r\n        >\r\n          {selectedTopic.sections.length !== 0 && (\r\n            <ButtonH2\r\n              style={{\r\n                margin: \"0 auto\",\r\n                display: \"block\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              <b>Quiz me!</b>\r\n            </ButtonH2>\r\n          )}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topic;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ScoreContext = createContext();\r\n\r\nexport const SubmitButtonContext = createContext();\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport { ButtonH2 } from \"./Buttons\";\r\nimport { ScoreContext, SubmitButtonContext } from \"../Contexts/ScoreContext\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nconst fadeIn = keyframes`\r\n0%{opacity: 0}\r\n100%{opacity: 1}\r\n`;\r\n\r\nconst ExampleBox = styled.div`\r\n  box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  background: #f8f8f8;\r\n  margin: 40px 40px;\r\n  font-family: \"Quicksand\", sans-serif;\r\n`;\r\n\r\nconst ExampleQuestion = styled.h3`\r\n  font-size: 2.2vh;\r\n  text-align: center;\r\n`;\r\n\r\nconst ExampleAnswer = styled.div`\r\n  font-size: 2.2vh;\r\n  display: flex;\r\n  background: ${(props) =>\r\n    props.answerClicked == props.answer && props.submitted\r\n      ? props.answerColor\r\n      : props.answerClicked == props.answer\r\n      ? \"#DFDFDF\"\r\n      : \"#fcebeb\"};\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n  transition: transform 300ms;\r\n  justify-content: center;\r\n  pointer-events: ${(props) => (props.submitted ? \"none\" : \"auto\")};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 0 0.1rem 0.5rem rgba(0, 0, 0, 0.2);\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst AnswerExplanation = styled.div`\r\n  font-size: 2vh;\r\n\r\n  display: ${(props) =>\r\n    props.answerClicked == props.answer && props.submitted ? \"flex\" : \"none\"};\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst QuizExample = (props) => {\r\n  const [sumCorrect, setSumCorrect] = useContext(ScoreContext);\r\n  const [submitted, setSubmitted] = useContext(SubmitButtonContext);\r\n\r\n  const [answerColor, setAnswerColor] = useState(\"#fcebeb\");\r\n  const [answerClicked, setAnswerClicked] = useState(\"NoAnswer\");\r\n  const [answerClickedToPractice, setAnswerClickedToPractice] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(\"noSelection\");\r\n\r\n  // Issue: when i click on try again, if the same quiz example came up after re-render, it would show as already clicked due to code : props.answerClicked == props.answer\r\n  //  ? \"#DFDFDF\". In order to tackle it, this logic says, when try again is clicked\r\n  //(indicatied by sumCorrect becoming 0) AND when value of submitted changes (in this case from true to false when try agian button is clicked)  only then should the code set all answers to no answer and prevent any highlight logic to take place.\r\n  // Both conditons were needed, else didnt produced required result as can be seen if you tried to remove length==0 logic\r\n\r\n  useEffect(() => {\r\n    if (sumCorrect.length == 0) {\r\n      setAnswerClicked(\"NoAnswer\");\r\n    }\r\n  }, [submitted]);\r\n\r\n  const checkAnswer = (isCorrect, answer) => {\r\n    setAnswerClicked(answer);\r\n    setAnswerClickedToPractice(true);\r\n\r\n    if (isCorrect == true) {\r\n      setAnswerColor(\"#DAF7A6\");\r\n      setSelectedAnswer(true);\r\n      pushCorrectAnswer(props.exampleIndex);\r\n      console.log(props.exampleIndex);\r\n    } else {\r\n      setAnswerColor(\"#ff726f\");\r\n      setSelectedAnswer(false);\r\n      pushWrongAnswer(props.exampleIndex);\r\n    }\r\n  };\r\n\r\n  function pushCorrectAnswer(index) {\r\n    const newAnswerList = [...sumCorrect];\r\n    newAnswerList[index] = 1;\r\n    setSumCorrect(newAnswerList);\r\n    console.log(sumCorrect);\r\n  }\r\n\r\n  function pushWrongAnswer(index) {\r\n    const newAnswerList = [...sumCorrect];\r\n    newAnswerList[index] = 0;\r\n    setSumCorrect(newAnswerList);\r\n    console.log(sumCorrect);\r\n  }\r\n\r\n  return (\r\n    <ExampleBox>\r\n      <ExampleQuestion>{props.example.question}</ExampleQuestion>\r\n      {props.example.answers.map((answerItem) => {\r\n        return (\r\n          <>\r\n            <ExampleAnswer\r\n              onClick={() =>\r\n                checkAnswer(answerItem.isCorrect, answerItem.answer)\r\n              }\r\n              answerColor={answerColor}\r\n              answer={answerItem.answer}\r\n              answerClicked={answerClicked}\r\n              submitted={submitted}\r\n              sumCorrect={sumCorrect}\r\n            >\r\n              <p>{answerItem.answer}</p>\r\n            </ExampleAnswer>\r\n            {\r\n              <AnswerExplanation\r\n                answerClicked={answerClicked}\r\n                answer={answerItem.answer}\r\n                answerColor={answerColor}\r\n                selectedAnswer={selectedAnswer}\r\n                submitted={submitted}\r\n              >\r\n                {answerItem.explanation ? (\r\n                  <>\r\n                    <p\r\n                      style={{\r\n                        color: \"red\",\r\n                        display: \"inline\",\r\n                        fontSize: \"25px\",\r\n                        margin: \"0 10px\",\r\n                      }}\r\n                    >\r\n                      ✖\r\n                    </p>\r\n                    <p\r\n                      style={{\r\n                        display: \"inline\",\r\n                      }}\r\n                    >\r\n                      {answerItem.explanation}\r\n                    </p>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <p\r\n                      style={{\r\n                        color: \"green\",\r\n                        display: \"inline\",\r\n                        fontSize: \"25px\",\r\n                        margin: \"0 10px 0 0\",\r\n                      }}\r\n                    >\r\n                      ✓\r\n                    </p>{\" \"}\r\n                    <p>Correct!</p>\r\n                  </>\r\n                )}\r\n              </AnswerExplanation>\r\n            }\r\n          </>\r\n        );\r\n      })}\r\n      <div\r\n        style={\r\n          answerClickedToPractice && submitted\r\n            ? { display: \"block\", marginTop: \"30px\", textAlign: \"center\" }\r\n            : { display: \"none\" }\r\n        }\r\n      >\r\n        <HashLink\r\n          to={`/topic/${props.topicNumber}#${props.example.sectionNumber}`}\r\n        >\r\n          {\" \"}\r\n          {/* Hashlink to go back to the specific Section on the Topic page*/}\r\n          <ButtonH2>Study this Lesson</ButtonH2>\r\n        </HashLink>\r\n      </div>\r\n    </ExampleBox>\r\n  );\r\n};\r\n\r\nexport default QuizExample;\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  QuizState,\r\n  ScoreContext,\r\n  SubmitButtonContext,\r\n} from \"../Contexts/ScoreContext\";\r\nimport styled, { css } from \"styled-components\";\r\n// import { ButtonH2 } from \"./Buttons\";\r\nimport \"./Quiz.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { allExampleData } from \"./TopicData\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useAmazonContext } from \"../Contexts/AmazonContext\";\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 7px 100px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb8381;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst ScoreCardBorder = styled.div`\r\n  background: ${(props) =>\r\n    props.scorePercentage == 100 ? \"#f6ffe6\" : \"#e8c6c5\"};\r\n  font-size: 40px;\r\n  white-space: pre-line;\r\n  margin: 10px 30px;\r\n  padding: 10px;\r\n  box-shadow: 0 0.1rem 0.1rem rgba(0, 0, 0, 0.2);\r\n  display: ${(props) =>\r\n    props.submitted\r\n      ? \"flex\"\r\n      : \"none\"}; /* Display score card only when button is clicked, ie. when submitted state is true */\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  border-radius: 1rem;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ScoreCardText = styled.p`\r\n  font-size: 3vh;\r\n  text-align: center;\r\n  font-weight: 900;\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst ScoreMessage = styled.div`\r\n  font-size: 3vh;\r\n  text-align: center;\r\n  font-weight: 900;\r\n  margin: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${(props) =>\r\n    props.submitted && props.scorePercentage == 100\r\n      ? css`\r\n          shakeY 1s 1s\r\n        `\r\n      : props.submitted && props.scorePercentage < 100\r\n      ? css`\r\n          shakeX 1s 1s\r\n        `\r\n      : \"none\"};\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-basis: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst ScoreCardButtons = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-basis: 100%;\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst ScoreCard = (props) => {\r\n  //Obtain Example Data from back end\r\n  const { exampleDatafromBackEnd } = useAmazonContext();\r\n  console.log(exampleDatafromBackEnd);\r\n\r\n  const [sumCorrect, setSumCorrect] = useContext(ScoreContext);\r\n  const [scoreCardColour, setScoreCardColour] = useState(\"#f8f8f8\");\r\n  const [submitted, setSubmitted] = useContext(SubmitButtonContext);\r\n  const location = useLocation(); //Props obtained from Router Link\r\n\r\n  const sum = sumCorrect.reduce(function (a, b) {\r\n    return a + b;\r\n  }, 0);\r\n\r\n  const scorePercentage = Math.round((sum / sumCorrect.length) * 100);\r\n\r\n  let sectionID = props.goBackTo; //depricated, now using backToStudiesHashLinkPath\r\n  let backToStudiesHashLinkPath =\r\n    props.comingFrom == \"Topic\"\r\n      ? `/topic/${props.topicNumber}`\r\n      : props.comingFrom == \"Section\"\r\n      ? `/topic/${props.topicNumber}#${props.sectionNumber}`\r\n      : props.comingFrom == \"ScoreCard\" && props.sections.constructor == Array //Same logic as used in the quiz algorithm to figure out if it needs to go back to a topic or section\r\n      ? `/topic/${props.topicNumber}`\r\n      : props.comingFrom == \"ScoreCard\"\r\n      ? `/topic/${props.topicNumber}#${location.state.sectionNumber}`\r\n      : \"none\";\r\n  let morePracticeHashLinkPath =\r\n    props.comingFrom == \"Topic\"\r\n      ? `/quiz/${props.topicNumber}`\r\n      : props.comingFrom == \"Section\"\r\n      ? `/quiz/${props.topicNumber}/${props.sectionNumber}`\r\n      : props.comingFrom == \"ScoreCard\" && props.sections.constructor == Array\r\n      ? `/quiz/${props.topicNumber}`\r\n      : props.comingFrom == \"ScoreCard\"\r\n      ? `/quiz/${props.topicNumber}/${location.state.sectionNumber}`\r\n      : \"none\";\r\n\r\n  // if (scorePercentage == 100) {\r\n  //   setScoreCardColour(\"#ff726f\");\r\n  // } else {\r\n  //   setScoreCardColour(\"#DAF7A6\");\r\n  // }\r\n\r\n  //Keeping the quiz ready if a user hits try again , same algorithm to find questions if coming from the Topic or a Section.\r\n\r\n  // Randomiser function to create quiz for all topics\r\n\r\n  const chooseRandom = (arr, num) => {\r\n    const res = [];\r\n    for (let i = 0; i < num; ) {\r\n      const random = Math.floor(Math.random() * arr.length);\r\n      if (res.includes(arr[random])) {\r\n        continue;\r\n      }\r\n      res.push(arr[random]);\r\n      i++;\r\n    }\r\n    return res;\r\n  };\r\n\r\n  // Number of questions display properties\r\n  console.log(props.comingFrom);\r\n  console.log(props.sections);\r\n  console.log(props.topicNumber);\r\n  console.log(props.sectionNumber);\r\n  let needToDisplay = 3;\r\n  let needtoSelect = Math.ceil(needToDisplay / props.sections.length);\r\n\r\n  let selectedSectionExamples = []; //List of selected examples from each section\r\n  let selectedSectionExamplesPool = []; //List of all selected examples from all sections\r\n  let finalSetOfExamplesToDisplay = []; //final list of examples to display\r\n  let finalExamplesOutput = []; //finalOutput of examples\r\n\r\n  // Algorithm for obtaining questions from each section:\r\n  if (props.comingFrom == \"Topic\") {\r\n    props.sections.map((sectionNumber) => {\r\n      //Mapping through the list of sections that from the Topic\r\n      let allSectionExamples = exampleDatafromBackEnd.filter(\r\n        //list of ALL examples for a particular section in the database\r\n        (example) => example.sectionNumber == sectionNumber\r\n      );\r\n      if (allSectionExamples.length > needtoSelect) {\r\n        selectedSectionExamples = chooseRandom(\r\n          allSectionExamples,\r\n          needtoSelect\r\n        );\r\n        selectedSectionExamplesPool.push.apply(\r\n          selectedSectionExamplesPool,\r\n          selectedSectionExamples\r\n        );\r\n      } else {\r\n        selectedSectionExamplesPool.push.apply(\r\n          selectedSectionExamplesPool,\r\n          allSectionExamples\r\n        );\r\n      }\r\n    });\r\n    if (selectedSectionExamplesPool.length > needToDisplay) {\r\n      finalSetOfExamplesToDisplay = chooseRandom(\r\n        selectedSectionExamplesPool,\r\n        needToDisplay\r\n      );\r\n      finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n    } else {\r\n      finalSetOfExamplesToDisplay = selectedSectionExamplesPool;\r\n      finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n    }\r\n  } else if (props.comingFrom == \"Section\") {\r\n    let allSectionExamples = exampleDatafromBackEnd.filter(\r\n      (example) => example.sectionNumber == props.sections\r\n    );\r\n    if (allSectionExamples.length > needToDisplay) {\r\n      selectedSectionExamples = chooseRandom(allSectionExamples, needToDisplay);\r\n      finalExamplesOutput = selectedSectionExamples;\r\n    } else {\r\n      selectedSectionExamples = allSectionExamples;\r\n      finalExamplesOutput = selectedSectionExamples;\r\n    }\r\n  } else if (props.comingFrom == \"ScoreCard\") {\r\n    //If someone were to click Try Again from the score card, I was having a hard time trying to make the code determine which of the two logic above (Topic or Section) to run.\r\n    //If the quiz is rerun by clicking try again from score card, i need to determine whether the quiz is Topic or Section. Because Topic and Section have their own logic of running the quiz randomniser, I know that if its coming from Topic it will be an array and if it is coming form sections it is a list therefore i will run my logic based on that\r\n    if (props.sections.constructor == Array) {\r\n      props.sections.map((sectionNumber) => {\r\n        //Mapping through the list of sections that from the Topic\r\n        let allSectionExamples = exampleDatafromBackEnd.filter(\r\n          //list of ALL examples for a particular section in the database\r\n          (example) => example.sectionNumber == sectionNumber\r\n        );\r\n        if (allSectionExamples.length > needtoSelect) {\r\n          selectedSectionExamples = chooseRandom(\r\n            allSectionExamples,\r\n            needtoSelect\r\n          );\r\n          selectedSectionExamplesPool.push.apply(\r\n            selectedSectionExamplesPool,\r\n            selectedSectionExamples\r\n          );\r\n        } else {\r\n          selectedSectionExamplesPool.push.apply(\r\n            selectedSectionExamplesPool,\r\n            allSectionExamples\r\n          );\r\n        }\r\n      });\r\n      if (selectedSectionExamplesPool.length > needToDisplay) {\r\n        finalSetOfExamplesToDisplay = chooseRandom(\r\n          selectedSectionExamplesPool,\r\n          needToDisplay\r\n        );\r\n        finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n      } else {\r\n        finalSetOfExamplesToDisplay = selectedSectionExamplesPool;\r\n        finalExamplesOutput = finalSetOfExamplesToDisplay;\r\n      }\r\n    } else {\r\n      let allSectionExamples = exampleDatafromBackEnd.filter(\r\n        (example) => example.sectionNumber == props.sections\r\n      );\r\n      if (allSectionExamples.length > needToDisplay) {\r\n        selectedSectionExamples = chooseRandom(\r\n          allSectionExamples,\r\n          needToDisplay\r\n        );\r\n        finalExamplesOutput = selectedSectionExamples;\r\n      } else {\r\n        selectedSectionExamples = allSectionExamples;\r\n        finalExamplesOutput = selectedSectionExamples;\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(finalSetOfExamplesToDisplay);\r\n  console.log(selectedSectionExamples);\r\n\r\n  const restartQuiz = () => {\r\n    setSubmitted(false);\r\n    setSumCorrect([]);\r\n  };\r\n\r\n  return (\r\n    <ScoreCardBorder submitted={submitted} scorePercentage={scorePercentage}>\r\n      {scorePercentage == 100 ? (\r\n        <ScoreMessage submitted={submitted} scorePercentage={scorePercentage}>\r\n          <p\r\n            style={{\r\n              color: \"green\",\r\n              display: \"inline\",\r\n              fontSize: \"50px\",\r\n              margin: \"0 10px 0 0\",\r\n            }}\r\n          >\r\n            ✓\r\n          </p>\r\n          <p>Congratulations you got them all right!</p>\r\n        </ScoreMessage>\r\n      ) : (\r\n        <ScoreMessage submitted={submitted} scorePercentage={scorePercentage}>\r\n          <p\r\n            style={{\r\n              color: \"#ff726f\",\r\n              display: \"inline\",\r\n              fontSize: \"50px\",\r\n              margin: \"0 10px\",\r\n            }}\r\n          >\r\n            ✖\r\n          </p>\r\n          <p>Not quite there yet!</p>\r\n        </ScoreMessage>\r\n      )}\r\n\r\n      <div>\r\n        <ScoreCardText>Score</ScoreCardText>\r\n        {sum}/{sumCorrect.length}\r\n      </div>\r\n      <div>\r\n        <ScoreCardText>Percentage</ScoreCardText>\r\n        {scorePercentage}%\r\n      </div>\r\n      <ScoreCardButtons>\r\n        <Link\r\n          to={{\r\n            pathname: morePracticeHashLinkPath,\r\n            state: {\r\n              comingFrom: \"ScoreCard\",\r\n              sections: props.sections,\r\n              scoreCardSelectedQuizQuestons: finalExamplesOutput,\r\n              sectionNumber: props.sectionNumber, //Retains the section number to pass where needed\r\n            },\r\n          }}\r\n        >\r\n          <ButtonH2 style={{ marginBottom: 20 }} onClick={restartQuiz}>\r\n            More Practice\r\n          </ButtonH2>\r\n        </Link>\r\n\r\n        <HashLink to={backToStudiesHashLinkPath}>\r\n          <ButtonH2>Back to Studies</ButtonH2>\r\n        </HashLink>\r\n      </ScoreCardButtons>\r\n    </ScoreCardBorder>\r\n  );\r\n};\r\n\r\nexport default ScoreCard;\r\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TopicData, { allExampleData } from \"./TopicData\";\r\nimport QuizExample from \"./QuizExample\";\r\nimport ScoreCard from \"./ScoreCard\";\r\nimport { ScoreContext, SubmitButtonContext } from \"../Contexts/ScoreContext\";\r\nimport { ButtonH1 } from \"./Buttons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst QuizTitle = styled.p`\r\n  color: #eb8381;\r\n  font-size: 3vh;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  justify-content: center;\r\n  text-align: center;\r\n  margin: 30px 30px;\r\n  display: flex;\r\n\r\n  /* justify-content: space-between; */\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  background: red;\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #eb8381;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nconst Quiz = (props) => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [sumCorrect, setSumCorrect] = useState([]);\r\n  const [whereDidIComeFrom, setWhereDidIComeFrom] = useState(\"none\");\r\n  const location = useLocation(); //Props obtained from Router Link\r\n\r\n  const checkSubmission = () => setSubmitted(true);\r\n\r\n  useEffect(() => window.scrollTo({ top: 0, behavior: \"smooth\" }), [submitted]);\r\n\r\n  // console.log(sumCorrect);\r\n\r\n  console.log(whereDidIComeFrom);\r\n  console.log(location.state.comingFrom);\r\n\r\n  let selectedQuizQuestions = [];\r\n\r\n  if (location.state.comingFrom == \"Topic\") {\r\n    selectedQuizQuestions = location.state.topicSelectedQuizQuestions;\r\n  } else if (location.state.comingFrom == \"Section\") {\r\n    selectedQuizQuestions = location.state.sectionSelectedQuizQuestions;\r\n  } else if (location.state.comingFrom == \"ScoreCard\") {\r\n    selectedQuizQuestions = location.state.scoreCardSelectedQuizQuestons;\r\n  }\r\n\r\n  console.log(selectedQuizQuestions);\r\n\r\n  return (\r\n    <ScoreContext.Provider value={[sumCorrect, setSumCorrect]}>\r\n      <SubmitButtonContext.Provider value={[submitted, setSubmitted]}>\r\n        <>\r\n          {submitted ? (\r\n            <ScoreCard\r\n              goBackTo={\r\n                location.state.comingFrom == \"Topic\"\r\n                  ? \"Topic\"\r\n                  : location.state.section\r\n              } //Used to send section to HashLink\r\n              sections={\r\n                location.state.comingFrom == \"Topic\"\r\n                  ? location.state.sectionList\r\n                  : location.state.comingFrom == \"Section\"\r\n                  ? location.state.section\r\n                  : location.state.comingFrom == \"ScoreCard\"\r\n                  ? location.state.sections\r\n                  : \"none\"\r\n              }\r\n              comingFrom={\r\n                location.state.comingFrom == \"Topic\"\r\n                  ? \"Topic\"\r\n                  : location.state.comingFrom == \"Section\"\r\n                  ? \"Section\"\r\n                  : location.state.comingFrom == \"ScoreCard\"\r\n                  ? \"ScoreCard\"\r\n                  : \"none\"\r\n              }\r\n              whereDidIComeFrom={whereDidIComeFrom}\r\n              topicNumber={props.match.params.topicNumber}\r\n              sectionNumber={\r\n                location.state.comingFrom == \"Section\"\r\n                  ? location.state.section\r\n                  : location.state.comingFrom == \"ScoreCard\"\r\n                  ? location.state.sectionNumber\r\n                  : \"none\"\r\n              }\r\n            ></ScoreCard>\r\n          ) : (\r\n            <QuizTitle>\r\n              Pick your answers and submit to see how you are doing so far in\r\n              your journey!\r\n            </QuizTitle>\r\n          )}\r\n\r\n          {selectedQuizQuestions.map((example, index) => {\r\n            return (\r\n              <div>\r\n                <QuizExample\r\n                  topicNumber={props.match.params.topicNumber} //Passed from the 'Link' id substitute which is the topicNumber obtained from the Sidebar\r\n                  example={example}\r\n                  exampleIndex={index}\r\n                ></QuizExample>\r\n                <hr\r\n                  style={{\r\n                    width: \"70vw\",\r\n                    backgroundColor: \"#eb8381\",\r\n                    height: 2,\r\n                    borderRadius: 20,\r\n                    border: 0,\r\n                  }}\r\n                ></hr>\r\n              </div>\r\n            );\r\n          })}\r\n          {sumCorrect.includes(undefined) == false && //When User has clicked all answers, show button, list of answers should not contain undefined\r\n          sumCorrect.length == selectedQuizQuestions.length &&\r\n          submitted == false ? ( //Button will dissappear when submitted == true\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: \"30px 0px\",\r\n              }}\r\n            >\r\n              <SubmitButton onClick={checkSubmission}>\r\n                <b>Submit</b>\r\n              </SubmitButton>\r\n            </div>\r\n          ) : null}\r\n        </>\r\n      </SubmitButtonContext.Provider>\r\n    </ScoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nexport default function HamburgerButton(props) {\r\n  return (\r\n    <div className=\"hamburger-btn\" onClick={props.click}>\r\n      &#9776;\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\n\r\nexport default function SideNavRow(props) {\r\n  const { setSubContainer, setSubContainerEntries } = useAmazonContext();\r\n\r\n  const openRow = () => {\r\n    setSubContainer(true);\r\n    setSubContainerEntries(props.entries);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidenavRow\"\r\n      style={props.styleVariable}\r\n      onClick={() => props.entries && openRow()}\r\n    >\r\n      <div className=\"sidenavRowText\">\r\n        {props.number}\r\n        &nbsp; &nbsp;\r\n        {props.title}\r\n      </div>\r\n      <i class=\"fas fa-chevron-right\"></i>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport SideNavRow from \"./SideNavRow\";\r\nimport DropDown from \"./DropDown\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SideNavContent(props) {\r\n  const { entryStore } = useAmazonContext();\r\n\r\n  const [dropDownEntries, setDropDownEntries] = useState(null);\r\n\r\n  let currentUrl = window.location.href;\r\n  console.log(currentUrl);\r\n  // setCurrentUrlState(currentUrl);\r\n  let currentUrlArray = currentUrl.split(\"/\");\r\n  console.log(currentUrlArray);\r\n  let topicAndSection = currentUrlArray.at(-1);\r\n  console.log(topicAndSection);\r\n  let topicAndSectionArray = topicAndSection.split(\"#\");\r\n  console.log(topicAndSectionArray);\r\n  let currentTopicNumber = topicAndSectionArray[0];\r\n  let currentSectionNumber = topicAndSectionArray[1];\r\n  console.log(currentTopicNumber);\r\n\r\n  return (\r\n    <div\r\n      className=\"sideNavContainer\"\r\n      style={\r\n        props.state === \"exiting\"\r\n          ? { animation: \"moveMainContainer .3s forwards\" }\r\n          : props.state === \"entering\"\r\n          ? { animation: \"moveMainContainer .3s reverse backwards\" }\r\n          : null\r\n      }\r\n    >\r\n      {entryStore &&\r\n        entryStore.map((entry, index) => {\r\n          return (\r\n            <div>\r\n              <div className=\"sidenavContentHeaderMainMenu\">\r\n                {entry.topicHeaderNumber && entry.topicHeaderNumber}\r\n                &nbsp; &nbsp;\r\n                {entry.title}\r\n              </div>\r\n              {entry.entries.map((subEntry, index) => {\r\n                return (\r\n                  <div>\r\n                    {subEntry.rows ? (\r\n                      <SideNavRow\r\n                        number={subEntry.topicNumber}\r\n                        title={subEntry.title}\r\n                        entries={subEntry.entries}\r\n                        styleVariable={\r\n                          subEntry.topicNumber == currentTopicNumber\r\n                            ? { background: \"#ebebeb\" }\r\n                            : {}\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <Link to={`/topic/${subEntry.topicNumber}`}>\r\n                        <div\r\n                          className=\"sidenavContent\"\r\n                          onClick={props.closeNav}\r\n                          style={\r\n                            subEntry.topicNumber == currentTopicNumber\r\n                              ? { background: \"#ebebeb\" }\r\n                              : {}\r\n                          }\r\n                        >\r\n                          {subEntry.topicNumber && subEntry.topicNumber}\r\n                          &nbsp; &nbsp;\r\n                          {subEntry.title}\r\n                        </div>\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      <div style={{ minHeight: \"60px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\nimport SideNavRow from \"./SideNavRow\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nexport default function SubContainer(props) {\r\n  const { subContainerEntries, setSubContainer } = useAmazonContext();\r\n  const [currentSectionNumberState, setCurrentSectionNumberState] =\r\n    useState(\"\");\r\n\r\n  //Code to set current section state so that it can be used to check which section was clicked to colour code it\r\n  useEffect(() => {\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray.at(-1);\r\n    console.log(topicAndSection);\r\n    let topicAndSectionArray = topicAndSection.split(\"#\");\r\n    console.log(topicAndSectionArray);\r\n    let currentSectionNumber = topicAndSectionArray[1];\r\n    console.log(currentSectionNumber);\r\n    setCurrentSectionNumberState(currentSectionNumber);\r\n  }, []);\r\n  //End\r\n\r\n  return (\r\n    <div\r\n      className=\"sub-container\"\r\n      style={\r\n        props.state === \"entering\"\r\n          ? { animation: \"moveSubContainer .3s forwards\" }\r\n          : props.state === \"entered\"\r\n          ? { transform: \"translateX(0px)\" }\r\n          : { animation: \"moveSubContainer .3s reverse backwards\" }\r\n      }\r\n    >\r\n      <div className=\"sub-header\" onClick={() => setSubContainer(false)}>\r\n        <i class=\"fas fa-chevron-left\"></i> MAIN MENU\r\n      </div>\r\n      {subContainerEntries.map((subEntry) => (\r\n        <>\r\n          <Link to={`/topic/${subEntry.topicNumber}`}>\r\n            <div\r\n              className=\"sidenavContentHeaderSubContainer\"\r\n              onClick={props.closeNav}\r\n            >\r\n              {subEntry.topicNumber}&nbsp;&nbsp;{subEntry.title}\r\n            </div>\r\n          </Link>\r\n          {subEntry.entries.map((superEntry) => (\r\n            <HashLink\r\n              to={`/topic/${subEntry.topicNumber}#${superEntry.sectionNumber}`}\r\n            >\r\n              <div onClick={props.closeNav}>\r\n                <SideNavRow\r\n                  number={superEntry.sectionNumber}\r\n                  title={superEntry.title}\r\n                  styleVariable={\r\n                    superEntry.sectionNumber == currentSectionNumberState\r\n                      ? { background: \"#ebebeb\" }\r\n                      : {}\r\n                  }\r\n                />\r\n              </div>\r\n            </HashLink>\r\n          ))}\r\n        </>\r\n      ))}\r\n      <div style={{ minHeight: \"60px\" }}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SideNavContent from \"./SideNavContent\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport SubContainer from \"./SubContainer\";\r\nimport { useAmazonContext } from \"../../Contexts/AmazonContext\";\r\n\r\nexport default function Sidenav(props) {\r\n  const { subContainer } = useAmazonContext();\r\n  return (\r\n    <div\r\n      className=\"sidenav\"\r\n      style={\r\n        props.state === \"entering\"\r\n          ? { animation: \"moveSideBar .3s forwards\" }\r\n          : props.state === \"entered\"\r\n          ? { transform: \"translateX(-0px)\" }\r\n          : { animation: \"moveSideBar .3s reverse backwards\" }\r\n      }\r\n    >\r\n      <div className=\"sidenavHeader\">Kalima Tawheed Course</div>\r\n      <Transition in={!subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => <SideNavContent state={state} closeNav={props.click} />}\r\n      </Transition>\r\n      <Transition in={subContainer} timeout={300} unmountOnExit mountOnEnter>\r\n        {(state) => <SubContainer state={state} closeNav={props.click} />}\r\n      </Transition>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nfunction BackgroundPage(props) {\r\n  return (\r\n    <div>\r\n      <p></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackgroundPage;\r\n","import React, { useEffect } from \"react\";\r\nimport HamburgerButton from \"./HamburgerButton\";\r\nimport styled, { keyframes, css } from \"styled-components\";\r\nimport Sidenav from \"./Sidenav\";\r\nimport BackgroundPage from \"./BackgroundPage\";\r\nimport { useState } from \"react\";\r\nimport { Transition, TransitionGroup } from \"react-transition-group\";\r\nimport {\r\n  AmazonContextProvider,\r\n  useAmazonContext,\r\n} from \"../../Contexts/AmazonContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = styled.nav`\r\n  background: #f2b1ae;\r\n  /* top: 80; */\r\n  height: 5vh;\r\n  transform: translateY(${(props) => props.navTop + \"vh\"});\r\n  transition: 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ButtonH2 = styled.button`\r\n  background: red;\r\n  position: relative;\r\n  font-family: \"Roboto\", sans-serif;\r\n  padding: 7px 12px;\r\n  text-transform: uppercase;\r\n  /* font-size: 15px; */\r\n  font-size: 2vh;\r\n  overflow: hidden;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  background: #f2b1ae;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n  margin-right: 20px;\r\n\r\n  &:active {\r\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);\r\n    background: #f2b1ae;\r\n  }\r\n`;\r\n\r\nexport default function MainSideNav(props) {\r\n  const [navOpen, setNavOpen] = useState(false);\r\n  const {\r\n    entryStore,\r\n    topicNumbersListfromBackEnd,\r\n    setSubContainerEntries,\r\n    subContainer,\r\n    setSubContainer,\r\n    rowClicked,\r\n    setRowClicked,\r\n  } = useAmazonContext();\r\n  const [currentUrlState, setCurrentUrlState] = useState(\"0\");\r\n  const [currentTopicNumberState, setCurrentTopicNumberState] = useState(\"0\");\r\n  const [nextTopicNumberState, setNextTopicNumberState] = useState(\"0\");\r\n  const [previousTopicNumberState, setPreviousTopicNumberState] = useState(\"0\");\r\n\r\n  //Code for nav to hide scroll down and show on scroll up\r\n  // const [navTop, setNavTop] = useState(0);\r\n  // var lastScrollY = window.scrollY;\r\n  // window.addEventListener(\"scroll\", function () {\r\n  //   if (lastScrollY < window.scrollY) {\r\n  //     setNavTop(-5); //needs to be same as Nav Height defined above\r\n  //   } else {\r\n  //     setNavTop(0);\r\n  //   }\r\n  //   lastScrollY = window.scrollY;\r\n  // });\r\n  //End\r\n\r\n  const openNav = () => {\r\n    setNavOpen(true);\r\n  };\r\n\r\n  const closeNav = () => {\r\n    setNavOpen(false);\r\n  };\r\n\r\n  //Logic for next and previous buttons\r\n  console.log(topicNumbersListfromBackEnd);\r\n  // Step 0.1 I needed this for this component to re-render any time the currentUrl changed, so that re-render would run the useEffect below:\r\n  const setCurrentUrl = () => {\r\n    var currentUrl = window.location.href;\r\n    setCurrentUrlState(currentUrl);\r\n    console.log(currentUrl);\r\n\r\n    if (entryStore) {\r\n      entryStore.forEach(function (entry) {\r\n        entry.entries.forEach(function (subEntry) {\r\n          if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == true\r\n          ) {\r\n            console.log(currentTopicNumberState);\r\n            console.log(subEntry.entries);\r\n            setSubContainer(true);\r\n            setSubContainerEntries(subEntry.entries);\r\n          } else if (\r\n            subEntry.topicNumber == nextTopicNumberState && //this is wried that the nextTopicNumberState needed to be matched against instead of current, but looks like if i use current, then it doesnt work, mismatch\r\n            subEntry.rows == false &&\r\n            subContainer == true\r\n          ) {\r\n            console.log(subEntry.entries);\r\n            setSubContainer(false);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Step 1 obtain current topic:\r\n    let currentUrl = window.location.href;\r\n    console.log(currentUrl);\r\n    // setCurrentUrlState(currentUrl);\r\n    let currentUrlArray = currentUrl.split(\"/\");\r\n    console.log(currentUrlArray);\r\n    let topicAndSection = currentUrlArray.at(-1);\r\n    console.log(topicAndSection);\r\n    let topicAndSectionArray = topicAndSection.split(\"#\");\r\n    console.log(topicAndSectionArray);\r\n    let currentTopicNumber = topicAndSectionArray[0];\r\n    console.log(currentTopicNumber);\r\n    setCurrentTopicNumberState(currentTopicNumber);\r\n    //Step 2 Find the index of the currentTopicNumber in list of topic numbers from back end\r\n\r\n    let indexofCurrentTopicNumber = topicNumbersListfromBackEnd.findIndex(\r\n      (topicNumber) => topicNumber == currentTopicNumber\r\n    );\r\n    console.log(indexofCurrentTopicNumber);\r\n\r\n    //Step 3 Derive next topic number in list with catch error for out of bound index\r\n    let indexofNextTopicNumber = indexofCurrentTopicNumber + 1;\r\n    if (indexofNextTopicNumber > topicNumbersListfromBackEnd.length - 1) {\r\n      //if next index great then lenght of array set index number to 0 so you go back to beginning\r\n      indexofNextTopicNumber = 0;\r\n    }\r\n    console.log(indexofNextTopicNumber);\r\n    let nextTopicNumber = topicNumbersListfromBackEnd[indexofNextTopicNumber];\r\n    console.log(nextTopicNumber);\r\n    setNextTopicNumberState(nextTopicNumber);\r\n\r\n    //Step 4 Derive previous topic number in list with catch error for out of bound index\r\n    let indexofPreviousTopicNumber = indexofCurrentTopicNumber - 1;\r\n    if (indexofPreviousTopicNumber < 0) {\r\n      //if next index less then 0 set index number to last so you go back to ending\r\n      indexofPreviousTopicNumber = topicNumbersListfromBackEnd.length - 1;\r\n    }\r\n    console.log(indexofPreviousTopicNumber);\r\n    let previousTopicNumber =\r\n      topicNumbersListfromBackEnd[indexofPreviousTopicNumber];\r\n    console.log(previousTopicNumber);\r\n    setPreviousTopicNumberState(previousTopicNumber);\r\n\r\n    //Step 5 - Change sidebar to show menu based on current topic\r\n    console.log(entryStore); // when code below uncommetned it is saying entrystroe has no properties\r\n\r\n    // if (entryStore) {\r\n    //   entryStore.forEach(function (entry) {\r\n    //     entry.entries.forEach(function (subEntry) {\r\n    //       if (\r\n    //         subEntry.topicNumber == currentTopicNumberState &&\r\n    //         subEntry.rows == true\r\n    //       ) {\r\n    //         console.log(subEntry.entries);\r\n    //         setSubContainerEntries(subEntry.entries);\r\n    //         // setSubContainer(true);\r\n    //       }\r\n    //       // else if (\r\n    //       //   subEntry.topicNumber == currentTopicNumberState &&\r\n    //       //   subEntry.rows == false &&\r\n    //       //   subContainer == true\r\n    //       // ) {\r\n    //       //   console.log(subEntry.entries);\r\n    //       //   setSubContainer(false);\r\n    //       // }\r\n    //     });\r\n    //   });\r\n    // }\r\n\r\n    //End\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"unset\" }}>\r\n      <Navbar\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 1,\r\n        }}\r\n        // navTop={navTop}\r\n      >\r\n        <HamburgerButton click={openNav}></HamburgerButton>\r\n        <div>\r\n          <Link to={`/topic/${previousTopicNumberState}`}>\r\n            <ButtonH2 onClick={setCurrentUrl}>Previous Topic</ButtonH2>\r\n          </Link>\r\n\r\n          <Link to={`/topic/${nextTopicNumberState}`}>\r\n            <ButtonH2 onClick={setCurrentUrl}>Next Topic</ButtonH2>\r\n          </Link>\r\n        </div>\r\n      </Navbar>\r\n\r\n      <Transition\r\n        in={navOpen && entryStore}\r\n        timeout={300}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        {(state) => {\r\n          {\r\n            /* if (state === \"exited\") setSubContainer(false); */\r\n          } //Code for NavBar to reset to main menu every time it closes\r\n          return (\r\n            <>\r\n              <Sidenav state={state} click={closeNav} />\r\n              <div\r\n                className=\"overlay\"\r\n                style={\r\n                  state === \"entering\"\r\n                    ? { animation: \"show .3s forwards\" }\r\n                    : state === \"entered\"\r\n                    ? { opacity: \"1\" }\r\n                    : { animation: \"show .3s backwards reverse\" }\r\n                }\r\n                onClick={closeNav}\r\n              ></div>\r\n              {\r\n                <div\r\n                  className=\"closeBtn\"\r\n                  style={\r\n                    state === \"entering\"\r\n                      ? { animation: \"show .3s forwards\" }\r\n                      : state === \"entered\"\r\n                      ? { opacity: \"1\" }\r\n                      : { animation: \"show .3s backwards reverse\" }\r\n                  }\r\n                  onClick={closeNav}\r\n                >\r\n                  &times;\r\n                </div> //This is code for a close button\r\n              }\r\n            </>\r\n          );\r\n        }}\r\n      </Transition>\r\n\r\n      <BackgroundPage></BackgroundPage>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n// import Button from './components/Button.js'\r\n// import Header from './components/Header.js'\r\n// import Sidebar from './components/Sidebar.js'\r\nimport Topic from \"./components/Topic\";\r\nimport Quiz from \"./components/Quiz\";\r\nimport Button from \"./components/Button\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainSideNav from \"./components/sidebar/MainSideNav\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <MainSideNav></MainSideNav>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Button} />\r\n          <Route path=\"/topic/:topicNumber\" component={Topic} />\r\n          <Route path=\"/quiz/:topicNumber\" component={Quiz} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n\r\n  // return (\r\n  //     <>\r\n  //     <div>\r\n  //     <Router>\r\n  //     <Sidebar></Sidebar>\r\n  //     </Router>\r\n\r\n  //     </div>\r\n  //     </>\r\n  // )\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AmazonContextProvider } from \"./Contexts/AmazonContext\";\n\nReactDOM.render(\n  <div>\n    <AmazonContextProvider>\n      <App />\n    </AmazonContextProvider>\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}